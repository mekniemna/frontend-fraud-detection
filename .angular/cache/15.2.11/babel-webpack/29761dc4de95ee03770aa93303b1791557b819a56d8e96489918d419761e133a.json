{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/job.service\";\nimport * as i3 from \"@angular/common\";\nfunction JobFormComponent_div_31_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 74);\n    i0.ɵɵtext(1, \" Title is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobFormComponent_div_31_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 74);\n    i0.ɵɵtext(1, \" Location is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobFormComponent_div_31_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 74);\n    i0.ɵɵtext(1, \" Company profile is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobFormComponent_div_31_div_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 74);\n    i0.ɵɵtext(1, \" Job description is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobFormComponent_div_31_div_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 74);\n    i0.ɵɵtext(1, \" Requirements are required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobFormComponent_div_31_div_124_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 74);\n    i0.ɵɵtext(1, \" Industry is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobFormComponent_div_31_span_131_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Check Job\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobFormComponent_div_31_span_132_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 75);\n    i0.ɵɵelement(2, \"circle\", 76)(3, \"path\", 77);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" Processing... \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"border-red-500\": a0\n  };\n};\nfunction JobFormComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"h2\", 19);\n    i0.ɵɵtext(2, \"Job Details Form\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 20);\n    i0.ɵɵlistener(\"ngSubmit\", function JobFormComponent_div_31_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onSubmit());\n    });\n    i0.ɵɵelementStart(4, \"div\", 21)(5, \"div\", 22)(6, \"label\", 23);\n    i0.ɵɵtext(7, \"Title \");\n    i0.ɵɵelementStart(8, \"span\", 24);\n    i0.ɵɵtext(9, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(10, \"input\", 25);\n    i0.ɵɵtemplate(11, JobFormComponent_div_31_div_11_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 22)(13, \"label\", 27);\n    i0.ɵɵtext(14, \"Location \");\n    i0.ɵɵelementStart(15, \"span\", 24);\n    i0.ɵɵtext(16, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(17, \"input\", 28);\n    i0.ɵɵtemplate(18, JobFormComponent_div_31_div_18_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\")(20, \"label\", 29);\n    i0.ɵɵtext(21, \"Department\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(22, \"input\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"div\")(24, \"label\", 31);\n    i0.ɵɵtext(25, \"Salary Range\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(26, \"input\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"div\", 33)(28, \"label\", 34);\n    i0.ɵɵtext(29, \"Company Profile \");\n    i0.ɵɵelementStart(30, \"span\", 24);\n    i0.ɵɵtext(31, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(32, \"textarea\", 35);\n    i0.ɵɵtemplate(33, JobFormComponent_div_31_div_33_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"div\", 33)(35, \"label\", 36);\n    i0.ɵɵtext(36, \"Job Description \");\n    i0.ɵɵelementStart(37, \"span\", 24);\n    i0.ɵɵtext(38, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(39, \"textarea\", 37);\n    i0.ɵɵtemplate(40, JobFormComponent_div_31_div_40_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(41, \"div\", 33)(42, \"label\", 38);\n    i0.ɵɵtext(43, \"Requirements \");\n    i0.ɵɵelementStart(44, \"span\", 24);\n    i0.ɵɵtext(45, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(46, \"textarea\", 39);\n    i0.ɵɵtemplate(47, JobFormComponent_div_31_div_47_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(48, \"div\", 33)(49, \"label\", 40);\n    i0.ɵɵtext(50, \"Benefits\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(51, \"textarea\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(52, \"div\")(53, \"label\", 42);\n    i0.ɵɵtext(54, \"Telecommuting\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(55, \"select\", 43)(56, \"option\", 44);\n    i0.ɵɵtext(57, \"Select an option\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(58, \"option\", 44);\n    i0.ɵɵtext(59, \"Yes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(60, \"option\", 44);\n    i0.ɵɵtext(61, \"No\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(62, \"div\")(63, \"label\", 45);\n    i0.ɵɵtext(64, \"Has Company Logo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(65, \"select\", 46)(66, \"option\", 44);\n    i0.ɵɵtext(67, \"Select an option\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(68, \"option\", 44);\n    i0.ɵɵtext(69, \"Yes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(70, \"option\", 44);\n    i0.ɵɵtext(71, \"No\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(72, \"div\")(73, \"label\", 47);\n    i0.ɵɵtext(74, \"Has Questions\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(75, \"select\", 48)(76, \"option\", 44);\n    i0.ɵɵtext(77, \"Select an option\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(78, \"option\", 44);\n    i0.ɵɵtext(79, \"Yes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(80, \"option\", 44);\n    i0.ɵɵtext(81, \"No\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(82, \"div\")(83, \"label\", 49);\n    i0.ɵɵtext(84, \"Employment Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(85, \"select\", 50)(86, \"option\", 51);\n    i0.ɵɵtext(87, \"Select an option\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(88, \"option\", 52);\n    i0.ɵɵtext(89, \"Full-time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(90, \"option\", 53);\n    i0.ɵɵtext(91, \"Part-time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(92, \"option\", 54);\n    i0.ɵɵtext(93, \"Contract\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(94, \"option\", 55);\n    i0.ɵɵtext(95, \"Temporary\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(96, \"option\", 56);\n    i0.ɵɵtext(97, \"Internship\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(98, \"div\")(99, \"label\", 57);\n    i0.ɵɵtext(100, \"Required Experience (Years)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(101, \"input\", 58);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(102, \"div\")(103, \"label\", 59);\n    i0.ɵɵtext(104, \"Required Education\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(105, \"select\", 60)(106, \"option\", 51);\n    i0.ɵɵtext(107, \"Select an option\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(108, \"option\", 61);\n    i0.ɵɵtext(109, \"High School\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(110, \"option\", 62);\n    i0.ɵɵtext(111, \"Associate's Degree\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(112, \"option\", 63);\n    i0.ɵɵtext(113, \"Bachelor's Degree\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(114, \"option\", 64);\n    i0.ɵɵtext(115, \"Master's Degree\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(116, \"option\", 65);\n    i0.ɵɵtext(117, \"Doctorate\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(118, \"div\")(119, \"label\", 66);\n    i0.ɵɵtext(120, \"Industry \");\n    i0.ɵɵelementStart(121, \"span\", 24);\n    i0.ɵɵtext(122, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(123, \"input\", 67);\n    i0.ɵɵtemplate(124, JobFormComponent_div_31_div_124_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(125, \"div\")(126, \"label\", 68);\n    i0.ɵɵtext(127, \"Function\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(128, \"input\", 69);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(129, \"div\", 70)(130, \"button\", 71);\n    i0.ɵɵtemplate(131, JobFormComponent_div_31_span_131_Template, 2, 0, \"span\", 72);\n    i0.ɵɵtemplate(132, JobFormComponent_div_31_span_132_Template, 5, 0, \"span\", 73);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.jobForm);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(25, _c0, ctx_r0.isFieldInvalid(\"title\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isFieldInvalid(\"title\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(27, _c0, ctx_r0.isFieldInvalid(\"location\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isFieldInvalid(\"location\"));\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(29, _c0, ctx_r0.isFieldInvalid(\"companyProfile\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isFieldInvalid(\"companyProfile\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(31, _c0, ctx_r0.isFieldInvalid(\"description\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isFieldInvalid(\"description\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(33, _c0, ctx_r0.isFieldInvalid(\"requirements\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isFieldInvalid(\"requirements\"));\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngValue\", null);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngValue\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngValue\", false);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngValue\", null);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngValue\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngValue\", false);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngValue\", null);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngValue\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngValue\", false);\n    i0.ɵɵadvance(43);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(35, _c0, ctx_r0.isFieldInvalid(\"industry\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isFieldInvalid(\"industry\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.jobForm.invalid || ctx_r0.isSubmitting);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isSubmitting);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isSubmitting);\n  }\n}\nfunction JobFormComponent_div_32_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 74);\n    i0.ɵɵtext(1, \" Please enter a valid URL \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobFormComponent_div_32_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Scrape and Check\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobFormComponent_div_32_span_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 75);\n    i0.ɵɵelement(2, \"circle\", 76)(3, \"path\", 77);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" Processing... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobFormComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"h2\", 19);\n    i0.ɵɵtext(2, \"Job Scraper\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\", 78);\n    i0.ɵɵtext(4, \"Enter the URL of a job posting to scrape and analyze its details.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"form\", 20);\n    i0.ɵɵlistener(\"ngSubmit\", function JobFormComponent_div_32_Template_form_ngSubmit_5_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.onScraperSubmit());\n    });\n    i0.ɵɵelementStart(6, \"div\", 79)(7, \"label\", 80);\n    i0.ɵɵtext(8, \"Job Posting URL \");\n    i0.ɵɵelementStart(9, \"span\", 24);\n    i0.ɵɵtext(10, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(11, \"input\", 81);\n    i0.ɵɵtemplate(12, JobFormComponent_div_32_div_12_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 82)(14, \"button\", 71);\n    i0.ɵɵtemplate(15, JobFormComponent_div_32_span_15_Template, 2, 0, \"span\", 72);\n    i0.ɵɵtemplate(16, JobFormComponent_div_32_span_16_Template, 5, 0, \"span\", 73);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.scraperForm);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, ctx_r1.isScraperFieldInvalid(\"url\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isScraperFieldInvalid(\"url\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.scraperForm.invalid || ctx_r1.isScraperSubmitting);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.isScraperSubmitting);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isScraperSubmitting);\n  }\n}\nfunction JobFormComponent_div_33__svg_svg_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 92);\n    i0.ɵɵelement(1, \"path\", 93);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobFormComponent_div_33__svg_svg_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 94);\n    i0.ɵɵelement(1, \"path\", 95);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobFormComponent_div_33_div_10_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 100)(1, \"div\", 101);\n    i0.ɵɵtext(2, \"\\u2022\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 102);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const detail_r22 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(detail_r22);\n  }\n}\nfunction JobFormComponent_div_33_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 96)(1, \"h3\", 97);\n    i0.ɵɵtext(2, \"Analysis Details\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 98);\n    i0.ɵɵtemplate(4, JobFormComponent_div_33_div_10_div_4_Template, 5, 1, \"div\", 99);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r20 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r20.jobResult.details);\n  }\n}\nconst _c1 = function (a0, a1) {\n  return {\n    \"bg-green-100 dark:bg-green-900\": a0,\n    \"bg-red-100 dark:bg-red-900\": a1\n  };\n};\nconst _c2 = function (a0, a1) {\n  return {\n    \"bg-green-50 dark:bg-green-900/20\": a0,\n    \"bg-red-50 dark:bg-red-900/20\": a1\n  };\n};\nfunction JobFormComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 83)(1, \"div\", 84)(2, \"div\", 85);\n    i0.ɵɵtemplate(3, JobFormComponent_div_33__svg_svg_3_Template, 2, 0, \"svg\", 86);\n    i0.ɵɵtemplate(4, JobFormComponent_div_33__svg_svg_4_Template, 2, 0, \"svg\", 87);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"h2\", 88);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 89)(8, \"p\", 90);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(10, JobFormComponent_div_33_div_10_Template, 5, 1, \"div\", 91);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(7, _c1, !ctx_r2.jobResult.isFake, ctx_r2.jobResult.isFake));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.jobResult.isFake);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.jobResult.isFake);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.jobResult.isFake ? \"Potential Fake Job Detected\" : \"Job Appears Legitimate\", \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(10, _c2, !ctx_r2.jobResult.isFake, ctx_r2.jobResult.isFake));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.jobResult.message, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.jobResult.details);\n  }\n}\nexport class JobFormComponent {\n  constructor(fb, jobService) {\n    this.fb = fb;\n    this.jobService = jobService;\n    this.selectedOption = 'form';\n    this.isSubmitting = false;\n    this.isScraperSubmitting = false;\n    this.jobResult = null;\n    this.jobForm = this.fb.group({\n      title: ['', Validators.required],\n      location: ['', Validators.required],\n      department: [''],\n      salaryRange: [''],\n      companyProfile: ['', Validators.required],\n      description: ['', Validators.required],\n      requirements: ['', Validators.required],\n      benefits: [''],\n      telecommuting: [null],\n      hasCompanyLogo: [null],\n      hasQuestions: [null],\n      employmentType: [''],\n      requiredExperience: [null],\n      requiredEducation: [''],\n      industry: ['', Validators.required],\n      function: ['']\n    });\n    this.scraperForm = this.fb.group({\n      url: ['', [Validators.required, Validators.pattern('https?://.+')]]\n    });\n  }\n  ngOnInit() {}\n  onSubmit() {\n    if (this.jobForm.invalid) {\n      // Mark all fields as touched to trigger validation messages\n      Object.keys(this.jobForm.controls).forEach(key => {\n        const control = this.jobForm.get(key);\n        control?.markAsTouched();\n      });\n      return;\n    }\n    this.isSubmitting = true;\n    this.jobResult = null;\n    // Call the service to check the job\n    this.jobService.checkJob(this.jobForm.value).subscribe({\n      next: response => {\n        this.isSubmitting = false;\n        this.jobResult = {\n          isFake: response.isFake,\n          message: response.message,\n          details: response.details\n        };\n      },\n      error: error => {\n        this.isSubmitting = false;\n        console.error('Error checking job:', error);\n        // Show error message to user\n        this.jobResult = {\n          isFake: true,\n          message: 'An error occurred while checking the job. Please try again later.'\n        };\n      }\n    });\n  }\n  onScraperSubmit() {\n    if (this.scraperForm.invalid) {\n      Object.keys(this.scraperForm.controls).forEach(key => {\n        const control = this.scraperForm.get(key);\n        control?.markAsTouched();\n      });\n      return;\n    }\n    this.isScraperSubmitting = true;\n    this.jobResult = null;\n    // Call the service to scrape and check the job\n    this.jobService.scrapeJobs(this.scraperForm.value.url).subscribe({\n      next: response => {\n        this.isScraperSubmitting = false;\n        this.jobResult = {\n          isFake: response.isFake,\n          message: response.message,\n          details: response.details\n        };\n      },\n      error: error => {\n        this.isScraperSubmitting = false;\n        console.error('Error scraping job:', error);\n        // Show error message to user\n        this.jobResult = {\n          isFake: true,\n          message: 'An error occurred while scraping the job. Please try again later.'\n        };\n      }\n    });\n  }\n  isFieldInvalid(fieldName) {\n    const control = this.jobForm.get(fieldName);\n    return !!control && control.invalid && (control.dirty || control.touched);\n  }\n  isScraperFieldInvalid(fieldName) {\n    const control = this.scraperForm.get(fieldName);\n    return !!control && control.invalid && (control.dirty || control.touched);\n  }\n  static {\n    this.ɵfac = function JobFormComponent_Factory(t) {\n      return new (t || JobFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.JobService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: JobFormComponent,\n      selectors: [[\"app-job-form\"]],\n      decls: 34,\n      vars: 39,\n      consts: [[1, \"container\", \"mx-auto\", \"px-4\", \"py-8\"], [1, \"max-w-4xl\", \"mx-auto\"], [1, \"mb-8\"], [1, \"text-3xl\", \"font-bold\", \"text-gray-900\", \"dark:text-white\", \"mb-2\"], [1, \"text-gray-600\", \"dark:text-gray-300\"], [1, \"card\", \"mb-8\"], [1, \"text-xl\", \"font-semibold\", \"mb-4\", \"text-gray-800\", \"dark:text-white\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"gap-4\"], [1, \"p-6\", \"rounded-lg\", \"shadow-sm\", \"border\", \"border-gray-200\", \"dark:border-gray-700\", \"transition-colors\", \"duration-200\", \"hover:shadow-md\", 3, \"click\"], [1, \"flex\", \"items-center\"], [1, \"mr-4\", \"text-primary\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", \"stroke\", \"currentColor\", 1, \"h-8\", \"w-8\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"], [1, \"text-lg\", \"font-medium\"], [1, \"text-sm\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9\"], [\"class\", \"card\", 4, \"ngIf\"], [\"class\", \"mt-8 card\", 4, \"ngIf\"], [1, \"card\"], [1, \"text-xl\", \"font-semibold\", \"mb-6\", \"text-gray-800\", \"dark:text-white\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"gap-6\"], [1, \"col-span-2\", \"md:col-span-1\"], [\"for\", \"title\", 1, \"form-label\"], [1, \"text-red-500\"], [\"type\", \"text\", \"id\", \"title\", \"formControlName\", \"title\", \"placeholder\", \"e.g. Software Engineer\", 1, \"form-input\", 3, \"ngClass\"], [\"class\", \"mt-1 text-sm text-red-500\", 4, \"ngIf\"], [\"for\", \"location\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"location\", \"formControlName\", \"location\", \"placeholder\", \"Enter Country Name\", 1, \"form-input\", 3, \"ngClass\"], [\"for\", \"department\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"department\", \"formControlName\", \"department\", \"placeholder\", \"e.g. Engineering\", 1, \"form-input\"], [\"for\", \"salaryRange\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"salaryRange\", \"formControlName\", \"salaryRange\", \"placeholder\", \"e.g. $80,000 - $100,000\", 1, \"form-input\"], [1, \"col-span-2\"], [\"for\", \"companyProfile\", 1, \"form-label\"], [\"id\", \"companyProfile\", \"formControlName\", \"companyProfile\", \"rows\", \"3\", \"placeholder\", \"Brief description of the company\", 1, \"form-input\", 3, \"ngClass\"], [\"for\", \"description\", 1, \"form-label\"], [\"id\", \"description\", \"formControlName\", \"description\", \"rows\", \"4\", \"placeholder\", \"Detailed job description\", 1, \"form-input\", 3, \"ngClass\"], [\"for\", \"requirements\", 1, \"form-label\"], [\"id\", \"requirements\", \"formControlName\", \"requirements\", \"rows\", \"4\", \"placeholder\", \"Job requirements and qualifications\", 1, \"form-input\", 3, \"ngClass\"], [\"for\", \"benefits\", 1, \"form-label\"], [\"id\", \"benefits\", \"formControlName\", \"benefits\", \"rows\", \"3\", \"placeholder\", \"Job benefits and perks\", 1, \"form-input\"], [\"for\", \"telecommuting\", 1, \"form-label\"], [\"id\", \"telecommuting\", \"formControlName\", \"telecommuting\", 1, \"form-select\"], [3, \"ngValue\"], [\"for\", \"hasCompanyLogo\", 1, \"form-label\"], [\"id\", \"hasCompanyLogo\", \"formControlName\", \"hasCompanyLogo\", 1, \"form-select\"], [\"for\", \"hasQuestions\", 1, \"form-label\"], [\"id\", \"hasQuestions\", \"formControlName\", \"hasQuestions\", 1, \"form-select\"], [\"for\", \"employmentType\", 1, \"form-label\"], [\"id\", \"employmentType\", \"formControlName\", \"employmentType\", 1, \"form-select\"], [\"value\", \"\"], [\"value\", \"Full-time\"], [\"value\", \"Part-time\"], [\"value\", \"Contract\"], [\"value\", \"Temporary\"], [\"value\", \"Internship\"], [\"for\", \"requiredExperience\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"requiredExperience\", \"formControlName\", \"requiredExperience\", \"placeholder\", \"e.g. 3\", \"min\", \"0\", 1, \"form-input\"], [\"for\", \"requiredEducation\", 1, \"form-label\"], [\"id\", \"requiredEducation\", \"formControlName\", \"requiredEducation\", 1, \"form-select\"], [\"value\", \"High School\"], [\"value\", \"Associate's Degree\"], [\"value\", \"Bachelor's Degree\"], [\"value\", \"Master's Degree\"], [\"value\", \"Doctorate\"], [\"for\", \"industry\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"industry\", \"formControlName\", \"industry\", \"placeholder\", \"e.g. Technology\", 1, \"form-input\", 3, \"ngClass\"], [\"for\", \"function\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"function\", \"formControlName\", \"function\", \"placeholder\", \"e.g. Development\", 1, \"form-input\"], [1, \"mt-8\", \"flex\", \"justify-end\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [4, \"ngIf\"], [\"class\", \"flex items-center\", 4, \"ngIf\"], [1, \"mt-1\", \"text-sm\", \"text-red-500\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", 1, \"animate-spin\", \"-ml-1\", \"mr-2\", \"h-4\", \"w-4\", \"text-white\"], [\"cx\", \"12\", \"cy\", \"12\", \"r\", \"10\", \"stroke\", \"currentColor\", \"stroke-width\", \"4\", 1, \"opacity-25\"], [\"fill\", \"currentColor\", \"d\", \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\", 1, \"opacity-75\"], [1, \"text-gray-600\", \"dark:text-gray-300\", \"mb-6\"], [1, \"mb-6\"], [\"for\", \"url\", 1, \"form-label\"], [\"type\", \"url\", \"id\", \"url\", \"formControlName\", \"url\", \"placeholder\", \"https://example.com/job-posting\", 1, \"form-input\", 3, \"ngClass\"], [1, \"flex\", \"justify-end\"], [1, \"mt-8\", \"card\"], [1, \"flex\", \"items-center\", \"mb-4\"], [1, \"p-3\", \"rounded-full\", \"mr-4\", 3, \"ngClass\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"class\", \"h-6 w-6 text-green-600 dark:text-green-300\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", \"stroke\", \"currentColor\", 4, \"ngIf\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"class\", \"h-6 w-6 text-red-600 dark:text-red-300\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", \"stroke\", \"currentColor\", 4, \"ngIf\"], [1, \"text-xl\", \"font-semibold\", \"text-gray-800\", \"dark:text-white\"], [1, \"p-4\", \"mb-4\", \"rounded-lg\", 3, \"ngClass\"], [1, \"text-gray-800\", \"dark:text-gray-200\"], [\"class\", \"mt-6\", 4, \"ngIf\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", \"stroke\", \"currentColor\", 1, \"h-6\", \"w-6\", \"text-green-600\", \"dark:text-green-300\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M5 13l4 4L19 7\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", \"stroke\", \"currentColor\", 1, \"h-6\", \"w-6\", \"text-red-600\", \"dark:text-red-300\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M6 18L18 6M6 6l12 12\"], [1, \"mt-6\"], [1, \"text-lg\", \"font-medium\", \"mb-3\", \"text-gray-800\", \"dark:text-white\"], [1, \"space-y-2\"], [\"class\", \"flex\", 4, \"ngFor\", \"ngForOf\"], [1, \"flex\"], [1, \"mr-2\", \"text-gray-500\", \"dark:text-gray-400\"], [1, \"text-gray-700\", \"dark:text-gray-300\"]],\n      template: function JobFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n          i0.ɵɵtext(4, \"Check Job Offer\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"p\", 4);\n          i0.ɵɵtext(6, \"Verify if a job offer is legitimate or potentially fraudulent.\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 5)(8, \"h2\", 6);\n          i0.ɵɵtext(9, \"Select an option\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"div\", 7)(11, \"button\", 8);\n          i0.ɵɵlistener(\"click\", function JobFormComponent_Template_button_click_11_listener() {\n            return ctx.selectedOption = \"form\";\n          });\n          i0.ɵɵelementStart(12, \"div\", 9)(13, \"div\", 10);\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(14, \"svg\", 11);\n          i0.ɵɵelement(15, \"path\", 12);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵnamespaceHTML();\n          i0.ɵɵelementStart(16, \"div\")(17, \"h3\", 13);\n          i0.ɵɵtext(18, \"Add Job Manually\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"p\", 14);\n          i0.ɵɵtext(20, \"Enter job details manually through a form\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(21, \"button\", 8);\n          i0.ɵɵlistener(\"click\", function JobFormComponent_Template_button_click_21_listener() {\n            return ctx.selectedOption = \"scraper\";\n          });\n          i0.ɵɵelementStart(22, \"div\", 9)(23, \"div\", 10);\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(24, \"svg\", 11);\n          i0.ɵɵelement(25, \"path\", 15);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵnamespaceHTML();\n          i0.ɵɵelementStart(26, \"div\")(27, \"h3\", 13);\n          i0.ɵɵtext(28, \"Use Job Scraper\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"p\", 14);\n          i0.ɵɵtext(30, \"Scrape job details from a URL\");\n          i0.ɵɵelementEnd()()()()()();\n          i0.ɵɵtemplate(31, JobFormComponent_div_31_Template, 133, 37, \"div\", 16);\n          i0.ɵɵtemplate(32, JobFormComponent_div_32_Template, 17, 8, \"div\", 16);\n          i0.ɵɵtemplate(33, JobFormComponent_div_33_Template, 11, 13, \"div\", 17);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(11);\n          i0.ɵɵclassProp(\"bg-primary\", ctx.selectedOption === \"form\")(\"bg-white\", ctx.selectedOption !== \"form\")(\"dark:bg-dark-light\", ctx.selectedOption !== \"form\");\n          i0.ɵɵadvance(6);\n          i0.ɵɵclassProp(\"text-white\", ctx.selectedOption === \"form\")(\"text-gray-800\", ctx.selectedOption !== \"form\")(\"dark:text-white\", ctx.selectedOption !== \"form\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassProp(\"text-gray-100\", ctx.selectedOption === \"form\")(\"text-gray-600\", ctx.selectedOption !== \"form\")(\"dark:text-gray-300\", ctx.selectedOption !== \"form\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassProp(\"bg-primary\", ctx.selectedOption === \"scraper\")(\"bg-white\", ctx.selectedOption !== \"scraper\")(\"dark:bg-dark-light\", ctx.selectedOption !== \"scraper\");\n          i0.ɵɵadvance(6);\n          i0.ɵɵclassProp(\"text-white\", ctx.selectedOption === \"scraper\")(\"text-gray-800\", ctx.selectedOption !== \"scraper\")(\"dark:text-white\", ctx.selectedOption !== \"scraper\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassProp(\"text-gray-100\", ctx.selectedOption === \"scraper\")(\"text-gray-600\", ctx.selectedOption !== \"scraper\")(\"dark:text-gray-300\", ctx.selectedOption !== \"scraper\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedOption === \"form\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedOption === \"scraper\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.jobResult);\n        }\n      },\n      dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MinValidator, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJqb2ItZm9ybS5jb21wb25lbnQuY3NzIn0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvam9iLWZvcm0vam9iLWZvcm0uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0Esb0tBQW9LIiwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;ICqEvDC,+BAAuE;IACrEA,mCACF;IAAAA,iBAAM;;;;;IAcNA,+BAA0E;IACxEA,sCACF;IAAAA,iBAAM;;;;;IAsCNA,+BAAgF;IAC9EA,6CACF;IAAAA,iBAAM;;;;;IAcNA,+BAA6E;IAC3EA,6CACF;IAAAA,iBAAM;;;;;IAcNA,+BAA8E;IAC5EA,2CACF;IAAAA,iBAAM;;;;;IA+FNA,+BAA0E;IACxEA,sCACF;IAAAA,iBAAM;;;;;IAsBNA,4BAA4B;IAAAA,yBAAS;IAAAA,iBAAO;;;;;IAC5CA,+BAAqD;IACnDA,mBAA2H;IAA3HA,+BAA2H;IACzHA,6BAAkG;IAEpGA,iBAAM;IACNA,+BACF;IAAAA,iBAAO;;;;;;;;;;;IAxOfA,+BAAoD;IACmBA,gCAAgB;IAAAA,iBAAK;IAE1FA,gCAAoD;IAAxBA;MAAAA;MAAA;MAAA,OAAYA,iCAAU;IAAA,EAAC;IACjDA,+BAAmD;IAGTA,sBAAM;IAAAA,gCAA2B;IAAAA,iBAAC;IAAAA,iBAAO;IAC/EA,6BAOC;IACDA,2EAEM;IACRA,iBAAM;IAGNA,gCAAsC;IACKA,0BAAS;IAAAA,iCAA2B;IAAAA,kBAAC;IAAAA,iBAAO;IACrFA,6BAOC;IACDA,2EAEM;IACRA,iBAAM;IAGNA,4BAAK;IACwCA,2BAAU;IAAAA,iBAAQ;IAC7DA,6BAMC;IACHA,iBAAM;IAGNA,4BAAK;IACyCA,6BAAY;IAAAA,iBAAQ;IAChEA,6BAMC;IACHA,iBAAM;IAGNA,gCAAwB;IACyBA,iCAAgB;IAAAA,iCAA2B;IAAAA,kBAAC;IAAAA,iBAAO;IAClGA,gCAOY;IACZA,2EAEM;IACRA,iBAAM;IAGNA,gCAAwB;IACsBA,iCAAgB;IAAAA,iCAA2B;IAAAA,kBAAC;IAAAA,iBAAO;IAC/FA,gCAOY;IACZA,2EAEM;IACRA,iBAAM;IAGNA,gCAAwB;IACuBA,8BAAa;IAAAA,iCAA2B;IAAAA,kBAAC;IAAAA,iBAAO;IAC7FA,gCAOY;IACZA,2EAEM;IACRA,iBAAM;IAGNA,gCAAwB;IACmBA,yBAAQ;IAAAA,iBAAQ;IACzDA,gCAMY;IACdA,iBAAM;IAGNA,4BAAK;IAC2CA,8BAAa;IAAAA,iBAAQ;IACnEA,mCAA+E;IACpDA,iCAAgB;IAAAA,iBAAS;IAClDA,mCAAyB;IAAAA,oBAAG;IAAAA,iBAAS;IACrCA,mCAA0B;IAAAA,mBAAE;IAAAA,iBAAS;IAKzCA,4BAAK;IAC4CA,iCAAgB;IAAAA,iBAAQ;IACvEA,mCAAiF;IACtDA,iCAAgB;IAAAA,iBAAS;IAClDA,mCAAyB;IAAAA,oBAAG;IAAAA,iBAAS;IACrCA,mCAA0B;IAAAA,mBAAE;IAAAA,iBAAS;IAKzCA,4BAAK;IAC0CA,8BAAa;IAAAA,iBAAQ;IAClEA,mCAA6E;IAClDA,iCAAgB;IAAAA,iBAAS;IAClDA,mCAAyB;IAAAA,oBAAG;IAAAA,iBAAS;IACrCA,mCAA0B;IAAAA,mBAAE;IAAAA,iBAAS;IAKzCA,4BAAK;IAC4CA,gCAAe;IAAAA,iBAAQ;IACtEA,mCAAiF;IAC9DA,iCAAgB;IAAAA,iBAAS;IAC1CA,mCAA0B;IAAAA,0BAAS;IAAAA,iBAAS;IAC5CA,mCAA0B;IAAAA,0BAAS;IAAAA,iBAAS;IAC5CA,mCAAyB;IAAAA,yBAAQ;IAAAA,iBAAS;IAC1CA,mCAA0B;IAAAA,0BAAS;IAAAA,iBAAS;IAC5CA,mCAA2B;IAAAA,2BAAU;IAAAA,iBAAS;IAKlDA,4BAAK;IACgDA,6CAA2B;IAAAA,iBAAQ;IACtFA,8BAOC;IACHA,iBAAM;IAGNA,6BAAK;IAC+CA,oCAAkB;IAAAA,iBAAQ;IAC5EA,oCAAuF;IACpEA,kCAAgB;IAAAA,iBAAS;IAC1CA,oCAA4B;IAAAA,6BAAW;IAAAA,iBAAS;IAChDA,oCAAmC;IAAAA,oCAAkB;IAAAA,iBAAS;IAC9DA,oCAAkC;IAAAA,mCAAiB;IAAAA,iBAAS;IAC5DA,oCAAgC;IAAAA,iCAAe;IAAAA,iBAAS;IACxDA,oCAA0B;IAAAA,2BAAS;IAAAA,iBAAS;IAKhDA,6BAAK;IACsCA,2BAAS;IAAAA,kCAA2B;IAAAA,mBAAC;IAAAA,iBAAO;IACrFA,8BAOC;IACDA,6EAEM;IACRA,iBAAM;IAGNA,6BAAK;IACsCA,0BAAQ;IAAAA,iBAAQ;IACzDA,8BAMC;IACHA,iBAAM;IAGRA,iCAAmC;IAM/BA,+EAA4C;IAC5CA,+EAMO;IACTA,iBAAS;;;;IAtOPA,eAAqB;IAArBA,0CAAqB;IAWnBA,eAAuD;IAAvDA,qFAAuD;IAEnDA,eAA6B;IAA7BA,qDAA6B;IAcjCA,eAA0D;IAA1DA,wFAA0D;IAEtDA,eAAgC;IAAhCA,wDAAgC;IAsCpCA,gBAAgE;IAAhEA,8FAAgE;IAE5DA,eAAsC;IAAtCA,8DAAsC;IAc1CA,eAA6D;IAA7DA,2FAA6D;IAEzDA,eAAmC;IAAnCA,2DAAmC;IAcvCA,eAA8D;IAA9DA,4FAA8D;IAE1DA,eAAoC;IAApCA,4DAAoC;IAqBhCA,eAAgB;IAAhBA,8BAAgB;IAChBA,eAAgB;IAAhBA,8BAAgB;IAChBA,eAAiB;IAAjBA,+BAAiB;IAQjBA,eAAgB;IAAhBA,8BAAgB;IAChBA,eAAgB;IAAhBA,8BAAgB;IAChBA,eAAiB;IAAjBA,+BAAiB;IAQjBA,eAAgB;IAAhBA,8BAAgB;IAChBA,eAAgB;IAAhBA,8BAAgB;IAChBA,eAAiB;IAAjBA,+BAAiB;IAoDzBA,gBAA0D;IAA1DA,wFAA0D;IAEtDA,eAAgC;IAAhCA,wDAAgC;IAsBtCA,eAA4C;IAA5CA,wEAA4C;IAErCA,eAAmB;IAAnBA,2CAAmB;IACnBA,eAAkB;IAAlBA,0CAAkB;;;;;IA4B3BA,+BAA4E;IAC1EA,0CACF;IAAAA,iBAAM;;;;;IASJA,4BAAmC;IAAAA,gCAAgB;IAAAA,iBAAO;;;;;IAC1DA,+BAA4D;IAC1DA,mBAA2H;IAA3HA,+BAA2H;IACzHA,6BAAkG;IAEpGA,iBAAM;IACNA,+BACF;IAAAA,iBAAO;;;;;;IAjCfA,+BAAuD;IACgBA,2BAAW;IAAAA,iBAAK;IACrFA,6BAAiD;IAAAA,iFAAiE;IAAAA,iBAAI;IAEtHA,gCAA+D;IAA/BA;MAAAA;MAAA;MAAA,OAAYA,wCAAiB;IAAA,EAAC;IAC5DA,+BAAkB;IACoBA,gCAAgB;IAAAA,gCAA2B;IAAAA,kBAAC;IAAAA,iBAAO;IACvFA,6BAOC;IACDA,2EAEM;IACRA,iBAAM;IAENA,gCAA8B;IAM1BA,6EAA0D;IAC1DA,6EAMO;IACTA,iBAAS;;;;IA9BPA,eAAyB;IAAzBA,8CAAyB;IASzBA,eAA4D;IAA5DA,yFAA4D;IAExDA,eAAkC;IAAlCA,0DAAkC;IAStCA,eAAuD;IAAvDA,mFAAuD;IAEhDA,eAA0B;IAA1BA,kDAA0B;IAC1BA,eAAyB;IAAzBA,iDAAyB;;;;;IAgBlCA,mBAA2K;IAA3KA,+BAA2K;IACzKA,2BAA2F;IAC7FA,iBAAM;;;;;IACNA,mBAAsK;IAAtKA,+BAAsK;IACpKA,2BAAiG;IACnGA,iBAAM;;;;;IAgBNA,gCAA2D;IACNA,sBAAC;IAAAA,iBAAM;IAC1DA,gCAA8C;IAAAA,YAAY;IAAAA,iBAAM;;;;IAAlBA,eAAY;IAAZA,gCAAY;;;;;IALhEA,+BAA4C;IACyBA,gCAAgB;IAAAA,iBAAK;IACxFA,+BAAuB;IACrBA,gFAGM;IACRA,iBAAM;;;;IAJoBA,eAAoB;IAApBA,mDAAoB;;;;;;;;;;;;;;;;;IAxBlDA,+BAAyC;IAGnCA,8EAEM;IACNA,8EAEM;IACRA,iBAAM;IACNA,8BAAgE;IAC9DA,YACF;IAAAA,iBAAK;IAGPA,+BAAuJ;IAEnJA,YACF;IAAAA,iBAAI;IAGNA,2EAQM;IACRA,iBAAM;;;;IA5BGA,eAAiH;IAAjHA,uGAAiH;IAC9GA,eAAuB;IAAvBA,+CAAuB;IAGvBA,eAAsB;IAAtBA,8CAAsB;IAK5BA,eACF;IADEA,mHACF;IAG+BA,eAAqH;IAArHA,wGAAqH;IAElJA,eACF;IADEA,yDACF;IAGIA,eAAuB;IAAvBA,+CAAuB;;;ADnVnC,OAAM,MAAOC,gBAAgB;EAQ3BC,YACUC,EAAe,EACfC,UAAsB;IADtB,OAAE,GAAFD,EAAE;IACF,eAAU,GAAVC,UAAU;IATpB,mBAAc,GAAuB,MAAM;IAG3C,iBAAY,GAAG,KAAK;IACpB,wBAAmB,GAAG,KAAK;IAC3B,cAAS,GAAqB,IAAI;IAMhC,IAAI,CAACC,OAAO,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC3BC,KAAK,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MAChCC,QAAQ,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACS,QAAQ,CAAC;MACnCE,UAAU,EAAE,CAAC,EAAE,CAAC;MAChBC,WAAW,EAAE,CAAC,EAAE,CAAC;MACjBC,cAAc,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACS,QAAQ,CAAC;MACzCK,WAAW,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACS,QAAQ,CAAC;MACtCM,YAAY,EAAE,CAAC,EAAE,EAAEf,UAAU,CAACS,QAAQ,CAAC;MACvCO,QAAQ,EAAE,CAAC,EAAE,CAAC;MACdC,aAAa,EAAE,CAAC,IAAI,CAAC;MACrBC,cAAc,EAAE,CAAC,IAAI,CAAC;MACtBC,YAAY,EAAE,CAAC,IAAI,CAAC;MACpBC,cAAc,EAAE,CAAC,EAAE,CAAC;MACpBC,kBAAkB,EAAE,CAAC,IAAI,CAAC;MAC1BC,iBAAiB,EAAE,CAAC,EAAE,CAAC;MACvBC,QAAQ,EAAE,CAAC,EAAE,EAAEvB,UAAU,CAACS,QAAQ,CAAC;MACnCe,QAAQ,EAAE,CAAC,EAAE;KACd,CAAC;IAEF,IAAI,CAACC,WAAW,GAAG,IAAI,CAACrB,EAAE,CAACG,KAAK,CAAC;MAC/BmB,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC1B,UAAU,CAACS,QAAQ,EAAET,UAAU,CAAC2B,OAAO,CAAC,aAAa,CAAC,CAAC;KACnE,CAAC;EACJ;EAEAC,QAAQ,IACR;EAEAC,QAAQ;IACN,IAAI,IAAI,CAACvB,OAAO,CAACwB,OAAO,EAAE;MACxB;MACAC,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC1B,OAAO,CAAC2B,QAAQ,CAAC,CAACC,OAAO,CAACC,GAAG,IAAG;QAC/C,MAAMC,OAAO,GAAG,IAAI,CAAC9B,OAAO,CAAC+B,GAAG,CAACF,GAAG,CAAC;QACrCC,OAAO,EAAEE,aAAa,EAAE;MAC1B,CAAC,CAAC;MACF;;IAGF,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB,IAAI,CAACC,SAAS,GAAG,IAAI;IAErB;IACA,IAAI,CAACnC,UAAU,CAACoC,QAAQ,CAAC,IAAI,CAACnC,OAAO,CAACoC,KAAY,CAAC,CAACC,SAAS,CAAC;MAC5DC,IAAI,EAAGC,QAAQ,IAAI;QACjB,IAAI,CAACN,YAAY,GAAG,KAAK;QACzB,IAAI,CAACC,SAAS,GAAG;UACfM,MAAM,EAAED,QAAQ,CAACC,MAAM;UACvBC,OAAO,EAAEF,QAAQ,CAACE,OAAO;UACzBC,OAAO,EAAEH,QAAQ,CAACG;SACnB;MACH,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAACV,YAAY,GAAG,KAAK;QACzBW,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3C;QACA,IAAI,CAACT,SAAS,GAAG;UACfM,MAAM,EAAE,IAAI;UACZC,OAAO,EAAE;SACV;MACH;KACD,CAAC;EACJ;EAEAI,eAAe;IACb,IAAI,IAAI,CAAC1B,WAAW,CAACK,OAAO,EAAE;MAC5BC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACP,WAAW,CAACQ,QAAQ,CAAC,CAACC,OAAO,CAACC,GAAG,IAAG;QACnD,MAAMC,OAAO,GAAG,IAAI,CAACX,WAAW,CAACY,GAAG,CAACF,GAAG,CAAC;QACzCC,OAAO,EAAEE,aAAa,EAAE;MAC1B,CAAC,CAAC;MACF;;IAGF,IAAI,CAACc,mBAAmB,GAAG,IAAI;IAC/B,IAAI,CAACZ,SAAS,GAAG,IAAI;IAErB;IACA,IAAI,CAACnC,UAAU,CAACgD,UAAU,CAAC,IAAI,CAAC5B,WAAW,CAACiB,KAAK,CAAChB,GAAG,CAAC,CAACiB,SAAS,CAAC;MAC/DC,IAAI,EAAGC,QAAQ,IAAI;QACjB,IAAI,CAACO,mBAAmB,GAAG,KAAK;QAChC,IAAI,CAACZ,SAAS,GAAG;UACfM,MAAM,EAAED,QAAQ,CAACC,MAAM;UACvBC,OAAO,EAAEF,QAAQ,CAACE,OAAO;UACzBC,OAAO,EAAEH,QAAQ,CAACG;SACnB;MACH,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAACG,mBAAmB,GAAG,KAAK;QAChCF,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3C;QACA,IAAI,CAACT,SAAS,GAAG;UACfM,MAAM,EAAE,IAAI;UACZC,OAAO,EAAE;SACV;MACH;KACD,CAAC;EACJ;EAEAO,cAAc,CAACC,SAAiB;IAC9B,MAAMnB,OAAO,GAAG,IAAI,CAAC9B,OAAO,CAAC+B,GAAG,CAACkB,SAAS,CAAC;IAC3C,OAAO,CAAC,CAACnB,OAAO,IAAIA,OAAO,CAACN,OAAO,KAAKM,OAAO,CAACoB,KAAK,IAAIpB,OAAO,CAACqB,OAAO,CAAC;EAC3E;EAEAC,qBAAqB,CAACH,SAAiB;IACrC,MAAMnB,OAAO,GAAG,IAAI,CAACX,WAAW,CAACY,GAAG,CAACkB,SAAS,CAAC;IAC/C,OAAO,CAAC,CAACnB,OAAO,IAAIA,OAAO,CAACN,OAAO,KAAKM,OAAO,CAACoB,KAAK,IAAIpB,OAAO,CAACqB,OAAO,CAAC;EAC3E;;;uBApHWvD,gBAAgB;IAAA;EAAA;;;YAAhBA,gBAAgB;MAAAyD;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UCf7B9D,8BAAyC;UAG+BA,+BAAe;UAAAA,iBAAK;UACtFA,4BAA4C;UAAAA,8EAA8D;UAAAA,iBAAI;UAIhHA,8BAAuB;UACgDA,gCAAgB;UAAAA,iBAAK;UAC1FA,+BAAmD;UAE/CA;YAAA,4BAA0B,MAAM;UAAA,EAAC;UAMjCA,+BAA+B;UAE3BA,mBAA8G;UAA9GA,gCAA8G;UAC5GA,4BAAiM;UACnMA,iBAAM;UAERA,oBAAK;UAALA,4BAAK;UACkLA,iCAAgB;UAAAA,iBAAK;UAC1MA,8BAA8K;UAAAA,0DAAyC;UAAAA,iBAAI;UAKjOA,kCAMC;UALCA;YAAA,4BAA0B,SAAS;UAAA,EAAC;UAMpCA,+BAA+B;UAE3BA,mBAA8G;UAA9GA,gCAA8G;UAC5GA,4BAAkO;UACpOA,iBAAM;UAERA,oBAAK;UAALA,4BAAK;UAC2LA,gCAAe;UAAAA,iBAAK;UAClNA,8BAAuL;UAAAA,8CAA6B;UAAAA,iBAAI;UAQlOA,uEA4OM;UAGNA,qEAqCM;UAGNA,sEA8BM;UACRA,iBAAM;;;UA/VEA,gBAA8C;UAA9CA,2DAA8C;UAYVA,eAA8C;UAA9CA,2DAA8C;UAC3DA,eAAiD;UAAjDA,8DAAiD;UAOxEA,eAAiD;UAAjDA,8DAAiD;UAYbA,eAAiD;UAAjDA,8DAAiD;UAC9DA,eAAoD;UAApDA,iEAAoD;UAQ3EA,eAA+B;UAA/BA,oDAA+B;UA+O/BA,eAAkC;UAAlCA,uDAAkC;UAwClCA,eAAe;UAAfA,oCAAe","names":["Validators","i0","JobFormComponent","constructor","fb","jobService","jobForm","group","title","required","location","department","salaryRange","companyProfile","description","requirements","benefits","telecommuting","hasCompanyLogo","hasQuestions","employmentType","requiredExperience","requiredEducation","industry","function","scraperForm","url","pattern","ngOnInit","onSubmit","invalid","Object","keys","controls","forEach","key","control","get","markAsTouched","isSubmitting","jobResult","checkJob","value","subscribe","next","response","isFake","message","details","error","console","onScraperSubmit","isScraperSubmitting","scrapeJobs","isFieldInvalid","fieldName","dirty","touched","isScraperFieldInvalid","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/yassine/Images/emna/job-checker-app/src/app/pages/job-form/job-form.component.ts","/home/yassine/Images/emna/job-checker-app/src/app/pages/job-form/job-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { JobService, Job } from '../../services/job.service';\n\ninterface JobResult {\n  isFake: boolean;\n  message: string;\n  details?: string[];\n}\n\n@Component({\n  selector: 'app-job-form',\n  templateUrl: './job-form.component.html',\n  styleUrls: ['./job-form.component.css']\n})\nexport class JobFormComponent implements OnInit {\n  selectedOption: 'form' | 'scraper' = 'form';\n  jobForm: FormGroup;\n  scraperForm: FormGroup;\n  isSubmitting = false;\n  isScraperSubmitting = false;\n  jobResult: JobResult | null = null;\n\n  constructor(\n    private fb: FormBuilder,\n    private jobService: JobService\n  ) {\n    this.jobForm = this.fb.group({\n      title: ['', Validators.required],\n      location: ['', Validators.required],\n      department: [''],\n      salaryRange: [''],\n      companyProfile: ['', Validators.required],\n      description: ['', Validators.required],\n      requirements: ['', Validators.required],\n      benefits: [''],\n      telecommuting: [null],\n      hasCompanyLogo: [null],\n      hasQuestions: [null],\n      employmentType: [''],\n      requiredExperience: [null],\n      requiredEducation: [''],\n      industry: ['', Validators.required],\n      function: ['']\n    });\n\n    this.scraperForm = this.fb.group({\n      url: ['', [Validators.required, Validators.pattern('https?://.+')]]\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(): void {\n    if (this.jobForm.invalid) {\n      // Mark all fields as touched to trigger validation messages\n      Object.keys(this.jobForm.controls).forEach(key => {\n        const control = this.jobForm.get(key);\n        control?.markAsTouched();\n      });\n      return;\n    }\n\n    this.isSubmitting = true;\n    this.jobResult = null;\n\n    // Call the service to check the job\n    this.jobService.checkJob(this.jobForm.value as Job).subscribe({\n      next: (response) => {\n        this.isSubmitting = false;\n        this.jobResult = {\n          isFake: response.isFake,\n          message: response.message,\n          details: response.details\n        };\n      },\n      error: (error) => {\n        this.isSubmitting = false;\n        console.error('Error checking job:', error);\n        // Show error message to user\n        this.jobResult = {\n          isFake: true,\n          message: 'An error occurred while checking the job. Please try again later.'\n        };\n      }\n    });\n  }\n\n  onScraperSubmit(): void {\n    if (this.scraperForm.invalid) {\n      Object.keys(this.scraperForm.controls).forEach(key => {\n        const control = this.scraperForm.get(key);\n        control?.markAsTouched();\n      });\n      return;\n    }\n\n    this.isScraperSubmitting = true;\n    this.jobResult = null;\n\n    // Call the service to scrape and check the job\n    this.jobService.scrapeJobs(this.scraperForm.value.url).subscribe({\n      next: (response) => {\n        this.isScraperSubmitting = false;\n        this.jobResult = {\n          isFake: response.isFake,\n          message: response.message,\n          details: response.details\n        };\n      },\n      error: (error) => {\n        this.isScraperSubmitting = false;\n        console.error('Error scraping job:', error);\n        // Show error message to user\n        this.jobResult = {\n          isFake: true,\n          message: 'An error occurred while scraping the job. Please try again later.'\n        };\n      }\n    });\n  }\n\n  isFieldInvalid(fieldName: string): boolean {\n    const control = this.jobForm.get(fieldName);\n    return !!control && control.invalid && (control.dirty || control.touched);\n  }\n\n  isScraperFieldInvalid(fieldName: string): boolean {\n    const control = this.scraperForm.get(fieldName);\n    return !!control && control.invalid && (control.dirty || control.touched);\n  }\n}\n","<div class=\"container mx-auto px-4 py-8\">\n  <div class=\"max-w-4xl mx-auto\">\n    <div class=\"mb-8\">\n      <h1 class=\"text-3xl font-bold text-gray-900 dark:text-white mb-2\">Check Job Offer</h1>\n      <p class=\"text-gray-600 dark:text-gray-300\">Verify if a job offer is legitimate or potentially fraudulent.</p>\n    </div>\n    \n    <!-- Option Selection -->\n    <div class=\"card mb-8\">\n      <h2 class=\"text-xl font-semibold mb-4 text-gray-800 dark:text-white\">Select an option</h2>\n      <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <button \n          (click)=\"selectedOption = 'form'\" \n          [class.bg-primary]=\"selectedOption === 'form'\"\n          [class.bg-white]=\"selectedOption !== 'form'\"\n          [class.dark:bg-dark-light]=\"selectedOption !== 'form'\"\n          class=\"p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 transition-colors duration-200 hover:shadow-md\"\n        >\n          <div class=\"flex items-center\">\n            <div class=\"mr-4 text-primary\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-8 w-8\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n              </svg>\n            </div>\n            <div>\n              <h3 class=\"text-lg font-medium\" [class.text-white]=\"selectedOption === 'form'\" [class.text-gray-800]=\"selectedOption !== 'form'\" [class.dark:text-white]=\"selectedOption !== 'form'\">Add Job Manually</h3>\n              <p class=\"text-sm\" [class.text-gray-100]=\"selectedOption === 'form'\" [class.text-gray-600]=\"selectedOption !== 'form'\" [class.dark:text-gray-300]=\"selectedOption !== 'form'\">Enter job details manually through a form</p>\n            </div>\n          </div>\n        </button>\n        \n        <button \n          (click)=\"selectedOption = 'scraper'\" \n          [class.bg-primary]=\"selectedOption === 'scraper'\"\n          [class.bg-white]=\"selectedOption !== 'scraper'\"\n          [class.dark:bg-dark-light]=\"selectedOption !== 'scraper'\"\n          class=\"p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 transition-colors duration-200 hover:shadow-md\"\n        >\n          <div class=\"flex items-center\">\n            <div class=\"mr-4 text-primary\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-8 w-8\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9\" />\n              </svg>\n            </div>\n            <div>\n              <h3 class=\"text-lg font-medium\" [class.text-white]=\"selectedOption === 'scraper'\" [class.text-gray-800]=\"selectedOption !== 'scraper'\" [class.dark:text-white]=\"selectedOption !== 'scraper'\">Use Job Scraper</h3>\n              <p class=\"text-sm\" [class.text-gray-100]=\"selectedOption === 'scraper'\" [class.text-gray-600]=\"selectedOption !== 'scraper'\" [class.dark:text-gray-300]=\"selectedOption !== 'scraper'\">Scrape job details from a URL</p>\n            </div>\n          </div>\n        </button>\n      </div>\n    </div>\n    \n    <!-- Job Form -->\n    <div *ngIf=\"selectedOption === 'form'\" class=\"card\">\n      <h2 class=\"text-xl font-semibold mb-6 text-gray-800 dark:text-white\">Job Details Form</h2>\n      \n      <form [formGroup]=\"jobForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <!-- Title -->\n          <div class=\"col-span-2 md:col-span-1\">\n            <label for=\"title\" class=\"form-label\">Title <span class=\"text-red-500\">*</span></label>\n            <input \n              type=\"text\" \n              id=\"title\" \n              formControlName=\"title\" \n              class=\"form-input\" \n              placeholder=\"e.g. Software Engineer\"\n              [ngClass]=\"{'border-red-500': isFieldInvalid('title')}\"\n            >\n            <div *ngIf=\"isFieldInvalid('title')\" class=\"mt-1 text-sm text-red-500\">\n              Title is required\n            </div>\n          </div>\n          \n          <!-- Location -->\n          <div class=\"col-span-2 md:col-span-1\">\n            <label for=\"location\" class=\"form-label\">Location <span class=\"text-red-500\">*</span></label>\n            <input \n              type=\"text\" \n              id=\"location\" \n              formControlName=\"location\" \n              class=\"form-input\" \n              placeholder=\"Enter Country Name\"\n              [ngClass]=\"{'border-red-500': isFieldInvalid('location')}\"\n            >\n            <div *ngIf=\"isFieldInvalid('location')\" class=\"mt-1 text-sm text-red-500\">\n              Location is required\n            </div>\n          </div>\n          \n          <!-- Department -->\n          <div>\n            <label for=\"department\" class=\"form-label\">Department</label>\n            <input \n              type=\"text\" \n              id=\"department\" \n              formControlName=\"department\" \n              class=\"form-input\" \n              placeholder=\"e.g. Engineering\"\n            >\n          </div>\n          \n          <!-- Salary Range -->\n          <div>\n            <label for=\"salaryRange\" class=\"form-label\">Salary Range</label>\n            <input \n              type=\"text\" \n              id=\"salaryRange\" \n              formControlName=\"salaryRange\" \n              class=\"form-input\" \n              placeholder=\"e.g. $80,000 - $100,000\"\n            >\n          </div>\n          \n          <!-- Company Profile -->\n          <div class=\"col-span-2\">\n            <label for=\"companyProfile\" class=\"form-label\">Company Profile <span class=\"text-red-500\">*</span></label>\n            <textarea \n              id=\"companyProfile\" \n              formControlName=\"companyProfile\" \n              rows=\"3\" \n              class=\"form-input\" \n              placeholder=\"Brief description of the company\"\n              [ngClass]=\"{'border-red-500': isFieldInvalid('companyProfile')}\"\n            ></textarea>\n            <div *ngIf=\"isFieldInvalid('companyProfile')\" class=\"mt-1 text-sm text-red-500\">\n              Company profile is required\n            </div>\n          </div>\n          \n          <!-- Description -->\n          <div class=\"col-span-2\">\n            <label for=\"description\" class=\"form-label\">Job Description <span class=\"text-red-500\">*</span></label>\n            <textarea \n              id=\"description\" \n              formControlName=\"description\" \n              rows=\"4\" \n              class=\"form-input\" \n              placeholder=\"Detailed job description\"\n              [ngClass]=\"{'border-red-500': isFieldInvalid('description')}\"\n            ></textarea>\n            <div *ngIf=\"isFieldInvalid('description')\" class=\"mt-1 text-sm text-red-500\">\n              Job description is required\n            </div>\n          </div>\n          \n          <!-- Requirements -->\n          <div class=\"col-span-2\">\n            <label for=\"requirements\" class=\"form-label\">Requirements <span class=\"text-red-500\">*</span></label>\n            <textarea \n              id=\"requirements\" \n              formControlName=\"requirements\" \n              rows=\"4\" \n              class=\"form-input\" \n              placeholder=\"Job requirements and qualifications\"\n              [ngClass]=\"{'border-red-500': isFieldInvalid('requirements')}\"\n            ></textarea>\n            <div *ngIf=\"isFieldInvalid('requirements')\" class=\"mt-1 text-sm text-red-500\">\n              Requirements are required\n            </div>\n          </div>\n          \n          <!-- Benefits -->\n          <div class=\"col-span-2\">\n            <label for=\"benefits\" class=\"form-label\">Benefits</label>\n            <textarea \n              id=\"benefits\" \n              formControlName=\"benefits\" \n              rows=\"3\" \n              class=\"form-input\" \n              placeholder=\"Job benefits and perks\"\n            ></textarea>\n          </div>\n          \n          <!-- Telecommuting -->\n          <div>\n            <label for=\"telecommuting\" class=\"form-label\">Telecommuting</label>\n            <select id=\"telecommuting\" formControlName=\"telecommuting\" class=\"form-select\">\n              <option [ngValue]=\"null\">Select an option</option>\n              <option [ngValue]=\"true\">Yes</option>\n              <option [ngValue]=\"false\">No</option>\n            </select>\n          </div>\n          \n          <!-- Has Company Logo -->\n          <div>\n            <label for=\"hasCompanyLogo\" class=\"form-label\">Has Company Logo</label>\n            <select id=\"hasCompanyLogo\" formControlName=\"hasCompanyLogo\" class=\"form-select\">\n              <option [ngValue]=\"null\">Select an option</option>\n              <option [ngValue]=\"true\">Yes</option>\n              <option [ngValue]=\"false\">No</option>\n            </select>\n          </div>\n          \n          <!-- Has Questions -->\n          <div>\n            <label for=\"hasQuestions\" class=\"form-label\">Has Questions</label>\n            <select id=\"hasQuestions\" formControlName=\"hasQuestions\" class=\"form-select\">\n              <option [ngValue]=\"null\">Select an option</option>\n              <option [ngValue]=\"true\">Yes</option>\n              <option [ngValue]=\"false\">No</option>\n            </select>\n          </div>\n          \n          <!-- Employment Type -->\n          <div>\n            <label for=\"employmentType\" class=\"form-label\">Employment Type</label>\n            <select id=\"employmentType\" formControlName=\"employmentType\" class=\"form-select\">\n              <option value=\"\">Select an option</option>\n              <option value=\"Full-time\">Full-time</option>\n              <option value=\"Part-time\">Part-time</option>\n              <option value=\"Contract\">Contract</option>\n              <option value=\"Temporary\">Temporary</option>\n              <option value=\"Internship\">Internship</option>\n            </select>\n          </div>\n          \n          <!-- Required Experience -->\n          <div>\n            <label for=\"requiredExperience\" class=\"form-label\">Required Experience (Years)</label>\n            <input \n              type=\"number\" \n              id=\"requiredExperience\" \n              formControlName=\"requiredExperience\" \n              class=\"form-input\" \n              placeholder=\"e.g. 3\"\n              min=\"0\"\n            >\n          </div>\n          \n          <!-- Required Education -->\n          <div>\n            <label for=\"requiredEducation\" class=\"form-label\">Required Education</label>\n            <select id=\"requiredEducation\" formControlName=\"requiredEducation\" class=\"form-select\">\n              <option value=\"\">Select an option</option>\n              <option value=\"High School\">High School</option>\n              <option value=\"Associate's Degree\">Associate's Degree</option>\n              <option value=\"Bachelor's Degree\">Bachelor's Degree</option>\n              <option value=\"Master's Degree\">Master's Degree</option>\n              <option value=\"Doctorate\">Doctorate</option>\n            </select>\n          </div>\n          \n          <!-- Industry -->\n          <div>\n            <label for=\"industry\" class=\"form-label\">Industry <span class=\"text-red-500\">*</span></label>\n            <input \n              type=\"text\" \n              id=\"industry\" \n              formControlName=\"industry\" \n              class=\"form-input\" \n              placeholder=\"e.g. Technology\"\n              [ngClass]=\"{'border-red-500': isFieldInvalid('industry')}\"\n            >\n            <div *ngIf=\"isFieldInvalid('industry')\" class=\"mt-1 text-sm text-red-500\">\n              Industry is required\n            </div>\n          </div>\n          \n          <!-- Function -->\n          <div>\n            <label for=\"function\" class=\"form-label\">Function</label>\n            <input \n              type=\"text\" \n              id=\"function\" \n              formControlName=\"function\" \n              class=\"form-input\" \n              placeholder=\"e.g. Development\"\n            >\n          </div>\n        </div>\n        \n        <div class=\"mt-8 flex justify-end\">\n          <button \n            type=\"submit\" \n            class=\"btn btn-primary\"\n            [disabled]=\"jobForm.invalid || isSubmitting\"\n          >\n            <span *ngIf=\"!isSubmitting\">Check Job</span>\n            <span *ngIf=\"isSubmitting\" class=\"flex items-center\">\n              <svg class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n              </svg>\n              Processing...\n            </span>\n          </button>\n        </div>\n      </form>\n    </div>\n    \n    <!-- Job Scraper Option -->\n    <div *ngIf=\"selectedOption === 'scraper'\" class=\"card\">\n      <h2 class=\"text-xl font-semibold mb-6 text-gray-800 dark:text-white\">Job Scraper</h2>\n      <p class=\"text-gray-600 dark:text-gray-300 mb-6\">Enter the URL of a job posting to scrape and analyze its details.</p>\n      \n      <form [formGroup]=\"scraperForm\" (ngSubmit)=\"onScraperSubmit()\">\n        <div class=\"mb-6\">\n          <label for=\"url\" class=\"form-label\">Job Posting URL <span class=\"text-red-500\">*</span></label>\n          <input \n            type=\"url\" \n            id=\"url\" \n            formControlName=\"url\" \n            class=\"form-input\" \n            placeholder=\"https://example.com/job-posting\"\n            [ngClass]=\"{'border-red-500': isScraperFieldInvalid('url')}\"\n          >\n          <div *ngIf=\"isScraperFieldInvalid('url')\" class=\"mt-1 text-sm text-red-500\">\n            Please enter a valid URL\n          </div>\n        </div>\n        \n        <div class=\"flex justify-end\">\n          <button \n            type=\"submit\" \n            class=\"btn btn-primary\"\n            [disabled]=\"scraperForm.invalid || isScraperSubmitting\"\n          >\n            <span *ngIf=\"!isScraperSubmitting\">Scrape and Check</span>\n            <span *ngIf=\"isScraperSubmitting\" class=\"flex items-center\">\n              <svg class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n              </svg>\n              Processing...\n            </span>\n          </button>\n        </div>\n      </form>\n    </div>\n    \n    <!-- Results Section (will be shown after submission) -->\n    <div *ngIf=\"jobResult\" class=\"mt-8 card\">\n      <div class=\"flex items-center mb-4\">\n        <div [ngClass]=\"{'bg-green-100 dark:bg-green-900': !jobResult.isFake, 'bg-red-100 dark:bg-red-900': jobResult.isFake}\" class=\"p-3 rounded-full mr-4\">\n          <svg *ngIf=\"!jobResult.isFake\" xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6 text-green-600 dark:text-green-300\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\n          </svg>\n          <svg *ngIf=\"jobResult.isFake\" xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6 text-red-600 dark:text-red-300\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </div>\n        <h2 class=\"text-xl font-semibold text-gray-800 dark:text-white\">\n          {{ jobResult.isFake ? 'Potential Fake Job Detected' : 'Job Appears Legitimate' }}\n        </h2>\n      </div>\n      \n      <div class=\"p-4 mb-4 rounded-lg\" [ngClass]=\"{'bg-green-50 dark:bg-green-900/20': !jobResult.isFake, 'bg-red-50 dark:bg-red-900/20': jobResult.isFake}\">\n        <p class=\"text-gray-800 dark:text-gray-200\">\n          {{ jobResult.message }}\n        </p>\n      </div>\n      \n      <div *ngIf=\"jobResult.details\" class=\"mt-6\">\n        <h3 class=\"text-lg font-medium mb-3 text-gray-800 dark:text-white\">Analysis Details</h3>\n        <div class=\"space-y-2\">\n          <div *ngFor=\"let detail of jobResult.details\" class=\"flex\">\n            <div class=\"mr-2 text-gray-500 dark:text-gray-400\">•</div>\n            <div class=\"text-gray-700 dark:text-gray-300\">{{ detail }}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}