{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class JobService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/api';\n  }\n  // Add a single job\n  addJob(job) {\n    return this.http.post(`${this.apiUrl}/jobs`, job);\n  }\n  // Check if a job is fake or not\n  checkJob(job) {\n    return this.http.post(`${this.apiUrl}/check-job`, job);\n  }\n  // Scrape jobs from a URL\n  scrapeJobs(url) {\n    return this.http.post(`${this.apiUrl}/scrape-jobs`, {\n      url\n    });\n  }\n  // Get all jobs\n  getJobs() {\n    return this.http.get(`${this.apiUrl}/jobs`);\n  }\n  // Verify a specific job by ID\n  verifyJobById(jobId) {\n    return this.http.post(`${this.apiUrl}/verify-job/${jobId}`, {});\n  }\n  static {\n    this.ɵfac = function JobService_Factory(t) {\n      return new (t || JobService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: JobService,\n      factory: JobService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":";;AAiCA,OAAM,MAAOA,UAAU;EAGrBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,2BAA2B;EAEJ;EAExC;EACAC,MAAM,CAACC,GAAQ;IACb,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,GAAG,IAAI,CAACC,MAAM,OAAO,EAAEF,GAAG,CAAC;EACnD;EAEA;EACAG,QAAQ,CAACH,GAAQ;IACf,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,GAAG,IAAI,CAACC,MAAM,YAAY,EAAEF,GAAG,CAAC;EACxD;EAEA;EACAI,UAAU,CAACC,GAAW;IACpB,OAAO,IAAI,CAACP,IAAI,CAACG,IAAI,CAAC,GAAG,IAAI,CAACC,MAAM,cAAc,EAAE;MAAEG;IAAG,CAAE,CAAC;EAC9D;EAEA;EACAC,OAAO;IACL,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAQ,GAAG,IAAI,CAACL,MAAM,OAAO,CAAC;EACpD;EAEA;EACAM,aAAa,CAACC,KAAa;IACzB,OAAO,IAAI,CAACX,IAAI,CAACG,IAAI,CAAwB,GAAG,IAAI,CAACC,MAAM,eAAeO,KAAK,EAAE,EAAE,EAAE,CAAC;EACxF;;;uBA5BWb,UAAU;IAAA;EAAA;;;aAAVA,UAAU;MAAAc,SAAVd,UAAU;MAAAe,YAFT;IAAM;EAAA","names":["JobService","constructor","http","addJob","job","post","apiUrl","checkJob","scrapeJobs","url","getJobs","get","verifyJobById","jobId","factory","providedIn"],"sourceRoot":"","sources":["/home/yassine/Images/emna/job-checker-app/src/app/services/job.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport interface Job {\n  title: string;\n  location: string;\n  department?: string;\n  salaryRange?: string;\n  companyProfile: string;\n  description: string;\n  requirements: string;\n  benefits?: string;\n  telecommuting?: boolean;\n  hasCompanyLogo?: boolean;\n  hasQuestions?: boolean;\n  employmentType?: string;\n  requiredExperience?: number;\n  requiredEducation?: string;\n  industry: string;\n  function?: string;\n  id?: string; \n}\n\nexport interface JobVerificationResult {\n  isFake: boolean;\n  message: string;\n  details?: string[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobService {\n  private apiUrl = 'http://localhost:3000/api'; \n\n  constructor(private http: HttpClient) { }\n\n  // Add a single job\n  addJob(job: Job): Observable<any> {\n    return this.http.post(`${this.apiUrl}/jobs`, job);\n  }\n\n  // Check if a job is fake or not\n  checkJob(job: Job): Observable<any> {\n    return this.http.post(`${this.apiUrl}/check-job`, job);\n  }\n\n  // Scrape jobs from a URL\n  scrapeJobs(url: string): Observable<any> {\n    return this.http.post(`${this.apiUrl}/scrape-jobs`, { url });\n  }\n  \n  // Get all jobs\n  getJobs(): Observable<Job[]> {\n    return this.http.get<Job[]>(`${this.apiUrl}/jobs`);\n  }\n  \n  // Verify a specific job by ID\n  verifyJobById(jobId: string): Observable<JobVerificationResult> {\n    return this.http.post<JobVerificationResult>(`${this.apiUrl}/verify-job/${jobId}`, {});\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}