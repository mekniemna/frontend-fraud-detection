{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction ThemeToggleComponent__svg_svg_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 3);\n    i0.ɵɵelement(1, \"path\", 4);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ThemeToggleComponent__svg_svg_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 5);\n    i0.ɵɵelement(1, \"path\", 6);\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ThemeToggleComponent {\n  constructor() {\n    this.isDarkMode = false;\n  }\n  ngOnInit() {\n    // Check if user has a theme preference in localStorage\n    const savedTheme = localStorage.getItem('theme');\n    // Check if user prefers dark mode at OS level\n    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    // Set initial theme based on saved preference or OS preference\n    if (savedTheme === 'dark' || !savedTheme && prefersDark) {\n      this.setDarkMode();\n    } else {\n      this.setLightMode();\n    }\n  }\n  toggleTheme() {\n    if (this.isDarkMode) {\n      this.setLightMode();\n    } else {\n      this.setDarkMode();\n    }\n  }\n  setDarkMode() {\n    this.isDarkMode = true;\n    document.documentElement.classList.add('dark');\n    localStorage.setItem('theme', 'dark');\n  }\n  setLightMode() {\n    this.isDarkMode = false;\n    document.documentElement.classList.remove('dark');\n    localStorage.setItem('theme', 'light');\n  }\n  static {\n    this.ɵfac = function ThemeToggleComponent_Factory(t) {\n      return new (t || ThemeToggleComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ThemeToggleComponent,\n      selectors: [[\"app-theme-toggle\"]],\n      decls: 3,\n      vars: 2,\n      consts: [[\"aria-label\", \"Toggle dark mode\", 1, \"p-2\", \"rounded-full\", \"hover:bg-gray-200\", \"dark:hover:bg-gray-700\", \"transition-colors\", \"duration-200\", \"focus:outline-none\", 3, \"click\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"class\", \"h-5 w-5 text-yellow-400\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", \"stroke\", \"currentColor\", 4, \"ngIf\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"class\", \"h-5 w-5 text-gray-700\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", \"stroke\", \"currentColor\", 4, \"ngIf\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", \"stroke\", \"currentColor\", 1, \"h-5\", \"w-5\", \"text-yellow-400\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", \"stroke\", \"currentColor\", 1, \"h-5\", \"w-5\", \"text-gray-700\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\"]],\n      template: function ThemeToggleComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"button\", 0);\n          i0.ɵɵlistener(\"click\", function ThemeToggleComponent_Template_button_click_0_listener() {\n            return ctx.toggleTheme();\n          });\n          i0.ɵɵtemplate(1, ThemeToggleComponent__svg_svg_1_Template, 2, 0, \"svg\", 1);\n          i0.ɵɵtemplate(2, ThemeToggleComponent__svg_svg_2_Template, 2, 0, \"svg\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isDarkMode);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isDarkMode);\n        }\n      },\n      dependencies: [i1.NgIf],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0aGVtZS10b2dnbGUuY29tcG9uZW50LmNzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90aGVtZS10b2dnbGUvdGhlbWUtdG9nZ2xlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLHdLQUF3SyIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":";;;;IAMEA,mBAOC;IAPDA,8BAOC;IACCA,0BAKE;IACJA,iBAAM;;;;;IAGNA,mBAOC;IAPDA,8BAOC;IACCA,0BAKE;IACJA,iBAAM;;;AC9BR,OAAM,MAAOC,oBAAoB;EAG/BC;IAFA,eAAU,GAAG,KAAK;EAEF;EAEhBC,QAAQ;IACN;IACA,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAEhD;IACA,MAAMC,WAAW,GAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;IAE7E;IACA,IAAIN,UAAU,KAAK,MAAM,IAAK,CAACA,UAAU,IAAIG,WAAY,EAAE;MACzD,IAAI,CAACI,WAAW,EAAE;KACnB,MAAM;MACL,IAAI,CAACC,YAAY,EAAE;;EAEvB;EAEAC,WAAW;IACT,IAAI,IAAI,CAACC,UAAU,EAAE;MACnB,IAAI,CAACF,YAAY,EAAE;KACpB,MAAM;MACL,IAAI,CAACD,WAAW,EAAE;;EAEtB;EAEQA,WAAW;IACjB,IAAI,CAACG,UAAU,GAAG,IAAI;IACtBC,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAC9Cb,YAAY,CAACc,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC;EACvC;EAEQP,YAAY;IAClB,IAAI,CAACE,UAAU,GAAG,KAAK;IACvBC,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACG,MAAM,CAAC,MAAM,CAAC;IACjDf,YAAY,CAACc,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC;EACxC;;;uBAtCWlB,oBAAoB;IAAA;EAAA;;;YAApBA,oBAAoB;MAAAoB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UDPjCzB,iCAIC;UAHCA;YAAA,OAAS0B,iBAAa;UAAA,EAAC;UAKvB1B,0EAcM;UAGNA,0EAcM;UACRA,iBAAS;;;UA/BJA,eAAgB;UAAhBA,qCAAgB;UAiBhBA,eAAiB;UAAjBA,sCAAiB","names":["i0","ThemeToggleComponent","constructor","ngOnInit","savedTheme","localStorage","getItem","prefersDark","window","matchMedia","matches","setDarkMode","setLightMode","toggleTheme","isDarkMode","document","documentElement","classList","add","setItem","remove","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\HP\\Downloads\\job-checker\\job-checker\\src\\app\\components\\theme-toggle\\theme-toggle.component.html","C:\\Users\\HP\\Downloads\\job-checker\\job-checker\\src\\app\\components\\theme-toggle\\theme-toggle.component.ts"],"sourcesContent":["<button \n  (click)=\"toggleTheme()\" \n  class=\"p-2 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors duration-200 focus:outline-none\"\n  aria-label=\"Toggle dark mode\"\n>\n  <!-- Sun icon for dark mode -->\n  <svg \n    *ngIf=\"isDarkMode\" \n    xmlns=\"http://www.w3.org/2000/svg\" \n    class=\"h-5 w-5 text-yellow-400\" \n    fill=\"none\" \n    viewBox=\"0 0 24 24\" \n    stroke=\"currentColor\"\n  >\n    <path \n      stroke-linecap=\"round\" \n      stroke-linejoin=\"round\" \n      stroke-width=\"2\" \n      d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" \n    />\n  </svg>\n  \n  <!-- Moon icon for light mode -->\n  <svg \n    *ngIf=\"!isDarkMode\" \n    xmlns=\"http://www.w3.org/2000/svg\" \n    class=\"h-5 w-5 text-gray-700\" \n    fill=\"none\" \n    viewBox=\"0 0 24 24\" \n    stroke=\"currentColor\"\n  >\n    <path \n      stroke-linecap=\"round\" \n      stroke-linejoin=\"round\" \n      stroke-width=\"2\" \n      d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\" \n    />\n  </svg>\n</button>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-theme-toggle',\n  templateUrl: './theme-toggle.component.html',\n  styleUrls: ['./theme-toggle.component.css']\n})\nexport class ThemeToggleComponent implements OnInit {\n  isDarkMode = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    // Check if user has a theme preference in localStorage\n    const savedTheme = localStorage.getItem('theme');\n    \n    // Check if user prefers dark mode at OS level\n    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    \n    // Set initial theme based on saved preference or OS preference\n    if (savedTheme === 'dark' || (!savedTheme && prefersDark)) {\n      this.setDarkMode();\n    } else {\n      this.setLightMode();\n    }\n  }\n\n  toggleTheme(): void {\n    if (this.isDarkMode) {\n      this.setLightMode();\n    } else {\n      this.setDarkMode();\n    }\n  }\n\n  private setDarkMode(): void {\n    this.isDarkMode = true;\n    document.documentElement.classList.add('dark');\n    localStorage.setItem('theme', 'dark');\n  }\n\n  private setLightMode(): void {\n    this.isDarkMode = false;\n    document.documentElement.classList.remove('dark');\n    localStorage.setItem('theme', 'light');\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}