{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class JobService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/api';\n  }\n  /**\n   * Submits a job to the backend for verification\n   * @param jobData The job data to verify\n   * @returns An observable with the verification result\n   */\n  verifyJob(jobData) {\n    return this.http.post(`${this.apiUrl}/verify-job`, jobData);\n  }\n  /**\n   * Checks a job posting for legitimacy\n   * @param jobData The job data to check\n   * @returns An observable with the verification result\n   */\n  checkJob(jobData) {\n    return this.http.post(`${this.apiUrl}/check-job`, jobData);\n  }\n  /**\n   * Scrapes jobs from a provided URL\n   * @param url The URL to scrape jobs from\n   * @returns An observable with the scraped job data and verification result\n   */\n  scrapeJobs(url) {\n    return this.http.post(`${this.apiUrl}/scrape-jobs`, {\n      url\n    });\n  }\n  /**\n   * Retrieves a list of all jobs from the backend\n   * @returns An observable with an array of jobs\n   */\n  getJobs() {\n    return this.http.get(`${this.apiUrl}/jobs`);\n  }\n  /**\n   * Verifies a specific job by its ID\n   * @param jobId The ID of the job to verify\n   * @returns An observable with the verification result\n   */\n  verifyJobById(jobId) {\n    return this.http.post(`${this.apiUrl}/verify-job/${jobId}`, {});\n  }\n  static {\n    this.ɵfac = function JobService_Factory(t) {\n      return new (t || JobService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: JobService,\n      factory: JobService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,UAAU;EAGrBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,2BAA2B;EAEJ;EAExC;;;;;EAKAC,SAAS,CAACC,OAAY;IACpB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,GAAG,IAAI,CAACC,MAAM,aAAa,EAAEF,OAAO,CAAC;EAC7D;EAEA;;;;;EAKAG,QAAQ,CAACH,OAAY;IACnB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAwB,GAAG,IAAI,CAACC,MAAM,YAAY,EAAEF,OAAO,CAAC;EACnF;EAEA;;;;;EAKAI,UAAU,CAACC,GAAW;IACpB,OAAO,IAAI,CAACP,IAAI,CAACG,IAAI,CACnB,GAAG,IAAI,CAACC,MAAM,cAAc,EAC5B;MAAEG;IAAG,CAAE,CACR;EACH;EAEA;;;;EAIOC,OAAO;IACZ,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAQ,GAAG,IAAI,CAACL,MAAM,OAAO,CAAC;EACpD;EAEA;;;;;EAKOM,aAAa,CAACC,KAAa;IAChC,OAAO,IAAI,CAACX,IAAI,CAACG,IAAI,CAAwB,GAAG,IAAI,CAACC,MAAM,eAAeO,KAAK,EAAE,EAAE,EAAE,CAAC;EACxF;;;uBAlDWb,UAAU;IAAA;EAAA;;;aAAVA,UAAU;MAAAc,SAAVd,UAAU;MAAAe,YAFT;IAAM;EAAA","names":["JobService","constructor","http","verifyJob","jobData","post","apiUrl","checkJob","scrapeJobs","url","getJobs","get","verifyJobById","jobId","factory","providedIn"],"sourceRoot":"","sources":["/home/yassine/Images/emna/job-checker-app/src/app/services/job.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Job, JobVerificationResult } from '../models/job.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobService {\n  private apiUrl = 'http://localhost:3000/api';\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Submits a job to the backend for verification\n   * @param jobData The job data to verify\n   * @returns An observable with the verification result\n   */\n  verifyJob(jobData: any): Observable<any> {\n    return this.http.post(`${this.apiUrl}/verify-job`, jobData);\n  }\n\n  /**\n   * Checks a job posting for legitimacy\n   * @param jobData The job data to check\n   * @returns An observable with the verification result\n   */\n  checkJob(jobData: Job): Observable<JobVerificationResult> {\n    return this.http.post<JobVerificationResult>(`${this.apiUrl}/check-job`, jobData);\n  }\n\n  /**\n   * Scrapes jobs from a provided URL\n   * @param url The URL to scrape jobs from\n   * @returns An observable with the scraped job data and verification result\n   */\n  scrapeJobs(url: string): Observable<{isFake: boolean, message: string, details?: string[], job?: Job}> {\n    return this.http.post<{isFake: boolean, message: string, details?: string[], job?: Job}>(\n      `${this.apiUrl}/scrape-jobs`, \n      { url }\n    );\n  }\n\n  /**\n   * Retrieves a list of all jobs from the backend\n   * @returns An observable with an array of jobs\n   */\n  public getJobs(): Observable<Job[]> {\n    return this.http.get<Job[]>(`${this.apiUrl}/jobs`);\n  }\n\n  /**\n   * Verifies a specific job by its ID\n   * @param jobId The ID of the job to verify\n   * @returns An observable with the verification result\n   */\n  public verifyJobById(jobId: string): Observable<JobVerificationResult> {\n    return this.http.post<JobVerificationResult>(`${this.apiUrl}/verify-job/${jobId}`, {});\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}