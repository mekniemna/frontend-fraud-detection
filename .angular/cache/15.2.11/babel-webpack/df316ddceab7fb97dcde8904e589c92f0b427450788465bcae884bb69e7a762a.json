{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/job.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../components/ripple-effect/ripple-effect.component\";\nimport * as i5 from \"../../components/loading-animation/loading-animation.component\";\nimport * as i6 from \"../../directives/tooltip.directive\";\nimport * as i7 from \"../../components/scroll-to-top/scroll-to-top.component\";\nfunction JobListingsComponent_option_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const industry_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", industry_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(industry_r5);\n  }\n}\nfunction JobListingsComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵelement(1, \"app-loading-animation\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"isDarkMode\", ctx_r1.isDarkMode);\n  }\n}\nfunction JobListingsComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 27)(1, \"div\", 28);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(2, \"svg\", 29);\n    i0.ɵɵelement(3, \"path\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(4, \"div\")(5, \"h3\", 31);\n    i0.ɵɵtext(6, \"Error loading jobs\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 32)(8, \"p\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 33)(11, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function JobListingsComponent_div_30_Template_button_click_11_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.loadJobs());\n    });\n    i0.ɵɵtext(12, \" Try Again \");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate(ctx_r2.error);\n  }\n}\nfunction JobListingsComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 36);\n    i0.ɵɵelement(2, \"path\", 37);\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(3, \"h3\", 38);\n    i0.ɵɵtext(4, \"No jobs found\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 39);\n    i0.ɵɵtext(6, \"Try adjusting your search or filter criteria.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 40)(8, \"button\", 41);\n    i0.ɵɵlistener(\"click\", function JobListingsComponent_div_31_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.resetFilters());\n    });\n    i0.ɵɵtext(9, \" Reset Filters \");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction JobListingsComponent_div_32_div_1_div_29__svg_svg_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 73);\n    i0.ɵɵelement(1, \"path\", 74);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobListingsComponent_div_32_div_1_div_29__svg_svg_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 75);\n    i0.ɵɵelement(1, \"path\", 30);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobListingsComponent_div_32_div_1_div_29_ul_9_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const detail_r21 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", detail_r21, \" \");\n  }\n}\nfunction JobListingsComponent_div_32_div_1_div_29_ul_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 76);\n    i0.ɵɵtemplate(1, JobListingsComponent_div_32_div_1_div_29_ul_9_li_1_Template, 2, 1, \"li\", 77);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const job_r11 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r19.verificationResults[job_r11.id].result.details);\n  }\n}\nconst _c0 = function (a0, a1, a2, a3) {\n  return {\n    \"bg-green-50\": a0,\n    \"dark:bg-green-900/20\": a1,\n    \"bg-red-50\": a2,\n    \"dark:bg-red-900/20\": a3\n  };\n};\nconst _c1 = function (a0, a1, a2, a3) {\n  return {\n    \"text-green-800\": a0,\n    \"dark:text-green-400\": a1,\n    \"text-red-800\": a2,\n    \"dark:text-red-400\": a3\n  };\n};\nconst _c2 = function (a0, a1, a2, a3) {\n  return {\n    \"text-green-700\": a0,\n    \"dark:text-green-300\": a1,\n    \"text-red-700\": a2,\n    \"dark:text-red-300\": a3\n  };\n};\nfunction JobListingsComponent_div_32_div_1_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 64)(1, \"div\", 65)(2, \"div\", 66);\n    i0.ɵɵtemplate(3, JobListingsComponent_div_32_div_1_div_29__svg_svg_3_Template, 2, 0, \"svg\", 67);\n    i0.ɵɵtemplate(4, JobListingsComponent_div_32_div_1_div_29__svg_svg_4_Template, 2, 0, \"svg\", 68);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 69)(6, \"h3\", 70);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 71);\n    i0.ɵɵtemplate(9, JobListingsComponent_div_32_div_1_div_29_ul_9_Template, 2, 1, \"ul\", 72);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const job_r11 = i0.ɵɵnextContext().$implicit;\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(7, _c0, !ctx_r13.verificationResults[job_r11.id].result.isFake, !ctx_r13.verificationResults[job_r11.id].result.isFake, ctx_r13.verificationResults[job_r11.id].result.isFake, ctx_r13.verificationResults[job_r11.id].result.isFake));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r13.verificationResults[job_r11.id].result.isFake);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r13.verificationResults[job_r11.id].result.isFake);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(12, _c1, !ctx_r13.verificationResults[job_r11.id].result.isFake, !ctx_r13.verificationResults[job_r11.id].result.isFake, ctx_r13.verificationResults[job_r11.id].result.isFake, ctx_r13.verificationResults[job_r11.id].result.isFake));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r13.verificationResults[job_r11.id].result.message, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(17, _c2, !ctx_r13.verificationResults[job_r11.id].result.isFake, !ctx_r13.verificationResults[job_r11.id].result.isFake, ctx_r13.verificationResults[job_r11.id].result.isFake, ctx_r13.verificationResults[job_r11.id].result.isFake));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r13.verificationResults[job_r11.id].result.details == null ? null : ctx_r13.verificationResults[job_r11.id].result.details.length);\n  }\n}\nfunction JobListingsComponent_div_32_div_1_button_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 78);\n    i0.ɵɵlistener(\"click\", function JobListingsComponent_div_32_div_1_button_31_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const job_r11 = i0.ɵɵnextContext().$implicit;\n      const ctx_r24 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r24.verifyJob(job_r11.id));\n    });\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2, \"Verify Job\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction JobListingsComponent_div_32_div_1_button_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 79);\n    i0.ɵɵelement(1, \"app-loading-animation\", 80);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"size\", \"small\")(\"color\", \"white\")(\"isDarkMode\", ctx_r15.isDarkMode);\n  }\n}\nfunction JobListingsComponent_div_32_div_1_button_33_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 81);\n    i0.ɵɵlistener(\"click\", function JobListingsComponent_div_32_div_1_button_33_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r29);\n      const job_r11 = i0.ɵɵnextContext().$implicit;\n      const ctx_r27 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r27.verifyJob(job_r11.id));\n    });\n    i0.ɵɵtext(1, \" Verify Again \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobListingsComponent_div_32_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 44);\n    i0.ɵɵelement(1, \"app-ripple-effect\", 45);\n    i0.ɵɵelementStart(2, \"div\", 46)(3, \"div\", 47)(4, \"div\")(5, \"h2\", 48);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\", 49);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 50)(10, \"span\", 51);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(12, \"div\", 52);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(13, \"svg\", 53);\n    i0.ɵɵelement(14, \"path\", 54);\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(15, \"span\");\n    i0.ɵɵtext(16);\n    i0.ɵɵpipe(17, \"date\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(18, \"div\", 55)(19, \"h3\", 56);\n    i0.ɵɵtext(20, \"Company Profile\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"p\", 57);\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"h3\", 56);\n    i0.ɵɵtext(24, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"p\", 57);\n    i0.ɵɵtext(26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"button\", 58);\n    i0.ɵɵlistener(\"click\", function JobListingsComponent_div_32_div_1_Template_button_click_27_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r31);\n      const job_r11 = restoredCtx.$implicit;\n      const ctx_r30 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r30.expandDescription(job_r11.id));\n    });\n    i0.ɵɵtext(28, \" View more details \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(29, JobListingsComponent_div_32_div_1_div_29_Template, 10, 22, \"div\", 59);\n    i0.ɵɵelementStart(30, \"div\", 60);\n    i0.ɵɵtemplate(31, JobListingsComponent_div_32_div_1_button_31_Template, 3, 0, \"button\", 61);\n    i0.ɵɵtemplate(32, JobListingsComponent_div_32_div_1_button_32_Template, 2, 3, \"button\", 62);\n    i0.ɵɵtemplate(33, JobListingsComponent_div_32_div_1_button_33_Template, 2, 0, \"button\", 63);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const job_r11 = ctx.$implicit;\n    const i_r12 = ctx.index;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"animation-delay\", i_r12 * 100 + \"ms\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"color\", \"rgba(59, 130, 246, 0.1)\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(job_r11.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(job_r11.location);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", job_r11.industry, \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"Posted \", i0.ɵɵpipeBind2(17, 13, job_r11.createdAt, \"mediumDate\"), \"\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(job_r11.companyProfile);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(job_r11.description);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", job_r11.id && ctx_r10.verificationResults[job_r11.id] && ctx_r10.verificationResults[job_r11.id].result);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", job_r11.id && !ctx_r10.verificationResults[job_r11.id]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", job_r11.id && ctx_r10.verificationResults[job_r11.id] && ctx_r10.verificationResults[job_r11.id].isVerifying);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", job_r11.id && ctx_r10.verificationResults[job_r11.id] && ctx_r10.verificationResults[job_r11.id].result);\n  }\n}\nfunction JobListingsComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 42);\n    i0.ɵɵtemplate(1, JobListingsComponent_div_32_div_1_Template, 34, 16, \"div\", 43);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.filteredJobs);\n  }\n}\nexport class JobListingsComponent {\n  constructor(jobService, renderer) {\n    this.jobService = jobService;\n    this.renderer = renderer;\n    this.jobs = [];\n    this.filteredJobs = [];\n    this.isLoading = true;\n    this.error = null;\n    this.searchTerm = '';\n    this.selectedFilter = 'all';\n    this.sortOption = 'newest';\n    this.verificationResults = {};\n    this.cardAnimationState = {};\n    this.animationDelayIncrement = 100; // ms between each card animation\n    this.isDarkMode = false;\n    // Sample job data for demonstration\n    this.sampleJobs = [{\n      id: 'job1',\n      title: 'Senior Frontend Developer',\n      company: 'TechGrowth Inc.',\n      location: 'San Francisco, CA (Remote)',\n      description: 'We are looking for an experienced Frontend Developer proficient in Angular, React, or Vue.js to join our growing team. You will be responsible for building user interfaces for our enterprise SaaS platform.',\n      requirements: 'At least 5 years of experience with modern JavaScript frameworks. Strong understanding of responsive design, accessibility, and performance optimization.',\n      salary: '$120,000 - $150,000',\n      industry: 'Technology',\n      companyProfile: 'TechGrowth is a leading SaaS provider with over 500 enterprise clients worldwide. Our platform helps businesses streamline their operations and increase productivity.',\n      createdAt: new Date('2025-05-20').toISOString(),\n      employmentType: 'Full-time',\n      benefits: ['Health insurance', 'Remote work', '401(k) matching', 'Unlimited PTO'],\n      requiredExperience: '5+ years',\n      requiredEducation: 'Bachelor\\'s degree'\n    }, {\n      id: 'job2',\n      title: 'UX/UI Designer',\n      company: 'Creative Solutions',\n      location: 'New York, NY',\n      description: 'Join our creative team to design beautiful and intuitive user experiences for our clients. You will collaborate with developers and product managers to create designs that delight users.',\n      requirements: 'Proficiency in Figma, Adobe XD, or Sketch. Experience with user research and usability testing. Portfolio demonstrating strong visual design skills.',\n      salary: '$90,000 - $110,000',\n      industry: 'Design',\n      companyProfile: 'Creative Solutions is a design agency that works with startups and established companies to create memorable brand experiences and digital products.',\n      createdAt: new Date('2025-05-15').toISOString(),\n      employmentType: 'Full-time',\n      benefits: ['Health insurance', 'Flexible hours', 'Creative workspace'],\n      requiredExperience: '3+ years',\n      requiredEducation: 'Bachelor\\'s degree in Design or related field'\n    }, {\n      id: 'job3',\n      title: 'Data Scientist',\n      company: 'DataInsights',\n      location: 'Boston, MA (Hybrid)',\n      description: 'We\\'re seeking a talented Data Scientist to help us extract insights from complex datasets. You will build machine learning models and work with our engineering team to implement data-driven solutions.',\n      requirements: 'Strong background in statistics and machine learning. Experience with Python, R, and SQL. Familiarity with big data technologies like Spark.',\n      salary: '$130,000 - $160,000',\n      industry: 'Data Science',\n      companyProfile: 'DataInsights helps companies make better decisions through advanced analytics and machine learning. We work with clients in finance, healthcare, and retail.',\n      createdAt: new Date('2025-05-25').toISOString(),\n      employmentType: 'Full-time',\n      benefits: ['Competitive salary', 'Health benefits', 'Continuing education allowance'],\n      requiredExperience: '4+ years',\n      requiredEducation: 'Master\\'s or PhD in Computer Science, Statistics, or related field'\n    }, {\n      id: 'job4',\n      title: 'DevOps Engineer',\n      company: 'CloudNative Systems',\n      location: 'Austin, TX (Remote)',\n      description: 'Help us build and maintain our cloud infrastructure. You will work with our development team to implement CI/CD pipelines, manage Kubernetes clusters, and ensure high availability of our services.',\n      requirements: 'Experience with AWS, Azure, or GCP. Knowledge of containerization technologies like Docker and Kubernetes. Familiarity with Infrastructure as Code tools like Terraform.',\n      salary: '$115,000 - $140,000',\n      industry: 'Cloud Computing',\n      companyProfile: 'CloudNative Systems provides cloud infrastructure solutions for businesses of all sizes. We help companies migrate to the cloud and optimize their infrastructure for performance and cost.',\n      createdAt: new Date('2025-05-10').toISOString(),\n      employmentType: 'Full-time',\n      benefits: ['Remote work', 'Flexible hours', 'Home office stipend'],\n      requiredExperience: '3+ years',\n      requiredEducation: 'Bachelor\\'s degree in Computer Science or equivalent experience'\n    }, {\n      id: 'job5',\n      title: 'Product Manager',\n      company: 'InnovateTech',\n      location: 'Seattle, WA',\n      description: 'Lead the development of our flagship product from conception to launch. You will work with cross-functional teams to define product requirements, create roadmaps, and ensure successful delivery.',\n      requirements: 'Experience managing software products. Strong analytical and communication skills. Ability to translate business needs into product features.',\n      salary: '$125,000 - $155,000',\n      industry: 'Product Management',\n      companyProfile: 'InnovateTech creates cutting-edge software solutions that help businesses automate their workflows and increase efficiency. Our products are used by thousands of companies worldwide.',\n      createdAt: new Date('2025-05-05').toISOString(),\n      employmentType: 'Full-time',\n      benefits: ['Competitive salary', 'Stock options', 'Health benefits'],\n      requiredExperience: '5+ years',\n      requiredEducation: 'Bachelor\\'s degree'\n    }, {\n      id: 'job6',\n      title: 'Backend Developer',\n      company: 'ServerSide Solutions',\n      location: 'Chicago, IL (Hybrid)',\n      description: 'Join our backend team to build scalable and reliable APIs and services. You will work with modern technologies to create the backbone of our applications.',\n      requirements: 'Proficiency in Node.js, Python, or Java. Experience with RESTful APIs and microservices architecture. Knowledge of database systems like PostgreSQL or MongoDB.',\n      salary: '$110,000 - $135,000',\n      industry: 'Technology',\n      companyProfile: 'ServerSide Solutions specializes in building robust backend systems for web and mobile applications. We work with startups and enterprise clients to create scalable solutions.',\n      createdAt: new Date('2025-05-18').toISOString(),\n      employmentType: 'Full-time',\n      benefits: ['Health insurance', 'Flexible hours', 'Professional development budget'],\n      requiredExperience: '3+ years',\n      requiredEducation: 'Bachelor\\'s degree in Computer Science or related field'\n    }];\n    // Sample verification results\n    this.sampleVerificationResults = {\n      'job1': {\n        isVerifying: false,\n        result: {\n          isFake: false,\n          message: 'This job appears to be legitimate',\n          details: ['Company has a verified online presence', 'Salary range is appropriate for the position', 'Job requirements are reasonable for the role']\n        }\n      },\n      'job3': {\n        isVerifying: false,\n        result: {\n          isFake: true,\n          message: 'This job listing has suspicious elements',\n          details: ['Salary is significantly above market rate', 'Company contact information is incomplete', 'Job description contains vague responsibilities']\n        }\n      }\n    };\n  }\n  ngOnInit() {\n    this.loadJobs();\n    this.checkDarkMode();\n  }\n  checkDarkMode() {\n    // Check if dark mode is enabled by looking at the html element's class\n    const htmlElement = document.documentElement;\n    this.isDarkMode = htmlElement.classList.contains('dark');\n    // Set up a mutation observer to watch for theme changes\n    const observer = new MutationObserver(mutations => {\n      mutations.forEach(mutation => {\n        if (mutation.attributeName === 'class') {\n          this.isDarkMode = htmlElement.classList.contains('dark');\n        }\n      });\n    });\n    observer.observe(htmlElement, {\n      attributes: true\n    });\n  }\n  loadJobs() {\n    this.isLoading = true;\n    this.error = null;\n    // Simulate API delay\n    setTimeout(() => {\n      // Try to load from API first\n      this.jobService.getJobs().subscribe({\n        next: jobs => {\n          this.jobs = jobs;\n          this.applyFilters();\n          this.isLoading = false;\n          // Initialize animation states for all jobs\n          setTimeout(() => {\n            this.jobs.forEach((job, index) => {\n              if (job.id) {\n                // Set initial state\n                this.cardAnimationState[job.id] = 'initial';\n                // Stagger the animations\n                setTimeout(() => {\n                  if (job.id) {\n                    this.cardAnimationState[job.id] = 'visible';\n                  }\n                }, index * this.animationDelayIncrement);\n              }\n            });\n          }, 0);\n        },\n        error: err => {\n          console.error('Error loading jobs from API:', err);\n          // If API fails, use sample data\n          this.jobs = this.sampleJobs;\n          this.verificationResults = this.sampleVerificationResults;\n          this.applyFilters();\n          this.isLoading = false;\n          // Initialize animation states for sample jobs\n          setTimeout(() => {\n            this.jobs.forEach((job, index) => {\n              if (job.id) {\n                // Set initial state\n                this.cardAnimationState[job.id] = 'initial';\n                // Stagger the animations\n                setTimeout(() => {\n                  if (job.id) {\n                    this.cardAnimationState[job.id] = 'visible';\n                  }\n                }, index * this.animationDelayIncrement);\n              }\n            });\n          }, 0);\n        }\n      });\n    }, 1500); // Simulate network delay\n  }\n\n  applyFilters() {\n    // Filter by search term and industry\n    let filtered = this.jobs;\n    // Apply search filter\n    if (this.searchTerm.trim() !== '') {\n      const searchTermLower = this.searchTerm.toLowerCase();\n      filtered = filtered.filter(job => job.title.toLowerCase().includes(searchTermLower) || job.description.toLowerCase().includes(searchTermLower) || job.companyProfile.toLowerCase().includes(searchTermLower) || job.location.toLowerCase().includes(searchTermLower));\n    }\n    // Apply industry filter\n    if (this.selectedFilter !== 'all') {\n      filtered = filtered.filter(job => job.industry === this.selectedFilter);\n    }\n    // Apply sorting\n    if (this.sortOption === 'a-z') {\n      filtered = filtered.sort((a, b) => a.title.localeCompare(b.title));\n    } else if (this.sortOption === 'z-a') {\n      filtered = filtered.sort((a, b) => b.title.localeCompare(a.title));\n    } else if (this.sortOption === 'newest') {\n      // Assuming jobs have a createdAt field\n      filtered = filtered.sort((a, b) => {\n        const dateA = new Date(a.createdAt || 0);\n        const dateB = new Date(b.createdAt || 0);\n        return dateB.getTime() - dateA.getTime();\n      });\n    } else if (this.sortOption === 'oldest') {\n      filtered = filtered.sort((a, b) => {\n        const dateA = new Date(a.createdAt || 0);\n        const dateB = new Date(b.createdAt || 0);\n        return dateA.getTime() - dateB.getTime();\n      });\n    }\n    this.filteredJobs = filtered;\n  }\n  resetFilters() {\n    this.searchTerm = '';\n    this.selectedFilter = 'all';\n    this.sortOption = 'newest';\n    this.applyFilters();\n  }\n  getIndustryCategories() {\n    // Extract unique industry categories from jobs\n    const industries = new Set();\n    this.jobs.forEach(job => {\n      if (job.industry) {\n        industries.add(job.industry);\n      }\n    });\n    return Array.from(industries).sort();\n  }\n  verifyJob(jobId) {\n    // If already verified, trigger pulse animation\n    if (this.verificationResults[jobId]?.result) {\n      if (this.cardAnimationState[jobId]) {\n        this.cardAnimationState[jobId] = 'pulse';\n        setTimeout(() => {\n          if (this.cardAnimationState[jobId]) {\n            this.cardAnimationState[jobId] = 'visible';\n          }\n        }, 600); // Match the pulse animation duration\n      }\n    }\n    // Set verifying state\n    this.verificationResults[jobId] = {\n      isVerifying: true\n    };\n    // Simulate verification delay\n    setTimeout(() => {\n      // For demo purposes, randomly decide if job is fake or not\n      const isFake = Math.random() > 0.7;\n      this.verificationResults[jobId] = {\n        isVerifying: false,\n        result: {\n          isFake: isFake,\n          message: isFake ? 'This job listing has suspicious elements' : 'This job appears to be legitimate',\n          details: isFake ? ['Salary is significantly above market rate', 'Company contact information is incomplete', 'Job description contains vague responsibilities'] : ['Company has a verified online presence', 'Salary range is appropriate for the position', 'Job requirements are reasonable for the role']\n        }\n      };\n      // Trigger pulse animation after verification\n      if (this.cardAnimationState[jobId]) {\n        this.cardAnimationState[jobId] = 'pulse';\n        setTimeout(() => {\n          if (this.cardAnimationState[jobId]) {\n            this.cardAnimationState[jobId] = 'visible';\n          }\n        }, 600); // Match the pulse animation duration\n      }\n    }, 2000); // Simulate verification delay\n  }\n\n  truncateText(text, maxLength) {\n    if (text.length <= maxLength) {\n      return text;\n    }\n    return text.substring(0, maxLength) + '...';\n  }\n  onCardClick(event, jobId) {\n    // Don't trigger for clicks on buttons or links inside the card\n    if (event.target instanceof HTMLElement && (event.target.tagName === 'BUTTON' || event.target.tagName === 'A' || event.target.closest('button') || event.target.closest('a'))) {\n      return;\n    }\n    // If job has not been verified yet, verify it\n    if (jobId && !this.verificationResults[jobId]) {\n      this.verifyJob(jobId);\n    }\n  }\n  // Add missing expandDescription method\n  expandDescription(jobId) {\n    // This method would typically open a modal or expand the job details\n    console.log('Expanding description for job:', jobId);\n    // Find the job\n    const job = this.jobs.find(j => j.id === jobId);\n    if (job) {\n      // For demo purposes, just toggle a verification if not already done\n      if (!this.verificationResults[jobId]) {\n        this.verifyJob(jobId);\n      }\n    }\n  }\n  static {\n    this.ɵfac = function JobListingsComponent_Factory(t) {\n      return new (t || JobListingsComponent)(i0.ɵɵdirectiveInject(i1.JobService), i0.ɵɵdirectiveInject(i0.Renderer2));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: JobListingsComponent,\n      selectors: [[\"app-job-listings\"]],\n      decls: 34,\n      vars: 8,\n      consts: [[1, \"min-h-screen\"], [1, \"container\", \"mx-auto\", \"px-4\", \"py-8\"], [1, \"mb-8\"], [1, \"text-3xl\", \"font-bold\", \"text-gray-900\", \"dark:text-white\", \"mb-2\"], [1, \"text-gray-600\", \"dark:text-gray-400\"], [1, \"bg-white\", \"dark:bg-dark-light\", \"rounded-lg\", \"shadow-md\", \"p-6\", \"mb-8\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-3\", \"gap-4\"], [1, \"relative\"], [1, \"absolute\", \"inset-y-0\", \"left-0\", \"pl-3\", \"flex\", \"items-center\", \"pointer-events-none\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"viewBox\", \"0 0 20 20\", \"fill\", \"currentColor\", 1, \"h-5\", \"w-5\", \"text-gray-400\"], [\"fill-rule\", \"evenodd\", \"d\", \"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\", \"clip-rule\", \"evenodd\"], [\"type\", \"text\", \"placeholder\", \"Search jobs...\", 1, \"search-input\", \"pl-10\", \"pr-4\", \"py-2\", \"w-full\", \"rounded-lg\", \"border\", \"border-gray-300\", \"dark:border-gray-600\", \"bg-white\", \"dark:bg-dark\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-primary\", \"dark:text-white\", 3, \"ngModel\", \"ngModelChange\"], [\"appTooltip\", \"Filter jobs by industry\", \"position\", \"top\", 1, \"w-full\", \"rounded-lg\", \"border\", \"border-gray-300\", \"dark:border-gray-600\", \"bg-white\", \"dark:bg-dark\", \"px-4\", \"py-2\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-primary\", \"dark:text-white\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"all\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"appTooltip\", \"Sort job listings\", \"position\", \"top\", 1, \"w-full\", \"rounded-lg\", \"border\", \"border-gray-300\", \"dark:border-gray-600\", \"bg-white\", \"dark:bg-dark\", \"px-4\", \"py-2\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-primary\", \"dark:text-white\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"newest\"], [\"value\", \"oldest\"], [\"value\", \"a-z\"], [\"value\", \"z-a\"], [\"class\", \"flex justify-center items-center py-20\", 4, \"ngIf\"], [\"class\", \"bg-red-50 dark:bg-red-900/20 rounded-lg p-8 text-center\", 4, \"ngIf\"], [\"class\", \"bg-gray-50 dark:bg-dark-light rounded-lg p-8 text-center\", 4, \"ngIf\"], [\"class\", \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\", 4, \"ngIf\"], [3, \"value\"], [1, \"flex\", \"justify-center\", \"items-center\", \"py-20\"], [\"text\", \"Loading job listings...\", 3, \"isDarkMode\"], [1, \"bg-red-50\", \"dark:bg-red-900/20\", \"rounded-lg\", \"p-8\", \"text-center\"], [1, \"flex\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"viewBox\", \"0 0 20 20\", \"fill\", \"currentColor\", 1, \"h-5\", \"w-5\", \"text-red-500\", \"dark:text-red-400\", \"mr-3\"], [\"fill-rule\", \"evenodd\", \"d\", \"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414-1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\", \"clip-rule\", \"evenodd\"], [1, \"text-sm\", \"font-medium\", \"text-red-800\", \"dark:text-red-400\"], [1, \"mt-2\", \"text-sm\", \"text-red-700\", \"dark:text-red-300\"], [1, \"mt-4\"], [1, \"inline-flex\", \"items-center\", \"px-4\", \"py-2\", \"border\", \"border-transparent\", \"text-sm\", \"font-medium\", \"rounded-md\", \"shadow-sm\", \"text-white\", \"bg-red-600\", \"hover:bg-red-700\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-offset-2\", \"focus:ring-red-500\", 3, \"click\"], [1, \"bg-gray-50\", \"dark:bg-dark-light\", \"rounded-lg\", \"p-8\", \"text-center\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", \"stroke\", \"currentColor\", 1, \"mx-auto\", \"h-12\", \"w-12\", \"text-gray-400\", \"dark:text-gray-500\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"], [1, \"mt-2\", \"text-lg\", \"font-medium\", \"text-gray-900\", \"dark:text-white\"], [1, \"mt-1\", \"text-gray-500\", \"dark:text-gray-400\"], [1, \"mt-6\"], [1, \"inline-flex\", \"items-center\", \"px-4\", \"py-2\", \"border\", \"border-transparent\", \"text-sm\", \"font-medium\", \"rounded-md\", \"shadow-sm\", \"text-white\", \"bg-primary\", \"hover:bg-primary-dark\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-offset-2\", \"focus:ring-primary\", 3, \"click\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"lg:grid-cols-3\", \"gap-6\"], [\"class\", \"job-card bg-white dark:bg-dark-light rounded-lg shadow-md overflow-hidden transition-all duration-300 transform hover:shadow-lg hover:-translate-y-1 fade-in relative\", 3, \"animation-delay\", 4, \"ngFor\", \"ngForOf\"], [1, \"job-card\", \"bg-white\", \"dark:bg-dark-light\", \"rounded-lg\", \"shadow-md\", \"overflow-hidden\", \"transition-all\", \"duration-300\", \"transform\", \"hover:shadow-lg\", \"hover:-translate-y-1\", \"fade-in\", \"relative\"], [3, \"color\"], [1, \"p-6\", \"border-b\", \"border-gray-200\", \"dark:border-gray-700\"], [1, \"flex\", \"justify-between\", \"items-start\"], [1, \"text-xl\", \"font-semibold\", \"text-gray-900\", \"dark:text-white\", \"mb-1\"], [1, \"text-gray-600\", \"dark:text-gray-400\", \"text-sm\"], [1, \"flex-shrink-0\", \"ml-4\"], [1, \"inline-flex\", \"items-center\", \"px-2.5\", \"py-0.5\", \"rounded-full\", \"text-xs\", \"font-medium\", \"bg-blue-100\", \"text-blue-800\", \"dark:bg-blue-900\", \"dark:text-blue-200\"], [1, \"mt-4\", \"flex\", \"items-center\", \"text-sm\", \"text-gray-500\", \"dark:text-gray-400\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"viewBox\", \"0 0 20 20\", \"fill\", \"currentColor\", 1, \"flex-shrink-0\", \"mr-1.5\", \"h-5\", \"w-5\", \"text-gray-400\", \"dark:text-gray-500\"], [\"fill-rule\", \"evenodd\", \"d\", \"M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z\", \"clip-rule\", \"evenodd\"], [1, \"p-6\"], [1, \"text-md\", \"font-medium\", \"mb-2\", \"text-gray-800\", \"dark:text-white\"], [1, \"text-gray-600\", \"dark:text-gray-400\", \"mb-4\", \"line-clamp-3\"], [1, \"text-primary\", \"hover:text-primary-dark\", \"dark:text-primary-light\", \"dark:hover:text-primary\", \"transition-colors\", \"duration-200\", \"text-sm\", \"font-medium\", \"focus:outline-none\", 3, \"click\"], [\"class\", \"p-4 border-t border-gray-200 dark:border-gray-700\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"p-4\", \"bg-gray-50\", \"dark:bg-dark\", \"border-t\", \"border-gray-200\", \"dark:border-gray-700\"], [\"class\", \"verify-btn w-full flex justify-center items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary transition-colors duration-200\", \"appTooltip\", \"Verify job legitimacy\", \"position\", \"bottom\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"verify-btn w-full flex justify-center items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary transition-colors duration-200 opacity-50 cursor-not-allowed\", \"disabled\", \"\", \"appTooltip\", \"Verifying job...\", \"position\", \"bottom\", 4, \"ngIf\"], [\"class\", \"verify-btn w-full flex justify-center items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary transition-colors duration-200\", \"appTooltip\", \"Verify this job again\", \"position\", \"bottom\", 3, \"click\", 4, \"ngIf\"], [1, \"p-4\", \"border-t\", \"border-gray-200\", \"dark:border-gray-700\", 3, \"ngClass\"], [1, \"flex\", \"items-start\"], [1, \"flex-shrink-0\"], [\"class\", \"h-5 w-5 text-green-500\", \"xmlns\", \"http://www.w3.org/2000/svg\", \"viewBox\", \"0 0 20 20\", \"fill\", \"currentColor\", 4, \"ngIf\"], [\"class\", \"h-5 w-5 text-red-500\", \"xmlns\", \"http://www.w3.org/2000/svg\", \"viewBox\", \"0 0 20 20\", \"fill\", \"currentColor\", 4, \"ngIf\"], [1, \"ml-3\"], [1, \"text-sm\", \"font-medium\", 3, \"ngClass\"], [1, \"mt-1\", \"text-sm\", 3, \"ngClass\"], [\"class\", \"list-disc pl-5 space-y-1\", 4, \"ngIf\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"viewBox\", \"0 0 20 20\", \"fill\", \"currentColor\", 1, \"h-5\", \"w-5\", \"text-green-500\"], [\"fill-rule\", \"evenodd\", \"d\", \"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\", \"clip-rule\", \"evenodd\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"viewBox\", \"0 0 20 20\", \"fill\", \"currentColor\", 1, \"h-5\", \"w-5\", \"text-red-500\"], [1, \"list-disc\", \"pl-5\", \"space-y-1\"], [4, \"ngFor\", \"ngForOf\"], [\"appTooltip\", \"Verify job legitimacy\", \"position\", \"bottom\", 1, \"verify-btn\", \"w-full\", \"flex\", \"justify-center\", \"items-center\", \"px-4\", \"py-2\", \"border\", \"border-transparent\", \"rounded-md\", \"shadow-sm\", \"text-sm\", \"font-medium\", \"text-white\", \"bg-primary\", \"hover:bg-primary-dark\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-offset-2\", \"focus:ring-primary\", \"transition-colors\", \"duration-200\", 3, \"click\"], [\"disabled\", \"\", \"appTooltip\", \"Verifying job...\", \"position\", \"bottom\", 1, \"verify-btn\", \"w-full\", \"flex\", \"justify-center\", \"items-center\", \"px-4\", \"py-2\", \"border\", \"border-transparent\", \"rounded-md\", \"shadow-sm\", \"text-sm\", \"font-medium\", \"text-white\", \"bg-primary\", \"hover:bg-primary-dark\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-offset-2\", \"focus:ring-primary\", \"transition-colors\", \"duration-200\", \"opacity-50\", \"cursor-not-allowed\"], [\"text\", \"Verifying...\", 3, \"size\", \"color\", \"isDarkMode\"], [\"appTooltip\", \"Verify this job again\", \"position\", \"bottom\", 1, \"verify-btn\", \"w-full\", \"flex\", \"justify-center\", \"items-center\", \"px-4\", \"py-2\", \"border\", \"border-transparent\", \"rounded-md\", \"shadow-sm\", \"text-sm\", \"font-medium\", \"text-white\", \"bg-primary\", \"hover:bg-primary-dark\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-offset-2\", \"focus:ring-primary\", \"transition-colors\", \"duration-200\", 3, \"click\"]],\n      template: function JobListingsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n          i0.ɵɵtext(4, \"Job Listings\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"p\", 4);\n          i0.ɵɵtext(6, \"Browse through available job listings and verify their legitimacy\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 5)(8, \"div\", 6)(9, \"div\", 7)(10, \"div\", 8);\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(11, \"svg\", 9);\n          i0.ɵɵelement(12, \"path\", 10);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵnamespaceHTML();\n          i0.ɵɵelementStart(13, \"input\", 11);\n          i0.ɵɵlistener(\"ngModelChange\", function JobListingsComponent_Template_input_ngModelChange_13_listener($event) {\n            return ctx.searchTerm = $event;\n          })(\"ngModelChange\", function JobListingsComponent_Template_input_ngModelChange_13_listener() {\n            return ctx.applyFilters();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"div\")(15, \"select\", 12);\n          i0.ɵɵlistener(\"ngModelChange\", function JobListingsComponent_Template_select_ngModelChange_15_listener($event) {\n            return ctx.selectedFilter = $event;\n          })(\"ngModelChange\", function JobListingsComponent_Template_select_ngModelChange_15_listener() {\n            return ctx.applyFilters();\n          });\n          i0.ɵɵelementStart(16, \"option\", 13);\n          i0.ɵɵtext(17, \"All Industries\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(18, JobListingsComponent_option_18_Template, 2, 2, \"option\", 14);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(19, \"div\")(20, \"select\", 15);\n          i0.ɵɵlistener(\"ngModelChange\", function JobListingsComponent_Template_select_ngModelChange_20_listener($event) {\n            return ctx.sortOption = $event;\n          })(\"ngModelChange\", function JobListingsComponent_Template_select_ngModelChange_20_listener() {\n            return ctx.applyFilters();\n          });\n          i0.ɵɵelementStart(21, \"option\", 16);\n          i0.ɵɵtext(22, \"Newest First\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"option\", 17);\n          i0.ɵɵtext(24, \"Oldest First\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"option\", 18);\n          i0.ɵɵtext(26, \"A-Z\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"option\", 19);\n          i0.ɵɵtext(28, \"Z-A\");\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵtemplate(29, JobListingsComponent_div_29_Template, 2, 1, \"div\", 20);\n          i0.ɵɵtemplate(30, JobListingsComponent_div_30_Template, 13, 1, \"div\", 21);\n          i0.ɵɵtemplate(31, JobListingsComponent_div_31_Template, 10, 0, \"div\", 22);\n          i0.ɵɵtemplate(32, JobListingsComponent_div_32_Template, 2, 1, \"div\", 23);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(33, \"app-scroll-to-top\");\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(13);\n          i0.ɵɵproperty(\"ngModel\", ctx.searchTerm);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.selectedFilter);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.getIndustryCategories());\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.sortOption);\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading && !ctx.error && ctx.filteredJobs.length === 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading && !ctx.error && ctx.filteredJobs.length > 0);\n        }\n      },\n      dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel, i4.RippleEffectComponent, i5.LoadingAnimationComponent, i6.TooltipDirective, i7.ScrollToTopComponent, i2.DatePipe],\n      styles: [\"@keyframes _ngcontent-%COMP%_fadeIn {\\n  from { opacity: 0; transform: translateY(20px); }\\n  to { opacity: 1; transform: translateY(0); }\\n}\\n\\n@keyframes _ngcontent-%COMP%_pulse {\\n  0% { transform: scale(1); }\\n  50% { transform: scale(1.05); }\\n  100% { transform: scale(1); }\\n}\\n\\n.job-card[_ngcontent-%COMP%] {\\n  transition: all 0.3s ease;\\n}\\n\\n.job-card[_ngcontent-%COMP%]:hover {\\n  transform: translateY(-5px);\\n  box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\\n}\\n\\n.fade-in[_ngcontent-%COMP%] {\\n  animation: _ngcontent-%COMP%_fadeIn 0.5s ease-out forwards;\\n}\\n\\n.pulse[_ngcontent-%COMP%] {\\n  animation: _ngcontent-%COMP%_pulse 0.6s ease-in-out;\\n}\\n\\n\\n.badge[_ngcontent-%COMP%] {\\n  transition: all 0.2s ease;\\n}\\n\\n.badge[_ngcontent-%COMP%]:hover {\\n  transform: scale(1.1);\\n}\\n\\n\\n.verify-btn[_ngcontent-%COMP%] {\\n  transition: all 0.2s ease;\\n  position: relative;\\n  overflow: hidden;\\n}\\n\\n.verify-btn[_ngcontent-%COMP%]:after {\\n  content: '';\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  width: 5px;\\n  height: 5px;\\n  background: rgba(255, 255, 255, 0.5);\\n  opacity: 0;\\n  border-radius: 100%;\\n  transform: scale(1, 1) translate(-50%);\\n  transform-origin: 50% 50%;\\n}\\n\\n.verify-btn[_ngcontent-%COMP%]:hover:after {\\n  animation: _ngcontent-%COMP%_ripple 1s ease-out;\\n}\\n\\n@keyframes _ngcontent-%COMP%_ripple {\\n  0% {\\n    transform: scale(0, 0);\\n    opacity: 0.5;\\n  }\\n  100% {\\n    transform: scale(20, 20);\\n    opacity: 0;\\n  }\\n}\\n\\n\\n.search-input[_ngcontent-%COMP%]:focus {\\n  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.3);\\n}\\n\\n\\n.spinner[_ngcontent-%COMP%] {\\n  border-radius: 50%;\\n  width: 40px;\\n  height: 40px;\\n  margin: 0 auto;\\n  position: relative;\\n}\\n\\n.spinner[_ngcontent-%COMP%]:before, .spinner[_ngcontent-%COMP%]:after {\\n  content: '';\\n  position: absolute;\\n  border-radius: 50%;\\n  border: 4px solid transparent;\\n  border-top-color: currentColor;\\n  animation: _ngcontent-%COMP%_spin 1.5s linear infinite;\\n}\\n\\n.spinner[_ngcontent-%COMP%]:before {\\n  top: -4px;\\n  left: -4px;\\n  right: -4px;\\n  bottom: -4px;\\n  border-top-color: currentColor;\\n  animation-duration: 2s;\\n}\\n\\n.spinner[_ngcontent-%COMP%]:after {\\n  top: 4px;\\n  left: 4px;\\n  right: 4px;\\n  bottom: 4px;\\n  border-top-color: currentColor;\\n  animation-duration: 1s;\\n}\\n\\n@keyframes _ngcontent-%COMP%_spin {\\n  0% { transform: rotate(0deg); }\\n  100% { transform: rotate(360deg); }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpvYi1saXN0aW5ncy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9DQUFvQztBQUNwQztFQUNFLE9BQU8sVUFBVSxFQUFFLDJCQUEyQixFQUFFO0VBQ2hELEtBQUssVUFBVSxFQUFFLHdCQUF3QixFQUFFO0FBQzdDOztBQUVBO0VBQ0UsS0FBSyxtQkFBbUIsRUFBRTtFQUMxQixNQUFNLHNCQUFzQixFQUFFO0VBQzlCLE9BQU8sbUJBQW1CLEVBQUU7QUFDOUI7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSwyQkFBMkI7RUFDM0IscUZBQXFGO0FBQ3ZGOztBQUVBO0VBQ0Usd0NBQXdDO0FBQzFDOztBQUVBO0VBQ0UsaUNBQWlDO0FBQ25DOztBQUVBLGlCQUFpQjtBQUNqQjtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLHFCQUFxQjtBQUN2Qjs7QUFFQSx5QkFBeUI7QUFDekI7RUFDRSx5QkFBeUI7RUFDekIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsUUFBUTtFQUNSLFNBQVM7RUFDVCxVQUFVO0VBQ1YsV0FBVztFQUNYLG9DQUFvQztFQUNwQyxVQUFVO0VBQ1YsbUJBQW1CO0VBQ25CLHNDQUFzQztFQUN0Qyx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRTtJQUNFLHNCQUFzQjtJQUN0QixZQUFZO0VBQ2Q7RUFDQTtJQUNFLHdCQUF3QjtJQUN4QixVQUFVO0VBQ1o7QUFDRjs7QUFFQSw4QkFBOEI7QUFDOUI7RUFDRSw2Q0FBNkM7QUFDL0M7O0FBRUEsb0JBQW9CO0FBQ3BCO0VBQ0Usa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxZQUFZO0VBQ1osY0FBYztFQUNkLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLDZCQUE2QjtFQUM3Qiw4QkFBOEI7RUFDOUIsb0NBQW9DO0FBQ3RDOztBQUVBO0VBQ0UsU0FBUztFQUNULFVBQVU7RUFDVixXQUFXO0VBQ1gsWUFBWTtFQUNaLDhCQUE4QjtFQUM5QixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxRQUFRO0VBQ1IsU0FBUztFQUNULFVBQVU7RUFDVixXQUFXO0VBQ1gsOEJBQThCO0VBQzlCLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLEtBQUssdUJBQXVCLEVBQUU7RUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUNwQyIsImZpbGUiOiJqb2ItbGlzdGluZ3MuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIENhcmQgYW5pbWF0aW9ucyBhbmQgdHJhbnNpdGlvbnMgKi9cbkBrZXlmcmFtZXMgZmFkZUluIHtcbiAgZnJvbSB7IG9wYWNpdHk6IDA7IHRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMHB4KTsgfVxuICB0byB7IG9wYWNpdHk6IDE7IHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTsgfVxufVxuXG5Aa2V5ZnJhbWVzIHB1bHNlIHtcbiAgMCUgeyB0cmFuc2Zvcm06IHNjYWxlKDEpOyB9XG4gIDUwJSB7IHRyYW5zZm9ybTogc2NhbGUoMS4wNSk7IH1cbiAgMTAwJSB7IHRyYW5zZm9ybTogc2NhbGUoMSk7IH1cbn1cblxuLmpvYi1jYXJkIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbn1cblxuLmpvYi1jYXJkOmhvdmVyIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01cHgpO1xuICBib3gtc2hhZG93OiAwIDEwcHggMjVweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCAxMHB4IDEwcHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMDQpO1xufVxuXG4uZmFkZS1pbiB7XG4gIGFuaW1hdGlvbjogZmFkZUluIDAuNXMgZWFzZS1vdXQgZm9yd2FyZHM7XG59XG5cbi5wdWxzZSB7XG4gIGFuaW1hdGlvbjogcHVsc2UgMC42cyBlYXNlLWluLW91dDtcbn1cblxuLyogQmFkZ2Ugc3R5bGVzICovXG4uYmFkZ2Uge1xuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlO1xufVxuXG4uYmFkZ2U6aG92ZXIge1xuICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7XG59XG5cbi8qIEJ1dHRvbiBob3ZlciBlZmZlY3RzICovXG4udmVyaWZ5LWJ0biB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2U7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLnZlcmlmeS1idG46YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogNTAlO1xuICB3aWR0aDogNXB4O1xuICBoZWlnaHQ6IDVweDtcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpO1xuICBvcGFjaXR5OiAwO1xuICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICB0cmFuc2Zvcm06IHNjYWxlKDEsIDEpIHRyYW5zbGF0ZSgtNTAlKTtcbiAgdHJhbnNmb3JtLW9yaWdpbjogNTAlIDUwJTtcbn1cblxuLnZlcmlmeS1idG46aG92ZXI6YWZ0ZXIge1xuICBhbmltYXRpb246IHJpcHBsZSAxcyBlYXNlLW91dDtcbn1cblxuQGtleWZyYW1lcyByaXBwbGUge1xuICAwJSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLCAwKTtcbiAgICBvcGFjaXR5OiAwLjU7XG4gIH1cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgyMCwgMjApO1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbn1cblxuLyogU2VhcmNoIGlucHV0IGZvY3VzIGVmZmVjdCAqL1xuLnNlYXJjaC1pbnB1dDpmb2N1cyB7XG4gIGJveC1zaGFkb3c6IDAgMCAwIDNweCByZ2JhKDU5LCAxMzAsIDI0NiwgMC4zKTtcbn1cblxuLyogTG9hZGluZyBzcGlubmVyICovXG4uc3Bpbm5lciB7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgd2lkdGg6IDQwcHg7XG4gIGhlaWdodDogNDBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLnNwaW5uZXI6YmVmb3JlLCAuc3Bpbm5lcjphZnRlciB7XG4gIGNvbnRlbnQ6ICcnO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYm9yZGVyOiA0cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci10b3AtY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgYW5pbWF0aW9uOiBzcGluIDEuNXMgbGluZWFyIGluZmluaXRlO1xufVxuXG4uc3Bpbm5lcjpiZWZvcmUge1xuICB0b3A6IC00cHg7XG4gIGxlZnQ6IC00cHg7XG4gIHJpZ2h0OiAtNHB4O1xuICBib3R0b206IC00cHg7XG4gIGJvcmRlci10b3AtY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAycztcbn1cblxuLnNwaW5uZXI6YWZ0ZXIge1xuICB0b3A6IDRweDtcbiAgbGVmdDogNHB4O1xuICByaWdodDogNHB4O1xuICBib3R0b206IDRweDtcbiAgYm9yZGVyLXRvcC1jb2xvcjogY3VycmVudENvbG9yO1xuICBhbmltYXRpb24tZHVyYXRpb246IDFzO1xufVxuXG5Aa2V5ZnJhbWVzIHNwaW4ge1xuICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XG4gIDEwMCUgeyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB9XG59Il19 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvam9iLWxpc3RpbmdzL2pvYi1saXN0aW5ncy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9DQUFvQztBQUNwQztFQUNFLE9BQU8sVUFBVSxFQUFFLDJCQUEyQixFQUFFO0VBQ2hELEtBQUssVUFBVSxFQUFFLHdCQUF3QixFQUFFO0FBQzdDOztBQUVBO0VBQ0UsS0FBSyxtQkFBbUIsRUFBRTtFQUMxQixNQUFNLHNCQUFzQixFQUFFO0VBQzlCLE9BQU8sbUJBQW1CLEVBQUU7QUFDOUI7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSwyQkFBMkI7RUFDM0IscUZBQXFGO0FBQ3ZGOztBQUVBO0VBQ0Usd0NBQXdDO0FBQzFDOztBQUVBO0VBQ0UsaUNBQWlDO0FBQ25DOztBQUVBLGlCQUFpQjtBQUNqQjtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLHFCQUFxQjtBQUN2Qjs7QUFFQSx5QkFBeUI7QUFDekI7RUFDRSx5QkFBeUI7RUFDekIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsUUFBUTtFQUNSLFNBQVM7RUFDVCxVQUFVO0VBQ1YsV0FBVztFQUNYLG9DQUFvQztFQUNwQyxVQUFVO0VBQ1YsbUJBQW1CO0VBQ25CLHNDQUFzQztFQUN0Qyx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRTtJQUNFLHNCQUFzQjtJQUN0QixZQUFZO0VBQ2Q7RUFDQTtJQUNFLHdCQUF3QjtJQUN4QixVQUFVO0VBQ1o7QUFDRjs7QUFFQSw4QkFBOEI7QUFDOUI7RUFDRSw2Q0FBNkM7QUFDL0M7O0FBRUEsb0JBQW9CO0FBQ3BCO0VBQ0Usa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxZQUFZO0VBQ1osY0FBYztFQUNkLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLDZCQUE2QjtFQUM3Qiw4QkFBOEI7RUFDOUIsb0NBQW9DO0FBQ3RDOztBQUVBO0VBQ0UsU0FBUztFQUNULFVBQVU7RUFDVixXQUFXO0VBQ1gsWUFBWTtFQUNaLDhCQUE4QjtFQUM5QixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxRQUFRO0VBQ1IsU0FBUztFQUNULFVBQVU7RUFDVixXQUFXO0VBQ1gsOEJBQThCO0VBQzlCLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLEtBQUssdUJBQXVCLEVBQUU7RUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUNwQztBQUNBLG83SUFBbzdJIiwic291cmNlc0NvbnRlbnQiOlsiLyogQ2FyZCBhbmltYXRpb25zIGFuZCB0cmFuc2l0aW9ucyAqL1xuQGtleWZyYW1lcyBmYWRlSW4ge1xuICBmcm9tIHsgb3BhY2l0eTogMDsgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwcHgpOyB9XG4gIHRvIHsgb3BhY2l0eTogMTsgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApOyB9XG59XG5cbkBrZXlmcmFtZXMgcHVsc2Uge1xuICAwJSB7IHRyYW5zZm9ybTogc2NhbGUoMSk7IH1cbiAgNTAlIHsgdHJhbnNmb3JtOiBzY2FsZSgxLjA1KTsgfVxuICAxMDAlIHsgdHJhbnNmb3JtOiBzY2FsZSgxKTsgfVxufVxuXG4uam9iLWNhcmQge1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xufVxuXG4uam9iLWNhcmQ6aG92ZXIge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTVweCk7XG4gIGJveC1zaGFkb3c6IDAgMTBweCAyNXB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDEwcHggMTBweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4wNCk7XG59XG5cbi5mYWRlLWluIHtcbiAgYW5pbWF0aW9uOiBmYWRlSW4gMC41cyBlYXNlLW91dCBmb3J3YXJkcztcbn1cblxuLnB1bHNlIHtcbiAgYW5pbWF0aW9uOiBwdWxzZSAwLjZzIGVhc2UtaW4tb3V0O1xufVxuXG4vKiBCYWRnZSBzdHlsZXMgKi9cbi5iYWRnZSB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2U7XG59XG5cbi5iYWRnZTpob3ZlciB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcbn1cblxuLyogQnV0dG9uIGhvdmVyIGVmZmVjdHMgKi9cbi52ZXJpZnktYnRuIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4udmVyaWZ5LWJ0bjphZnRlciB7XG4gIGNvbnRlbnQ6ICcnO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIHdpZHRoOiA1cHg7XG4gIGhlaWdodDogNXB4O1xuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7XG4gIG9wYWNpdHk6IDA7XG4gIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gIHRyYW5zZm9ybTogc2NhbGUoMSwgMSkgdHJhbnNsYXRlKC01MCUpO1xuICB0cmFuc2Zvcm0tb3JpZ2luOiA1MCUgNTAlO1xufVxuXG4udmVyaWZ5LWJ0bjpob3ZlcjphZnRlciB7XG4gIGFuaW1hdGlvbjogcmlwcGxlIDFzIGVhc2Utb3V0O1xufVxuXG5Aa2V5ZnJhbWVzIHJpcHBsZSB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAsIDApO1xuICAgIG9wYWNpdHk6IDAuNTtcbiAgfVxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDIwLCAyMCk7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxufVxuXG4vKiBTZWFyY2ggaW5wdXQgZm9jdXMgZWZmZWN0ICovXG4uc2VhcmNoLWlucHV0OmZvY3VzIHtcbiAgYm94LXNoYWRvdzogMCAwIDAgM3B4IHJnYmEoNTksIDEzMCwgMjQ2LCAwLjMpO1xufVxuXG4vKiBMb2FkaW5nIHNwaW5uZXIgKi9cbi5zcGlubmVyIHtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICB3aWR0aDogNDBweDtcbiAgaGVpZ2h0OiA0MHB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uc3Bpbm5lcjpiZWZvcmUsIC5zcGlubmVyOmFmdGVyIHtcbiAgY29udGVudDogJyc7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBib3JkZXI6IDRweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXRvcC1jb2xvcjogY3VycmVudENvbG9yO1xuICBhbmltYXRpb246IHNwaW4gMS41cyBsaW5lYXIgaW5maW5pdGU7XG59XG5cbi5zcGlubmVyOmJlZm9yZSB7XG4gIHRvcDogLTRweDtcbiAgbGVmdDogLTRweDtcbiAgcmlnaHQ6IC00cHg7XG4gIGJvdHRvbTogLTRweDtcbiAgYm9yZGVyLXRvcC1jb2xvcjogY3VycmVudENvbG9yO1xuICBhbmltYXRpb24tZHVyYXRpb246IDJzO1xufVxuXG4uc3Bpbm5lcjphZnRlciB7XG4gIHRvcDogNHB4O1xuICBsZWZ0OiA0cHg7XG4gIHJpZ2h0OiA0cHg7XG4gIGJvdHRvbTogNHB4O1xuICBib3JkZXItdG9wLWNvbG9yOiBjdXJyZW50Q29sb3I7XG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMXM7XG59XG5cbkBrZXlmcmFtZXMgc3BpbiB7XG4gIDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7IH1cbiAgMTAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7IH1cbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["i0","JobListingsComponent","constructor","jobService","renderer","id","title","company","location","description","requirements","salary","industry","companyProfile","createdAt","Date","toISOString","employmentType","benefits","requiredExperience","requiredEducation","isVerifying","result","isFake","message","details","ngOnInit","loadJobs","checkDarkMode","htmlElement","document","documentElement","isDarkMode","classList","contains","observer","MutationObserver","mutations","forEach","mutation","attributeName","observe","attributes","isLoading","error","setTimeout","getJobs","subscribe","next","jobs","applyFilters","job","index","cardAnimationState","animationDelayIncrement","err","console","sampleJobs","verificationResults","sampleVerificationResults","filtered","searchTerm","trim","searchTermLower","toLowerCase","filter","includes","selectedFilter","sortOption","sort","a","b","localeCompare","dateA","dateB","getTime","filteredJobs","resetFilters","getIndustryCategories","industries","Set","add","Array","from","verifyJob","jobId","Math","random","truncateText","text","maxLength","length","substring","onCardClick","event","target","HTMLElement","tagName","closest","expandDescription","log","find","j","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/yassine/Images/emna/job-checker-app/src/app/pages/job-listings/job-listings.component.html","/home/yassine/Images/emna/job-checker-app/src/app/pages/job-listings/job-listings.component.ts"],"sourcesContent":["<div class=\"min-h-screen\">\n  <div class=\"container mx-auto px-4 py-8\">\n    <!-- Page Header -->\n    <div class=\"mb-8\">\n      <h1 class=\"text-3xl font-bold text-gray-900 dark:text-white mb-2\">Job Listings</h1>\n      <p class=\"text-gray-600 dark:text-gray-400\">Browse through available job listings and verify their legitimacy</p>\n    </div>\n\n    <!-- Search and Filters -->\n    <div class=\"bg-white dark:bg-dark-light rounded-lg shadow-md p-6 mb-8\">\n      <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <!-- Search -->\n        <div class=\"relative\">\n          <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n            <svg class=\"h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fill-rule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\" clip-rule=\"evenodd\" />\n            </svg>\n          </div>\n          <input \n            type=\"text\" \n            [(ngModel)]=\"searchTerm\" \n            (ngModelChange)=\"applyFilters()\"\n            placeholder=\"Search jobs...\" \n            class=\"search-input pl-10 pr-4 py-2 w-full rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-dark focus:outline-none focus:ring-2 focus:ring-primary dark:text-white\"\n          >\n        </div>\n\n        <!-- Industry Filter -->\n        <div>\n          <select \n            [(ngModel)]=\"selectedFilter\" \n            (ngModelChange)=\"applyFilters()\"\n            class=\"w-full rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-dark px-4 py-2 focus:outline-none focus:ring-2 focus:ring-primary dark:text-white\"\n            appTooltip=\"Filter jobs by industry\"\n            position=\"top\"\n          >\n            <option value=\"all\">All Industries</option>\n            <option *ngFor=\"let industry of getIndustryCategories()\" [value]=\"industry\">{{ industry }}</option>\n          </select>\n        </div>\n\n        <!-- Sort -->\n        <div>\n          <select \n            [(ngModel)]=\"sortOption\" \n            (ngModelChange)=\"applyFilters()\"\n            class=\"w-full rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-dark px-4 py-2 focus:outline-none focus:ring-2 focus:ring-primary dark:text-white\"\n            appTooltip=\"Sort job listings\"\n            position=\"top\"\n          >\n            <option value=\"newest\">Newest First</option>\n            <option value=\"oldest\">Oldest First</option>\n            <option value=\"a-z\">A-Z</option>\n            <option value=\"z-a\">Z-A</option>\n          </select>\n        </div>\n      </div>\n    </div>\n\n    <!-- Loading Animation -->\n    <div *ngIf=\"isLoading\" class=\"flex justify-center items-center py-20\">\n      <app-loading-animation text=\"Loading job listings...\" [isDarkMode]=\"isDarkMode\"></app-loading-animation>\n    </div>\n\n    <!-- Error Message -->\n    <div *ngIf=\"error\" class=\"bg-red-50 dark:bg-red-900/20 rounded-lg p-8 text-center\">\n      <div class=\"flex\">\n        <svg class=\"h-5 w-5 text-red-500 dark:text-red-400 mr-3\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414-1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n        </svg>\n        <div>\n          <h3 class=\"text-sm font-medium text-red-800 dark:text-red-400\">Error loading jobs</h3>\n          <div class=\"mt-2 text-sm text-red-700 dark:text-red-300\">\n            <p>{{ error }}</p>\n          </div>\n          <div class=\"mt-4\">\n            <button (click)=\"loadJobs()\" class=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\">\n              Try Again\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- No Jobs Found -->\n    <div *ngIf=\"!isLoading && !error && filteredJobs.length === 0\" class=\"bg-gray-50 dark:bg-dark-light rounded-lg p-8 text-center\">\n      <svg class=\"mx-auto h-12 w-12 text-gray-400 dark:text-gray-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n      </svg>\n      <h3 class=\"mt-2 text-lg font-medium text-gray-900 dark:text-white\">No jobs found</h3>\n      <p class=\"mt-1 text-gray-500 dark:text-gray-400\">Try adjusting your search or filter criteria.</p>\n      <div class=\"mt-6\">\n        <button \n          (click)=\"resetFilters()\" \n          class=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary\"\n        >\n          Reset Filters\n        </button>\n      </div>\n    </div>\n\n    <!-- Job Cards Grid -->\n    <div *ngIf=\"!isLoading && !error && filteredJobs.length > 0\" class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n      <!-- Job Card -->\n      <div \n        *ngFor=\"let job of filteredJobs; let i = index\" \n        class=\"job-card bg-white dark:bg-dark-light rounded-lg shadow-md overflow-hidden transition-all duration-300 transform hover:shadow-lg hover:-translate-y-1 fade-in relative\"\n        [style.animation-delay]=\"i * 100 + 'ms'\"\n      >\n        <app-ripple-effect [color]=\"'rgba(59, 130, 246, 0.1)'\"></app-ripple-effect>\n        <!-- Card Header -->\n        <div class=\"p-6 border-b border-gray-200 dark:border-gray-700\">\n          <div class=\"flex justify-between items-start\">\n            <div>\n              <h2 class=\"text-xl font-semibold text-gray-900 dark:text-white mb-1\">{{ job.title }}</h2>\n              <p class=\"text-gray-600 dark:text-gray-400 text-sm\">{{ job.location }}</p>\n            </div>\n            <div class=\"flex-shrink-0 ml-4\">\n              <span class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200\">\n                {{ job.industry }}\n              </span>\n            </div>\n          </div>\n          <div class=\"mt-4 flex items-center text-sm text-gray-500 dark:text-gray-400\">\n            <svg class=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400 dark:text-gray-500\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fill-rule=\"evenodd\" d=\"M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z\" clip-rule=\"evenodd\" />\n            </svg>\n            <span>Posted {{ job.createdAt | date:'mediumDate' }}</span>\n          </div>\n        </div>\n\n        <!-- Card Body -->\n        <div class=\"p-6\">\n          <h3 class=\"text-md font-medium mb-2 text-gray-800 dark:text-white\">Company Profile</h3>\n          <p class=\"text-gray-600 dark:text-gray-400 mb-4 line-clamp-3\">{{ job.companyProfile }}</p>\n          \n          <h3 class=\"text-md font-medium mb-2 text-gray-800 dark:text-white\">Description</h3>\n          <p class=\"text-gray-600 dark:text-gray-400 mb-4 line-clamp-3\">{{ job.description }}</p>\n          \n          <button \n            class=\"text-primary hover:text-primary-dark dark:text-primary-light dark:hover:text-primary transition-colors duration-200 text-sm font-medium focus:outline-none\"\n            (click)=\"expandDescription(job.id)\"\n          >\n            View more details\n          </button>\n        </div>\n        \n        <!-- Verification Result -->\n        <div *ngIf=\"job.id && verificationResults[job.id] && verificationResults[job.id].result\" \n            class=\"p-4 border-t border-gray-200 dark:border-gray-700\"\n            [ngClass]=\"{\n              'bg-green-50': !verificationResults[job.id].result.isFake,\n              'dark:bg-green-900/20': !verificationResults[job.id].result.isFake,\n              'bg-red-50': verificationResults[job.id].result.isFake,\n              'dark:bg-red-900/20': verificationResults[job.id].result.isFake\n            }\">\n          <div class=\"flex items-start\">\n            <div class=\"flex-shrink-0\">\n              <!-- Legitimate Icon -->\n              <svg *ngIf=\"!verificationResults[job.id].result.isFake\" class=\"h-5 w-5 text-green-500\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" />\n              </svg>\n              <!-- Fake Icon -->\n              <svg *ngIf=\"verificationResults[job.id].result.isFake\" class=\"h-5 w-5 text-red-500\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414-1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n              </svg>\n            </div>\n            <div class=\"ml-3\">\n              <h3 class=\"text-sm font-medium\" \n                  [ngClass]=\"{\n                    'text-green-800': !verificationResults[job.id].result.isFake,\n                    'dark:text-green-400': !verificationResults[job.id].result.isFake,\n                    'text-red-800': verificationResults[job.id].result.isFake,\n                    'dark:text-red-400': verificationResults[job.id].result.isFake\n                  }\">\n                {{ verificationResults[job.id].result.message }}\n              </h3>\n              <div class=\"mt-1 text-sm\" \n                   [ngClass]=\"{\n                     'text-green-700': !verificationResults[job.id].result.isFake,\n                     'dark:text-green-300': !verificationResults[job.id].result.isFake,\n                     'text-red-700': verificationResults[job.id].result.isFake,\n                     'dark:text-red-300': verificationResults[job.id].result.isFake\n                   }\">\n                <ul *ngIf=\"verificationResults[job.id].result.details?.length\" class=\"list-disc pl-5 space-y-1\">\n                  <li *ngFor=\"let detail of verificationResults[job.id].result.details\">\n                    {{ detail }}\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"p-4 bg-gray-50 dark:bg-dark border-t border-gray-200 dark:border-gray-700\">\n          <button \n            *ngIf=\"job.id && !verificationResults[job.id]\"\n            (click)=\"verifyJob(job.id)\"\n            class=\"verify-btn w-full flex justify-center items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary transition-colors duration-200\"\n            appTooltip=\"Verify job legitimacy\"\n            position=\"bottom\"\n          >\n            <span>Verify Job</span>\n          </button>\n          \n          <button \n            *ngIf=\"job.id && verificationResults[job.id] && verificationResults[job.id].isVerifying\"\n            class=\"verify-btn w-full flex justify-center items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary transition-colors duration-200 opacity-50 cursor-not-allowed\"\n            disabled\n            appTooltip=\"Verifying job...\"\n            position=\"bottom\"\n          >\n            <app-loading-animation text=\"Verifying...\" [size]=\"'small'\" [color]=\"'white'\" [isDarkMode]=\"isDarkMode\"></app-loading-animation>\n          </button>\n          \n          <button \n            *ngIf=\"job.id && verificationResults[job.id] && verificationResults[job.id].result\"\n            (click)=\"verifyJob(job.id)\"\n            class=\"verify-btn w-full flex justify-center items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary transition-colors duration-200\"\n            appTooltip=\"Verify this job again\"\n            position=\"bottom\"\n          >\n            Verify Again\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Scroll to top button -->\n  <app-scroll-to-top></app-scroll-to-top>\n</div>\n","import { Component, OnInit, Renderer2 } from '@angular/core';\nimport { JobService } from '../../services/job.service';\nimport { Job, JobVerificationResult } from '../../models/job.model';\n\n@Component({\n  selector: 'app-job-listings',\n  templateUrl: './job-listings.component.html',\n  styleUrls: ['./job-listings.component.css']\n})\nexport class JobListingsComponent implements OnInit {\n  jobs: Job[] = [];\n  filteredJobs: Job[] = [];\n  isLoading: boolean = true;\n  error: string | null = null;\n  searchTerm: string = '';\n  selectedFilter: string = 'all';\n  sortOption: string = 'newest';\n  verificationResults: { [key: string]: { isVerifying: boolean, result?: JobVerificationResult } } = {};\n  cardAnimationState: { [key: string]: 'initial' | 'visible' | 'pulse' } = {};\n  animationDelayIncrement: number = 100; // ms between each card animation\n  isDarkMode: boolean = false;\n  \n  // Sample job data for demonstration\n  sampleJobs: Job[] = [\n    {\n      id: 'job1',\n      title: 'Senior Frontend Developer',\n      company: 'TechGrowth Inc.',\n      location: 'San Francisco, CA (Remote)',\n      description: 'We are looking for an experienced Frontend Developer proficient in Angular, React, or Vue.js to join our growing team. You will be responsible for building user interfaces for our enterprise SaaS platform.',\n      requirements: 'At least 5 years of experience with modern JavaScript frameworks. Strong understanding of responsive design, accessibility, and performance optimization.',\n      salary: '$120,000 - $150,000',\n      industry: 'Technology',\n      companyProfile: 'TechGrowth is a leading SaaS provider with over 500 enterprise clients worldwide. Our platform helps businesses streamline their operations and increase productivity.',\n      createdAt: new Date('2025-05-20').toISOString(),\n      employmentType: 'Full-time',\n      benefits: ['Health insurance', 'Remote work', '401(k) matching', 'Unlimited PTO'],\n      requiredExperience: '5+ years',\n      requiredEducation: 'Bachelor\\'s degree'\n    },\n    {\n      id: 'job2',\n      title: 'UX/UI Designer',\n      company: 'Creative Solutions',\n      location: 'New York, NY',\n      description: 'Join our creative team to design beautiful and intuitive user experiences for our clients. You will collaborate with developers and product managers to create designs that delight users.',\n      requirements: 'Proficiency in Figma, Adobe XD, or Sketch. Experience with user research and usability testing. Portfolio demonstrating strong visual design skills.',\n      salary: '$90,000 - $110,000',\n      industry: 'Design',\n      companyProfile: 'Creative Solutions is a design agency that works with startups and established companies to create memorable brand experiences and digital products.',\n      createdAt: new Date('2025-05-15').toISOString(),\n      employmentType: 'Full-time',\n      benefits: ['Health insurance', 'Flexible hours', 'Creative workspace'],\n      requiredExperience: '3+ years',\n      requiredEducation: 'Bachelor\\'s degree in Design or related field'\n    },\n    {\n      id: 'job3',\n      title: 'Data Scientist',\n      company: 'DataInsights',\n      location: 'Boston, MA (Hybrid)',\n      description: 'We\\'re seeking a talented Data Scientist to help us extract insights from complex datasets. You will build machine learning models and work with our engineering team to implement data-driven solutions.',\n      requirements: 'Strong background in statistics and machine learning. Experience with Python, R, and SQL. Familiarity with big data technologies like Spark.',\n      salary: '$130,000 - $160,000',\n      industry: 'Data Science',\n      companyProfile: 'DataInsights helps companies make better decisions through advanced analytics and machine learning. We work with clients in finance, healthcare, and retail.',\n      createdAt: new Date('2025-05-25').toISOString(),\n      employmentType: 'Full-time',\n      benefits: ['Competitive salary', 'Health benefits', 'Continuing education allowance'],\n      requiredExperience: '4+ years',\n      requiredEducation: 'Master\\'s or PhD in Computer Science, Statistics, or related field'\n    },\n    {\n      id: 'job4',\n      title: 'DevOps Engineer',\n      company: 'CloudNative Systems',\n      location: 'Austin, TX (Remote)',\n      description: 'Help us build and maintain our cloud infrastructure. You will work with our development team to implement CI/CD pipelines, manage Kubernetes clusters, and ensure high availability of our services.',\n      requirements: 'Experience with AWS, Azure, or GCP. Knowledge of containerization technologies like Docker and Kubernetes. Familiarity with Infrastructure as Code tools like Terraform.',\n      salary: '$115,000 - $140,000',\n      industry: 'Cloud Computing',\n      companyProfile: 'CloudNative Systems provides cloud infrastructure solutions for businesses of all sizes. We help companies migrate to the cloud and optimize their infrastructure for performance and cost.',\n      createdAt: new Date('2025-05-10').toISOString(),\n      employmentType: 'Full-time',\n      benefits: ['Remote work', 'Flexible hours', 'Home office stipend'],\n      requiredExperience: '3+ years',\n      requiredEducation: 'Bachelor\\'s degree in Computer Science or equivalent experience'\n    },\n    {\n      id: 'job5',\n      title: 'Product Manager',\n      company: 'InnovateTech',\n      location: 'Seattle, WA',\n      description: 'Lead the development of our flagship product from conception to launch. You will work with cross-functional teams to define product requirements, create roadmaps, and ensure successful delivery.',\n      requirements: 'Experience managing software products. Strong analytical and communication skills. Ability to translate business needs into product features.',\n      salary: '$125,000 - $155,000',\n      industry: 'Product Management',\n      companyProfile: 'InnovateTech creates cutting-edge software solutions that help businesses automate their workflows and increase efficiency. Our products are used by thousands of companies worldwide.',\n      createdAt: new Date('2025-05-05').toISOString(),\n      employmentType: 'Full-time',\n      benefits: ['Competitive salary', 'Stock options', 'Health benefits'],\n      requiredExperience: '5+ years',\n      requiredEducation: 'Bachelor\\'s degree'\n    },\n    {\n      id: 'job6',\n      title: 'Backend Developer',\n      company: 'ServerSide Solutions',\n      location: 'Chicago, IL (Hybrid)',\n      description: 'Join our backend team to build scalable and reliable APIs and services. You will work with modern technologies to create the backbone of our applications.',\n      requirements: 'Proficiency in Node.js, Python, or Java. Experience with RESTful APIs and microservices architecture. Knowledge of database systems like PostgreSQL or MongoDB.',\n      salary: '$110,000 - $135,000',\n      industry: 'Technology',\n      companyProfile: 'ServerSide Solutions specializes in building robust backend systems for web and mobile applications. We work with startups and enterprise clients to create scalable solutions.',\n      createdAt: new Date('2025-05-18').toISOString(),\n      employmentType: 'Full-time',\n      benefits: ['Health insurance', 'Flexible hours', 'Professional development budget'],\n      requiredExperience: '3+ years',\n      requiredEducation: 'Bachelor\\'s degree in Computer Science or related field'\n    }\n  ];\n\n  // Sample verification results\n  sampleVerificationResults = {\n    'job1': {\n      isVerifying: false,\n      result: {\n        isFake: false,\n        message: 'This job appears to be legitimate',\n        details: [\n          'Company has a verified online presence',\n          'Salary range is appropriate for the position',\n          'Job requirements are reasonable for the role'\n        ]\n      }\n    },\n    'job3': {\n      isVerifying: false,\n      result: {\n        isFake: true,\n        message: 'This job listing has suspicious elements',\n        details: [\n          'Salary is significantly above market rate',\n          'Company contact information is incomplete',\n          'Job description contains vague responsibilities'\n        ]\n      }\n    }\n  };\n\n  constructor(\n    private jobService: JobService,\n    private renderer: Renderer2\n  ) { }\n\n  ngOnInit(): void {\n    this.loadJobs();\n    this.checkDarkMode();\n  }\n\n  private checkDarkMode(): void {\n    // Check if dark mode is enabled by looking at the html element's class\n    const htmlElement = document.documentElement;\n    this.isDarkMode = htmlElement.classList.contains('dark');\n    \n    // Set up a mutation observer to watch for theme changes\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (mutation.attributeName === 'class') {\n          this.isDarkMode = htmlElement.classList.contains('dark');\n        }\n      });\n    });\n    \n    observer.observe(htmlElement, { attributes: true });\n  }\n\n  loadJobs(): void {\n    this.isLoading = true;\n    this.error = null;\n    \n    // Simulate API delay\n    setTimeout(() => {\n      // Try to load from API first\n      this.jobService.getJobs().subscribe({\n        next: (jobs) => {\n          this.jobs = jobs;\n          this.applyFilters();\n          this.isLoading = false;\n          \n          // Initialize animation states for all jobs\n          setTimeout(() => {\n            this.jobs.forEach((job, index) => {\n              if (job.id) {\n                // Set initial state\n                this.cardAnimationState[job.id] = 'initial';\n                \n                // Stagger the animations\n                setTimeout(() => {\n                  if (job.id) {\n                    this.cardAnimationState[job.id] = 'visible';\n                  }\n                }, index * this.animationDelayIncrement);\n              }\n            });\n          }, 0);\n        },\n        error: (err) => {\n          console.error('Error loading jobs from API:', err);\n          \n          // If API fails, use sample data\n          this.jobs = this.sampleJobs;\n          this.verificationResults = this.sampleVerificationResults;\n          this.applyFilters();\n          this.isLoading = false;\n          \n          // Initialize animation states for sample jobs\n          setTimeout(() => {\n            this.jobs.forEach((job, index) => {\n              if (job.id) {\n                // Set initial state\n                this.cardAnimationState[job.id] = 'initial';\n                \n                // Stagger the animations\n                setTimeout(() => {\n                  if (job.id) {\n                    this.cardAnimationState[job.id] = 'visible';\n                  }\n                }, index * this.animationDelayIncrement);\n              }\n            });\n          }, 0);\n        }\n      });\n    }, 1500); // Simulate network delay\n  }\n\n  applyFilters(): void {\n    // Filter by search term and industry\n    let filtered = this.jobs;\n    \n    // Apply search filter\n    if (this.searchTerm.trim() !== '') {\n      const searchTermLower = this.searchTerm.toLowerCase();\n      filtered = filtered.filter(job => \n        job.title.toLowerCase().includes(searchTermLower) ||\n        job.description.toLowerCase().includes(searchTermLower) ||\n        job.companyProfile.toLowerCase().includes(searchTermLower) ||\n        job.location.toLowerCase().includes(searchTermLower)\n      );\n    }\n    \n    // Apply industry filter\n    if (this.selectedFilter !== 'all') {\n      filtered = filtered.filter(job => job.industry === this.selectedFilter);\n    }\n    \n    // Apply sorting\n    if (this.sortOption === 'a-z') {\n      filtered = filtered.sort((a, b) => a.title.localeCompare(b.title));\n    } else if (this.sortOption === 'z-a') {\n      filtered = filtered.sort((a, b) => b.title.localeCompare(a.title));\n    } else if (this.sortOption === 'newest') {\n      // Assuming jobs have a createdAt field\n      filtered = filtered.sort((a, b) => {\n        const dateA = new Date(a.createdAt || 0);\n        const dateB = new Date(b.createdAt || 0);\n        return dateB.getTime() - dateA.getTime();\n      });\n    } else if (this.sortOption === 'oldest') {\n      filtered = filtered.sort((a, b) => {\n        const dateA = new Date(a.createdAt || 0);\n        const dateB = new Date(b.createdAt || 0);\n        return dateA.getTime() - dateB.getTime();\n      });\n    }\n    \n    this.filteredJobs = filtered;\n  }\n\n  resetFilters(): void {\n    this.searchTerm = '';\n    this.selectedFilter = 'all';\n    this.sortOption = 'newest';\n    this.applyFilters();\n  }\n\n  getIndustryCategories(): string[] {\n    // Extract unique industry categories from jobs\n    const industries = new Set<string>();\n    this.jobs.forEach(job => {\n      if (job.industry) {\n        industries.add(job.industry);\n      }\n    });\n    return Array.from(industries).sort();\n  }\n\n  verifyJob(jobId: string): void {\n    // If already verified, trigger pulse animation\n    if (this.verificationResults[jobId]?.result) {\n      if (this.cardAnimationState[jobId]) {\n        this.cardAnimationState[jobId] = 'pulse';\n        setTimeout(() => {\n          if (this.cardAnimationState[jobId]) {\n            this.cardAnimationState[jobId] = 'visible';\n          }\n        }, 600); // Match the pulse animation duration\n      }\n    }\n    \n    // Set verifying state\n    this.verificationResults[jobId] = { isVerifying: true };\n    \n    // Simulate verification delay\n    setTimeout(() => {\n      // For demo purposes, randomly decide if job is fake or not\n      const isFake = Math.random() > 0.7;\n      \n      this.verificationResults[jobId] = { \n        isVerifying: false, \n        result: {\n          isFake: isFake,\n          message: isFake ? 'This job listing has suspicious elements' : 'This job appears to be legitimate',\n          details: isFake ? \n            [\n              'Salary is significantly above market rate',\n              'Company contact information is incomplete',\n              'Job description contains vague responsibilities'\n            ] : \n            [\n              'Company has a verified online presence',\n              'Salary range is appropriate for the position',\n              'Job requirements are reasonable for the role'\n            ]\n        }\n      };\n      \n      // Trigger pulse animation after verification\n      if (this.cardAnimationState[jobId]) {\n        this.cardAnimationState[jobId] = 'pulse';\n        setTimeout(() => {\n          if (this.cardAnimationState[jobId]) {\n            this.cardAnimationState[jobId] = 'visible';\n          }\n        }, 600); // Match the pulse animation duration\n      }\n    }, 2000); // Simulate verification delay\n  }\n\n  truncateText(text: string, maxLength: number): string {\n    if (text.length <= maxLength) {\n      return text;\n    }\n    return text.substring(0, maxLength) + '...';\n  }\n\n  onCardClick(event: MouseEvent, jobId?: string): void {\n    // Don't trigger for clicks on buttons or links inside the card\n    if (\n      event.target instanceof HTMLElement && \n      (event.target.tagName === 'BUTTON' || \n       event.target.tagName === 'A' ||\n       event.target.closest('button') ||\n       event.target.closest('a'))\n    ) {\n      return;\n    }\n\n    // If job has not been verified yet, verify it\n    if (jobId && !this.verificationResults[jobId]) {\n      this.verifyJob(jobId);\n    }\n  }\n  \n  // Add missing expandDescription method\n  expandDescription(jobId: string): void {\n    // This method would typically open a modal or expand the job details\n    console.log('Expanding description for job:', jobId);\n    \n    // Find the job\n    const job = this.jobs.find(j => j.id === jobId);\n    if (job) {\n      // For demo purposes, just toggle a verification if not already done\n      if (!this.verificationResults[jobId]) {\n        this.verifyJob(jobId);\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}