{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged, delay } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/job.service\";\nimport * as i3 from \"../../services/url-analysis.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/tooltip\";\nfunction JobFormComponent_div_10_div_4__svg_path_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"path\", 52);\n  }\n}\nfunction JobFormComponent_div_10_div_4__svg_path_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"path\", 53);\n  }\n}\nfunction JobFormComponent_div_10_div_4__svg_path_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"path\", 54);\n  }\n}\nfunction JobFormComponent_div_10_div_4_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 55)(1, \"span\", 56);\n    i0.ɵɵtext(2, \"Details\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(3);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", ctx_r11.riskLevelDetails.join(\"\\n\"));\n  }\n}\nfunction JobFormComponent_div_10_div_4_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 57);\n    i0.ɵɵtext(1, \" Title is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobFormComponent_div_10_div_4_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 57);\n    i0.ɵɵtext(1, \" Company name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobFormComponent_div_10_div_4_div_30_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Company email is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobFormComponent_div_10_div_4_div_30_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Invalid email format.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobFormComponent_div_10_div_4_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 57);\n    i0.ɵɵtemplate(1, JobFormComponent_div_10_div_4_div_30_span_1_Template, 2, 0, \"span\", 37);\n    i0.ɵɵtemplate(2, JobFormComponent_div_10_div_4_div_30_span_2_Template, 2, 0, \"span\", 37);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(3);\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r14.jobForm.get(\"companyEmail\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r14.jobForm.get(\"companyEmail\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"email\"]) && !((tmp_1_0 = ctx_r14.jobForm.get(\"companyEmail\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"required\"]));\n  }\n}\nfunction JobFormComponent_div_10_div_4_span_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Analyser l'URL\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobFormComponent_div_10_div_4_span_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 58);\n    i0.ɵɵelement(2, \"circle\", 59)(3, \"path\", 60);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" Analyse en cours... \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0, a1, a2) {\n  return {\n    \"text-green-600 dark:text-green-400\": a0,\n    \"text-red-600 dark:text-red-400\": a1,\n    \"text-blue-600 dark:text-blue-400\": a2\n  };\n};\nfunction JobFormComponent_div_10_div_4_div_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 61)(1, \"p\", 62);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(2, _c0, ctx_r17.urlAnalysisStatus === \"safe\", ctx_r17.urlAnalysisStatus === \"suspicious\" || ctx_r17.urlAnalysisStatus === \"error\", ctx_r17.urlAnalysisStatus === \"analyzing\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r17.urlAnalysisMessage, \" \");\n  }\n}\nfunction JobFormComponent_div_10_div_4_div_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 57);\n    i0.ɵɵtext(1, \" Please enter a valid URL. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobFormComponent_div_10_div_4_div_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 57);\n    i0.ɵɵtext(1, \" Location is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobFormComponent_div_10_div_4_div_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 57);\n    i0.ɵɵtext(1, \" Industry is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobFormComponent_div_10_div_4_div_69_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 57);\n    i0.ɵɵtext(1, \" Job description is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobFormComponent_div_10_div_4_div_76_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 57);\n    i0.ɵɵtext(1, \" Requirements are required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c1 = function (a0, a1, a2, a3) {\n  return {\n    \"bg-green-100 text-green-800 dark:bg-green-900/40 dark:text-green-200\": a0,\n    \"bg-yellow-100 text-yellow-800 dark:bg-yellow-900/40 dark:text-yellow-200\": a1,\n    \"bg-orange-100 text-orange-800 dark:bg-orange-900/40 dark:text-orange-200\": a2,\n    \"bg-red-100 text-red-800 dark:bg-red-900/40 dark:text-red-200\": a3\n  };\n};\nconst _c2 = function (a0, a1, a2, a3) {\n  return {\n    \"text-green-600 dark:text-green-300\": a0,\n    \"text-yellow-600 dark:text-yellow-300\": a1,\n    \"text-orange-600 dark:text-orange-300\": a2,\n    \"text-red-600 dark:text-red-300\": a3\n  };\n};\nconst _c3 = function (a0) {\n  return {\n    \"border-red-500\": a0\n  };\n};\nfunction JobFormComponent_div_10_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"div\", 17)(2, \"div\", 18);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(3, \"svg\", 19);\n    i0.ɵɵtemplate(4, JobFormComponent_div_10_div_4__svg_path_4_Template, 1, 0, \"path\", 20);\n    i0.ɵɵtemplate(5, JobFormComponent_div_10_div_4__svg_path_5_Template, 1, 0, \"path\", 21);\n    i0.ɵɵtemplate(6, JobFormComponent_div_10_div_4__svg_path_6_Template, 1, 0, \"path\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(7, \"span\", 23);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(9, JobFormComponent_div_10_div_4_div_9_Template, 3, 1, \"div\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\")(11, \"label\", 25);\n    i0.ɵɵtext(12, \"Title \");\n    i0.ɵɵelementStart(13, \"span\", 26);\n    i0.ɵɵtext(14, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(15, \"input\", 27);\n    i0.ɵɵtemplate(16, JobFormComponent_div_10_div_4_div_16_Template, 2, 0, \"div\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\")(18, \"label\", 29);\n    i0.ɵɵtext(19, \"Company Name \");\n    i0.ɵɵelementStart(20, \"span\", 26);\n    i0.ɵɵtext(21, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(22, \"input\", 30);\n    i0.ɵɵtemplate(23, JobFormComponent_div_10_div_4_div_23_Template, 2, 0, \"div\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"div\")(25, \"label\", 31);\n    i0.ɵɵtext(26, \"Company Email \");\n    i0.ɵɵelementStart(27, \"span\", 26);\n    i0.ɵɵtext(28, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(29, \"input\", 32);\n    i0.ɵɵtemplate(30, JobFormComponent_div_10_div_4_div_30_Template, 3, 2, \"div\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"div\")(32, \"label\", 33);\n    i0.ɵɵtext(33, \"Job URL\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"div\", 34);\n    i0.ɵɵelement(35, \"input\", 35);\n    i0.ɵɵelementStart(36, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function JobFormComponent_div_10_div_4_Template_button_click_36_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r25.analyzeJobUrl());\n    });\n    i0.ɵɵtemplate(37, JobFormComponent_div_10_div_4_span_37_Template, 2, 0, \"span\", 37);\n    i0.ɵɵtemplate(38, JobFormComponent_div_10_div_4_span_38_Template, 5, 0, \"span\", 37);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(39, JobFormComponent_div_10_div_4_div_39_Template, 3, 6, \"div\", 38);\n    i0.ɵɵtemplate(40, JobFormComponent_div_10_div_4_div_40_Template, 2, 0, \"div\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(41, \"div\")(42, \"label\", 39);\n    i0.ɵɵtext(43, \"Location \");\n    i0.ɵɵelementStart(44, \"span\", 26);\n    i0.ɵɵtext(45, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(46, \"input\", 40);\n    i0.ɵɵtemplate(47, JobFormComponent_div_10_div_4_div_47_Template, 2, 0, \"div\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(48, \"div\")(49, \"label\", 41);\n    i0.ɵɵtext(50, \"Industry \");\n    i0.ɵɵelementStart(51, \"span\", 26);\n    i0.ɵɵtext(52, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(53, \"input\", 42);\n    i0.ɵɵtemplate(54, JobFormComponent_div_10_div_4_div_54_Template, 2, 0, \"div\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(55, \"div\")(56, \"label\", 43);\n    i0.ɵɵtext(57, \"Salary Range\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(58, \"input\", 44);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(59, \"div\")(60, \"label\", 45);\n    i0.ɵɵtext(61, \"Company Profile\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(62, \"textarea\", 46);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(63, \"div\", 47)(64, \"label\", 48);\n    i0.ɵɵtext(65, \"Job Description \");\n    i0.ɵɵelementStart(66, \"span\", 26);\n    i0.ɵɵtext(67, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(68, \"textarea\", 49);\n    i0.ɵɵtemplate(69, JobFormComponent_div_10_div_4_div_69_Template, 2, 0, \"div\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(70, \"div\", 47)(71, \"label\", 50);\n    i0.ɵɵtext(72, \"Requirements \");\n    i0.ɵɵelementStart(73, \"span\", 26);\n    i0.ɵɵtext(74, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(75, \"textarea\", 51);\n    i0.ɵɵtemplate(76, JobFormComponent_div_10_div_4_div_76_Template, 2, 0, \"div\", 28);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    let tmp_14_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(27, _c1, ctx_r3.riskLevel === \"Low Risk\", ctx_r3.riskLevel === \"Medium Risk\", ctx_r3.riskLevel === \"High Risk\", ctx_r3.riskLevel === \"Very High Risk\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(32, _c2, ctx_r3.riskLevel === \"Low Risk\", ctx_r3.riskLevel === \"Medium Risk\", ctx_r3.riskLevel === \"High Risk\", ctx_r3.riskLevel === \"Very High Risk\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.riskLevel === \"Low Risk\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.riskLevel === \"Medium Risk\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.riskLevel === \"High Risk\" || ctx_r3.riskLevel === \"Very High Risk\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Risk Level: \", ctx_r3.riskLevel, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.riskLevelDetails.length > 0);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(37, _c3, ctx_r3.isFieldInvalid(\"title\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.isFieldInvalid(\"title\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(39, _c3, ctx_r3.isFieldInvalid(\"companyName\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.isFieldInvalid(\"companyName\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(41, _c3, ctx_r3.isFieldInvalid(\"companyEmail\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.isFieldInvalid(\"companyEmail\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(43, _c3, ctx_r3.isFieldInvalid(\"jobUrl\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r3.urlAnalysisStatus === \"analyzing\" || ((tmp_14_0 = ctx_r3.jobForm.get(\"jobUrl\")) == null ? null : tmp_14_0.invalid) || ((tmp_14_0 = ctx_r3.jobForm.get(\"jobUrl\")) == null ? null : tmp_14_0.value) === \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.urlAnalysisStatus !== \"analyzing\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.urlAnalysisStatus === \"analyzing\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.urlAnalysisStatus !== \"idle\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.isFieldInvalid(\"jobUrl\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(45, _c3, ctx_r3.isFieldInvalid(\"location\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.isFieldInvalid(\"location\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(47, _c3, ctx_r3.isFieldInvalid(\"industry\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.isFieldInvalid(\"industry\"));\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(49, _c3, ctx_r3.isFieldInvalid(\"description\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.isFieldInvalid(\"description\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(51, _c3, ctx_r3.isFieldInvalid(\"requirements\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.isFieldInvalid(\"requirements\"));\n  }\n}\nfunction JobFormComponent_div_10_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"div\")(2, \"label\", 63);\n    i0.ɵɵtext(3, \"Employment Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"select\", 64)(5, \"option\", 65);\n    i0.ɵɵtext(6, \"Select an option\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"option\", 66);\n    i0.ɵɵtext(8, \"Full-time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"option\", 67);\n    i0.ɵɵtext(10, \"Part-time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"option\", 68);\n    i0.ɵɵtext(12, \"Contract\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"option\", 69);\n    i0.ɵɵtext(14, \"Temporary\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"option\", 70);\n    i0.ɵɵtext(16, \"Internship\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(17, \"div\")(18, \"label\", 71);\n    i0.ɵɵtext(19, \"Required Experience (Years)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(20, \"input\", 72);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"div\")(22, \"label\", 73);\n    i0.ɵɵtext(23, \"Required Education\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"select\", 74)(25, \"option\", 65);\n    i0.ɵɵtext(26, \"Select an option\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"option\", 75);\n    i0.ɵɵtext(28, \"High School\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"option\", 76);\n    i0.ɵɵtext(30, \"Associate's Degree\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"option\", 77);\n    i0.ɵɵtext(32, \"Bachelor's Degree\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"option\", 78);\n    i0.ɵɵtext(34, \"Master's Degree\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"option\", 79);\n    i0.ɵɵtext(36, \"Doctorate\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(37, \"div\")(38, \"label\", 80);\n    i0.ɵɵtext(39, \"Telecommuting\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(40, \"select\", 81)(41, \"option\", 82);\n    i0.ɵɵtext(42, \"Select an option\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(43, \"option\", 82);\n    i0.ɵɵtext(44, \"Yes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(45, \"option\", 82);\n    i0.ɵɵtext(46, \"No\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(47, \"div\")(48, \"label\", 83);\n    i0.ɵɵtext(49, \"Has Company Logo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(50, \"select\", 84)(51, \"option\", 82);\n    i0.ɵɵtext(52, \"Select an option\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(53, \"option\", 82);\n    i0.ɵɵtext(54, \"Yes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(55, \"option\", 82);\n    i0.ɵɵtext(56, \"No\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(57, \"div\")(58, \"label\", 85);\n    i0.ɵɵtext(59, \"Has Questions\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(60, \"select\", 86)(61, \"option\", 82);\n    i0.ɵɵtext(62, \"Select an option\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(63, \"option\", 82);\n    i0.ɵɵtext(64, \"Yes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(65, \"option\", 82);\n    i0.ɵɵtext(66, \"No\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(67, \"div\")(68, \"label\", 87);\n    i0.ɵɵtext(69, \"Department\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(70, \"input\", 88);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(71, \"div\")(72, \"label\", 89);\n    i0.ɵɵtext(73, \"Function\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(74, \"input\", 90);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(75, \"div\", 47)(76, \"label\", 91);\n    i0.ɵɵtext(77, \"Benefits\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(78, \"input\", 92);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(41);\n    i0.ɵɵproperty(\"ngValue\", null);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngValue\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngValue\", false);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngValue\", null);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngValue\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngValue\", false);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngValue\", null);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngValue\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngValue\", false);\n  }\n}\nfunction JobFormComponent_div_10_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 93);\n    i0.ɵɵlistener(\"click\", function JobFormComponent_div_10_button_7_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r27 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r27.previousFormPage());\n    });\n    i0.ɵɵtext(1, \" Previous \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobFormComponent_div_10_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 94);\n    i0.ɵɵlistener(\"click\", function JobFormComponent_div_10_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r30);\n      const ctx_r29 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r29.nextFormPage());\n    });\n    i0.ɵɵtext(1, \" Next \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobFormComponent_div_10_button_9_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Check Job\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobFormComponent_div_10_button_9_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 97);\n    i0.ɵɵelement(2, \"circle\", 59)(3, \"path\", 60);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" Processing... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobFormComponent_div_10_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 95);\n    i0.ɵɵtemplate(1, JobFormComponent_div_10_button_9_span_1_Template, 2, 0, \"span\", 37);\n    i0.ɵɵtemplate(2, JobFormComponent_div_10_button_9_span_2_Template, 5, 0, \"span\", 96);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r7.jobForm.invalid || ctx_r7.isSubmitting);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r7.isSubmitting);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.isSubmitting);\n  }\n}\nconst _c4 = function (a0, a1) {\n  return {\n    \"justify-between\": a0,\n    \"justify-end\": a1\n  };\n};\nfunction JobFormComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r34 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"h2\", 9);\n    i0.ɵɵtext(2, \"Job Details Form\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 10);\n    i0.ɵɵlistener(\"ngSubmit\", function JobFormComponent_div_10_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r33 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r33.onSubmit());\n    });\n    i0.ɵɵtemplate(4, JobFormComponent_div_10_div_4_Template, 77, 53, \"div\", 11);\n    i0.ɵɵtemplate(5, JobFormComponent_div_10_div_5_Template, 79, 9, \"div\", 11);\n    i0.ɵɵelementStart(6, \"div\", 12);\n    i0.ɵɵtemplate(7, JobFormComponent_div_10_button_7_Template, 2, 0, \"button\", 13);\n    i0.ɵɵtemplate(8, JobFormComponent_div_10_button_8_Template, 2, 0, \"button\", 14);\n    i0.ɵɵtemplate(9, JobFormComponent_div_10_button_9_Template, 3, 3, \"button\", 15);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.jobForm);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.currentFormPage === 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.currentFormPage === 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(7, _c4, ctx_r0.currentFormPage > 0, ctx_r0.currentFormPage === 0));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.currentFormPage > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.currentFormPage < 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.currentFormPage === 1);\n  }\n}\nfunction JobFormComponent_div_11_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 57);\n    i0.ɵɵtext(1, \" Please enter a valid URL. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobFormComponent_div_11_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Scrape and Check\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobFormComponent_div_11_span_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 97);\n    i0.ɵɵelement(2, \"circle\", 59)(3, \"path\", 60);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" Processing... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobFormComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r39 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"h2\", 9);\n    i0.ɵɵtext(2, \"Job Scraper\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\", 98);\n    i0.ɵɵtext(4, \"Enter the URL of a job posting to scrape and analyze its details.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"form\", 10);\n    i0.ɵɵlistener(\"ngSubmit\", function JobFormComponent_div_11_Template_form_ngSubmit_5_listener() {\n      i0.ɵɵrestoreView(_r39);\n      const ctx_r38 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r38.onScraperSubmit());\n    });\n    i0.ɵɵelementStart(6, \"div\", 99)(7, \"label\", 100);\n    i0.ɵɵtext(8, \"Job Posting URL \");\n    i0.ɵɵelementStart(9, \"span\", 26);\n    i0.ɵɵtext(10, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(11, \"input\", 101);\n    i0.ɵɵtemplate(12, JobFormComponent_div_11_div_12_Template, 2, 0, \"div\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 102)(14, \"button\", 95);\n    i0.ɵɵtemplate(15, JobFormComponent_div_11_span_15_Template, 2, 0, \"span\", 37);\n    i0.ɵɵtemplate(16, JobFormComponent_div_11_span_16_Template, 5, 0, \"span\", 96);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.scraperForm);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c3, ctx_r1.isScraperFieldInvalid(\"url\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isScraperFieldInvalid(\"url\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.scraperForm.invalid || ctx_r1.isScraperSubmitting);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.isScraperSubmitting);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isScraperSubmitting);\n  }\n}\nfunction JobFormComponent_div_12__svg_svg_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 118);\n    i0.ɵɵelement(1, \"path\", 119);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobFormComponent_div_12__svg_svg_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 120);\n    i0.ɵɵelement(1, \"path\", 107);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobFormComponent_div_12_div_14_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 125)(1, \"div\", 126);\n    i0.ɵɵtext(2, \"\\u2022\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 127);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const detail_r44 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(detail_r44);\n  }\n}\nfunction JobFormComponent_div_12_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 121)(1, \"h3\", 122);\n    i0.ɵɵtext(2, \"Analysis Details\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 123);\n    i0.ɵɵtemplate(4, JobFormComponent_div_12_div_14_div_4_Template, 5, 1, \"div\", 124);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r42 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r42.jobResult.details);\n  }\n}\nconst _c5 = function (a0, a1) {\n  return {\n    \"bg-green-100 dark:bg-green-900\": a0,\n    \"bg-red-100 dark:bg-red-900\": a1\n  };\n};\nconst _c6 = function (a0, a1) {\n  return {\n    \"bg-green-50 dark:bg-green-900/20\": a0,\n    \"bg-red-50 dark:bg-red-900/20\": a1\n  };\n};\nfunction JobFormComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r46 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 103)(1, \"div\", 104)(2, \"button\", 105);\n    i0.ɵɵlistener(\"click\", function JobFormComponent_div_12_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r45 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r45.closeModal());\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(3, \"svg\", 106);\n    i0.ɵɵelement(4, \"path\", 107);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(5, \"div\", 108)(6, \"div\", 109);\n    i0.ɵɵtemplate(7, JobFormComponent_div_12__svg_svg_7_Template, 2, 0, \"svg\", 110);\n    i0.ɵɵtemplate(8, JobFormComponent_div_12__svg_svg_8_Template, 2, 0, \"svg\", 111);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"h2\", 112);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\", 113)(12, \"p\", 114);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(14, JobFormComponent_div_12_div_14_Template, 5, 1, \"div\", 115);\n    i0.ɵɵelementStart(15, \"div\", 116)(16, \"button\", 117);\n    i0.ɵɵlistener(\"click\", function JobFormComponent_div_12_Template_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r47 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r47.closeModal());\n    });\n    i0.ɵɵtext(17, \" Close \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(7, _c5, !ctx_r2.jobResult.isFake, ctx_r2.jobResult.isFake));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.jobResult.isFake);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.jobResult.isFake);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.jobResult.isFake ? \"Fraudulent Job Detected\" : \"Job Appears Legitimate\", \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(10, _c6, !ctx_r2.jobResult.isFake, ctx_r2.jobResult.isFake));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.jobResult.message, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.jobResult.details && ctx_r2.jobResult.details.length > 0);\n  }\n}\nexport class JobFormComponent {\n  constructor(fb, jobService,\n  // Injectez votre JobService si vous en avez un\n  urlAnalysisService // <-- Injection du service d'analyse d'URL\n  ) {\n    this.fb = fb;\n    this.jobService = jobService;\n    this.urlAnalysisService = urlAnalysisService;\n    this.selectedOption = 'form'; // Keeps track of the active tab\n    this.isSubmitting = false;\n    this.isScraperSubmitting = false;\n    this.jobResult = null;\n    this.currentFormPage = 0;\n    this.showModal = false;\n    this.taglines = [\"Empowering smarter hiring, one prediction at a time.\", \"Unlocking potential, one talent insight at a time.\", \"Beyond resumes: predicting your perfect match.\", \"Your competitive edge in the talent landscape.\"];\n    this.currentTaglineIndex = 0;\n    this.currentTagline = '';\n    // NEW: Risk Level Indicator properties\n    this.riskLevel = 'Low Risk';\n    this.riskLevelDetails = [];\n    // NEW: URL Analysis specific properties\n    this.urlAnalysisStatus = 'idle';\n    this.urlAnalysisMessage = '';\n    // Define the keywords for fraud detection (keywords themselves remain French for detection logic)\n    this.fraudKeywords = {\n      \"money\": [\"argent\", \"cash\", \"gains\", \"revenus\", \"profit\", \"salaire élevé\", \"paie\", \"rémunération\", \"forte rémunération\", \"gagner\", \"profit\", \"bénéfice\", \"richesse\"],\n      \"urgent\": [\"urgent\", \"immédiat\", \"dès que possible\", \"asap\", \"opportunité limitée\", \"poste à pourvoir rapidement\", \"début immédiat\", \"embauche rapide\"],\n      \"payment\": [\"paiement\", \"versement\", \"transfert\", \"virement\", \"western union\", \"moneygram\", \"paypal\", \"crypto\", \"bitcoin\", \"ethereum\", \"cryptomonnaie\"],\n      \"scam\": [\"travail à domicile\", \"revenu passif\", \"sans expérience\", \"emploi facile\", \"argent rapide\", \"enrichissement\", \"opportunité unique\", \"secret\", \"méthode exclusive\"],\n      \"identity\": [\"pièce d'identité\", \"copie carte identité\", \"passeport\", \"numéro sécurité sociale\", \"coordonnées bancaires\", \"RIB\", \"IBAN\", \"numéro de carte\", \"CVV\"]\n    };\n    // List of email domains considered fraudulent\n    this.forbiddenEmailDomains = [\"freemail.com\", \"mail.ru\", \"yandex.com\", \"protonmail.com\", \"tutanota.com\", \"gmx.com\", \"hotmail.com\", \"outlook.com\", \"yahoo.com\", \"aol.com\", \"scamjob.com\", \"fraude-emploi.com\", \"quickmoney.com\", \"fastcash.com\", \"anonymous-email.com\", \"gmail.com\" // Added gmail.com explicitly if not already covered\n    ];\n\n    this.jobForm = this.fb.group({\n      title: ['', Validators.required],\n      location: ['', Validators.required],\n      department: [''],\n      salaryRange: [''],\n      companyName: ['', Validators.required],\n      companyEmail: ['', [Validators.required, Validators.email]],\n      description: ['', Validators.required],\n      requirements: ['', Validators.required],\n      benefits: [''],\n      telecommuting: [null],\n      hasCompanyLogo: [null],\n      hasQuestions: [null],\n      employmentType: [''],\n      requiredExperience: [null],\n      requiredEducation: [''],\n      industry: ['', Validators.required],\n      function: [''],\n      companyProfile: [''],\n      jobUrl: ['', [Validators.pattern('^(https?|ftp)://[^\\\\s/$.?#].[^\\\\s]*$')]] // Ajout de la validation d'URL\n    });\n\n    this.scraperForm = this.fb.group({\n      url: ['', [Validators.required, Validators.pattern('https?://.+')]]\n    });\n  }\n  ngOnInit() {\n    this.currentTagline = this.taglines[this.currentTaglineIndex];\n    this.startTaglineRotation();\n    this.setupFormValueChanges(); // Call the setup method\n    this.calculateRiskLevel(); // Initial calculation\n    // Listen for changes on jobUrl specifically to reset analysis status\n    this.jobForm.get('jobUrl')?.valueChanges.pipe(debounceTime(500), distinctUntilChanged()).subscribe(() => {\n      // Only reset if it was previously analyzed and changed\n      if (this.urlAnalysisStatus !== 'idle') {\n        this.urlAnalysisStatus = 'idle';\n        this.urlAnalysisMessage = '';\n        this.calculateRiskLevel(); // Recalculate risk if URL analysis state reset\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.taglineInterval) {\n      clearInterval(this.taglineInterval);\n    }\n  }\n  startTaglineRotation() {\n    this.taglineInterval = setInterval(() => {\n      this.currentTaglineIndex = (this.currentTaglineIndex + 1) % this.taglines.length;\n      this.currentTagline = this.taglines[this.currentTaglineIndex];\n    }, 5000);\n  }\n  // NEW: Setup form value changes subscription for real-time risk calculation\n  setupFormValueChanges() {\n    this.jobForm.valueChanges.pipe(debounceTime(500),\n    // Wait for 500ms of no new input\n    distinctUntilChanged((prev, curr) => JSON.stringify(prev) === JSON.stringify(curr)) // Only emit if value truly changed\n    ).subscribe(() => {\n      // We calculate risk level only on the first page fields for real-time feedback\n      // The full submission will perform a final check.\n      this.calculateRiskLevel();\n    });\n  }\n  // NEW: Method to calculate the real-time risk level\n  calculateRiskLevel() {\n    let score = 0; // Higher score means lower risk\n    this.riskLevelDetails = []; // Clear previous details\n    const formValues = this.jobForm.getRawValue(); // Use getRawValue to get values even if disabled\n    // 1. Company Email Domain Check\n    const companyEmail = formValues.companyEmail;\n    if (companyEmail && companyEmail.includes('@')) {\n      const emailDomain = companyEmail.substring(companyEmail.lastIndexOf('@') + 1).toLowerCase();\n      if (this.forbiddenEmailDomains.includes(emailDomain)) {\n        score -= 50; // High penalty\n        this.addRiskDetail(`Suspicious: Company email domain (@${emailDomain}) is commonly associated with scams.`);\n      }\n    }\n    // 2. Keyword Detection in Description and Requirements\n    const description = (formValues.description || '').toLowerCase();\n    const requirements = (formValues.requirements || '').toLowerCase();\n    const suspiciousKeywordsFound = [];\n    for (const category in this.fraudKeywords) {\n      if (Object.prototype.hasOwnProperty.call(this.fraudKeywords, category)) {\n        const keywords = this.fraudKeywords[category];\n        for (const keyword of keywords) {\n          if (description.includes(keyword.toLowerCase()) || requirements.includes(keyword.toLowerCase())) {\n            if (!suspiciousKeywordsFound.includes(keyword)) {\n              suspiciousKeywordsFound.push(keyword);\n              score -= 10; // Penalty per found keyword\n            }\n          }\n        }\n      }\n    }\n\n    if (suspiciousKeywordsFound.length > 0) {\n      this.addRiskDetail(`Suspicious: Keywords detected in job description/requirements: ${suspiciousKeywordsFound.join(', ')}.`);\n    }\n    // 3. Salary Range Check\n    const salaryRangeValue = formValues.salaryRange;\n    if (salaryRangeValue !== null && salaryRangeValue.trim() !== '') {\n      const cleanSalaryString = salaryRangeValue.replace(/[^0-9.,]/g, ''); // Allow comma for thousands separator\n      const parsedSalary = parseFloat(cleanSalaryString.replace(',', '.')); // Replace comma with dot for float parsing\n      // Check if it's a number and if it's unrealistically low or negative\n      if (!isNaN(parsedSalary) && parsedSalary < 100) {\n        // Example: less than 100 could be a red flag\n        score -= 30; // High penalty\n        this.addRiskDetail('Suspicious: Salary range appears unrealistically low or invalid.');\n      }\n    }\n    // 4. Presence of crucial fields (positive reinforcement)\n    if (formValues.title) score += 2;\n    if (formValues.companyName) score += 2;\n    if (formValues.location) score += 2;\n    if (formValues.industry) score += 2;\n    if (formValues.description) score += 2;\n    if (formValues.requirements) score += 2;\n    // 5. Check for missing crucial \"trust\" fields that could indicate professionalism\n    if (!formValues.companyProfile) {\n      score -= 5;\n      this.addRiskDetail('Warning: Company profile is empty, which can be a red flag.');\n    }\n    if (!formValues.jobUrl) {\n      score -= 5;\n      this.addRiskDetail('Warning: Job URL is empty, which can be a red flag.');\n    }\n    // 6. Integrate URL Analysis Service result (if already analyzed)\n    if (this.urlAnalysisStatus === 'suspicious') {\n      score -= 40; // Significant penalty for suspicious URL\n      this.addRiskDetail(`URL Analysis: ${this.urlAnalysisMessage || 'URL is marked as suspicious.'}`);\n    } else if (this.urlAnalysisStatus === 'error') {\n      score -= 20; // Penalty for analysis error, as it could mean an issue\n      this.addRiskDetail(`URL Analysis: Error during URL analysis. It might be problematic.`);\n    }\n    // If 'safe', it adds nothing to risk details, just ensures no previous URL risk is present.\n    // Determine risk level based on score\n    // These thresholds might need adjustment based on your testing and desired sensitivity.\n    if (score < -80) {\n      // Very high number of red flags including potential URL issues\n      this.riskLevel = 'Very High Risk';\n    } else if (score < -30) {\n      // Multiple significant red flags\n      this.riskLevel = 'High Risk';\n    } else if (score < 0) {\n      // Some potential red flags\n      this.riskLevel = 'Medium Risk';\n    } else {\n      // Few to no red flags\n      this.riskLevel = 'Low Risk';\n    }\n    // Ensure initial state is low risk if no details\n    if (this.riskLevelDetails.length === 0) {\n      this.riskLevel = 'Low Risk';\n    }\n  }\n  // Helper to add unique risk details\n  addRiskDetail(detail) {\n    if (!this.riskLevelDetails.includes(detail)) {\n      this.riskLevelDetails.push(detail);\n    }\n  }\n  // NEW: Method to analyze the URL\n  analyzeJobUrl() {\n    const jobUrlControl = this.jobForm.get('jobUrl');\n    const url = jobUrlControl?.value;\n    // Basic client-side validation before calling the service\n    if (!url || jobUrlControl?.invalid) {\n      this.urlAnalysisStatus = 'error';\n      this.urlAnalysisMessage = 'Veuillez entrer une URL valide avant d\\'analyser.';\n      jobUrlControl?.markAsTouched(); // Marque le champ comme touché pour afficher l'erreur de validation Angular\n      this.calculateRiskLevel(); // Recalculate risk if URL is invalid\n      return;\n    }\n    this.urlAnalysisStatus = 'analyzing';\n    this.urlAnalysisMessage = 'Analyse de l\\'URL en cours...';\n    this.calculateRiskLevel(); // Update risk level to show \"analyzing\" state if it affects it\n    this.urlAnalysisService.analyzeUrl(url).subscribe(result => {\n      this.urlAnalysisStatus = result.status;\n      this.urlAnalysisMessage = result.message || '';\n      this.calculateRiskLevel(); // Recalculate risk level after analysis result\n    }, error => {\n      // This catchError is actually handled within the service now,\n      // so this 'error' callback might not be hit if the service returns 'of({ status: 'suspicious' })'\n      // But good to keep for unexpected errors outside the service's catch.\n      this.urlAnalysisStatus = 'error';\n      this.urlAnalysisMessage = 'Erreur technique lors de l\\'analyse de l\\'URL. Veuillez réessayer.';\n      console.error('Erreur de souscription d\\'analyse d\\'URL:', error);\n      this.calculateRiskLevel(); // Recalculate risk level after analysis error\n    });\n  }\n\n  nextFormPage() {\n    const controlsToValidatePage0 = ['title', 'location', 'industry', 'companyName', 'companyEmail', 'description', 'requirements'];\n    let isCurrentPageValid = true;\n    if (this.currentFormPage === 0) {\n      controlsToValidatePage0.forEach(controlName => {\n        const control = this.jobForm.get(controlName);\n        if (control) {\n          control.markAsTouched();\n          if (control.invalid) {\n            isCurrentPageValid = false;\n          }\n        }\n      });\n      // Also check jobUrl if it has been touched and is invalid (but not required for next page)\n      const jobUrlControl = this.jobForm.get('jobUrl');\n      if (jobUrlControl && jobUrlControl.touched && jobUrlControl.invalid) {\n        isCurrentPageValid = false; // Prevents going to next page if URL is explicitly invalid\n      }\n    }\n\n    if (!isCurrentPageValid) {\n      this.jobResult = {\n        isFake: true,\n        message: 'Please correctly fill out all required fields on the current page before proceeding.',\n        details: []\n      };\n      // Add specific field errors to details if needed\n      if (this.isFieldInvalid('companyEmail')) {\n        const emailErrors = this.jobForm.get('companyEmail')?.errors;\n        if (emailErrors?.['required']) {\n          this.jobResult.details?.push('Company email is required.');\n        } else if (emailErrors?.['email']) {\n          this.jobResult.details?.push('Company email format is invalid.');\n        }\n      }\n      if (this.isFieldInvalid('jobUrl')) {\n        this.jobResult.details?.push('Job URL format is invalid.');\n      }\n      this.showModal = true;\n      return;\n    }\n    this.currentFormPage++;\n    this.jobResult = null; // Clear modal if moving to next page\n    this.showModal = false;\n  }\n  previousFormPage() {\n    this.currentFormPage--;\n    this.jobResult = null; // Clear modal if moving to previous page\n    this.showModal = false;\n  }\n  onSubmit() {\n    console.log('--- onSubmit() triggered ---');\n    this.jobResult = null;\n    this.showModal = false;\n    this.isSubmitting = true; // Start submitting state\n    // Recalculate risk level one last time before full submission validation\n    this.calculateRiskLevel();\n    // Prioritize showing fraud warnings based on risk level\n    if (this.riskLevel === 'Very High Risk' || this.riskLevel === 'High Risk') {\n      this.jobResult = {\n        isFake: true,\n        message: \"This job post contains significant red flags indicating potential fraud. Please review the details below.\",\n        details: this.riskLevelDetails\n      };\n      this.showModal = true;\n      this.isSubmitting = false; // Stop submitting state\n      return;\n    }\n    // Continue with standard form validation if not high/very high risk\n    if (this.jobForm.invalid) {\n      console.log('Form is invalid. Marking all controls as touched.');\n      this.jobForm.markAllAsTouched(); // Mark all fields as touched to show errors\n      this.isSubmitting = false; // Stop submitting state\n      this.jobResult = {\n        isFake: true,\n        message: 'Please fill out all required fields and correct validation errors before submitting.',\n        details: [] // You could populate this with specific form errors if desired\n      };\n\n      this.showModal = true;\n      return;\n    }\n    console.log('Form is valid and risk level is acceptable. Submitting job data...');\n    // If the form is valid AND risk level is acceptable, proceed to send data\n    const jobData = this.jobForm.value; // Your Job model interface\n    // Example of calling your JobService (replace with your actual service logic)\n    this.jobService.verifyJob(jobData).subscribe({\n      next: result => {\n        console.log('Job verification result:', result);\n        this.jobResult = {\n          isFake: result.isFake,\n          message: result.message,\n          details: result.details\n        };\n        this.showModal = true;\n        this.isSubmitting = false; // Stop submitting state\n      },\n\n      error: err => {\n        console.error('Error verifying job:', err);\n        this.jobResult = {\n          isFake: true,\n          message: 'An error occurred while verifying the job. Please try again later.',\n          details: ['Network error or backend issue.']\n        };\n        this.showModal = true;\n        this.isSubmitting = false; // Stop submitting state\n      }\n    });\n  }\n\n  onScraperSubmit() {\n    this.isScraperSubmitting = true;\n    this.jobResult = null;\n    this.showModal = false;\n    if (this.scraperForm.invalid) {\n      this.scraperForm.markAllAsTouched();\n      this.isScraperSubmitting = false;\n      this.jobResult = {\n        isFake: true,\n        message: 'Please enter a valid URL for the scraper.',\n        details: []\n      };\n      this.showModal = true;\n      return;\n    }\n    const urlToScrape = this.scraperForm.get('url')?.value;\n    console.log('Scraping URL:', urlToScrape);\n    // Here you would call a service that handles scraping\n    // For now, let's simulate a result using `of` and `delay`\n    of({\n      isFake: urlToScrape.includes('scam') || urlToScrape.includes('phishing'),\n      message: urlToScrape.includes('scam') || urlToScrape.includes('phishing') ? 'Scraped URL indicates a fraudulent job.' : 'Scraped URL seems legitimate.',\n      details: urlToScrape.includes('scam') || urlToScrape.includes('phishing') ? ['Scraped content contained suspicious patterns.'] : ['No obvious fraud detected in scraped content.']\n    }).pipe(delay(2500)) // Simulates a network delay\n    .subscribe(result => {\n      this.isScraperSubmitting = false;\n      this.jobResult = result;\n      this.showModal = true;\n    });\n  }\n  closeModal() {\n    this.showModal = false;\n    this.jobResult = null;\n  }\n  isFieldInvalid(field) {\n    const control = this.jobForm.get(field);\n    return control ? control.invalid && (control.touched || control.dirty) : false;\n  }\n  isScraperFieldInvalid(field) {\n    const control = this.scraperForm.get(field);\n    return control ? control.invalid && (control.touched || control.dirty) : false;\n  }\n  static {\n    this.ɵfac = function JobFormComponent_Factory(t) {\n      return new (t || JobFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.JobService), i0.ɵɵdirectiveInject(i3.UrlAnalysisService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: JobFormComponent,\n      selectors: [[\"app-job-form\"]],\n      decls: 13,\n      vars: 24,\n      consts: [[1, \"container\", \"mx-auto\", \"px-4\", \"py-8\"], [1, \"max-w-4xl\", \"mx-auto\"], [1, \"mb-8\", \"text-center\"], [1, \"text-3xl\", \"font-bold\", \"text-gray-900\", \"dark:text-white\", \"mb-2\", \"animate-fade-in-out\"], [1, \"flex\", \"border-b\", \"border-gray-200\", \"dark:border-gray-700\", \"mb-8\"], [1, \"py-3\", \"px-6\", \"text-lg\", \"font-medium\", \"border-b-2\", \"transition-colors\", \"duration-200\", \"focus:outline-none\", \"hover:text-primary-dark\", 3, \"click\"], [\"class\", \"card animate-fade-in\", 4, \"ngIf\"], [\"class\", \"fixed inset-0 bg-gray-900 bg-opacity-75 dark:bg-opacity-90 flex items-center justify-center z-50 p-4\", 4, \"ngIf\"], [1, \"card\", \"animate-fade-in\"], [1, \"text-xl\", \"font-semibold\", \"mb-6\", \"text-gray-800\", \"dark:text-white\"], [3, \"formGroup\", \"ngSubmit\"], [\"class\", \"grid grid-cols-1 md:grid-cols-2 gap-6 animate-fade-in\", 4, \"ngIf\"], [1, \"mt-8\", \"flex\", 3, \"ngClass\"], [\"type\", \"button\", \"class\", \"btn btn-secondary\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"btn btn-primary\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"submit\", \"class\", \"btn btn-primary\", 3, \"disabled\", 4, \"ngIf\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"gap-6\", \"animate-fade-in\"], [1, \"col-span-2\", \"p-4\", \"rounded-lg\", \"flex\", \"items-center\", \"justify-between\", \"transition-colors\", \"duration-300\", 3, \"ngClass\"], [1, \"flex\", \"items-center\"], [\"fill\", \"none\", \"viewBox\", \"0 0 24 24\", \"stroke\", \"currentColor\", 1, \"h-6\", \"w-6\", \"mr-3\", 3, \"ngClass\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\", 4, \"ngIf\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\", 4, \"ngIf\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\", 4, \"ngIf\"], [1, \"font-bold\", \"text-lg\"], [\"class\", \"text-sm cursor-pointer\", \"tabindex\", \"0\", \"matTooltipPosition\", \"below\", \"matTooltipClass\", \"bg-gray-700 text-white p-2 rounded-md shadow-lg text-xs max-w-sm\", 3, \"matTooltip\", 4, \"ngIf\"], [\"for\", \"title\", 1, \"form-label\"], [1, \"text-red-500\"], [\"type\", \"text\", \"id\", \"title\", \"formControlName\", \"title\", \"placeholder\", \"e.g. Software Engineer\", 1, \"form-input\", 3, \"ngClass\"], [\"class\", \"mt-1 text-sm text-red-500\", 4, \"ngIf\"], [\"for\", \"companyName\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"companyName\", \"formControlName\", \"companyName\", \"placeholder\", \"e.g. Acme Corp.\", 1, \"form-input\", 3, \"ngClass\"], [\"for\", \"companyEmail\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"companyEmail\", \"formControlName\", \"companyEmail\", \"placeholder\", \"e.g. contact@acmecorp.com\", 1, \"form-input\", 3, \"ngClass\"], [\"for\", \"jobUrl\", 1, \"form-label\"], [1, \"flex\", \"items-center\", \"space-x-2\"], [\"type\", \"url\", \"id\", \"jobUrl\", \"formControlName\", \"jobUrl\", \"placeholder\", \"e.g. https://jobs.acmecorp.com/software-engineer\", 1, \"form-input\", \"flex-1\", 3, \"ngClass\"], [\"type\", \"button\", 1, \"px-4\", \"py-2\", \"bg-blue-600\", \"text-white\", \"rounded-md\", \"hover:bg-blue-700\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-blue-500\", \"focus:ring-offset-2\", \"dark:bg-blue-700\", \"dark:hover:bg-blue-800\", \"disabled:opacity-50\", \"disabled:cursor-not-allowed\", \"transition-colors\", \"duration-200\", 3, \"disabled\", \"click\"], [4, \"ngIf\"], [\"class\", \"mt-2 text-sm\", 4, \"ngIf\"], [\"for\", \"location\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"location\", \"formControlName\", \"location\", \"placeholder\", \"e.g. Country Name\", 1, \"form-input\", 3, \"ngClass\"], [\"for\", \"industry\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"industry\", \"formControlName\", \"industry\", \"placeholder\", \"e.g. Technology\", 1, \"form-input\", 3, \"ngClass\"], [\"for\", \"salaryRange\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"salaryRange\", \"formControlName\", \"salaryRange\", \"placeholder\", \"e.g. $80,000 - $100,000\", 1, \"form-input\"], [\"for\", \"companyProfile\", 1, \"form-label\"], [\"id\", \"companyProfile\", \"formControlName\", \"companyProfile\", \"rows\", \"2\", \"placeholder\", \"Brief description of the company or its mission.\", 1, \"form-input\"], [1, \"col-span-2\"], [\"for\", \"description\", 1, \"form-label\"], [\"id\", \"description\", \"formControlName\", \"description\", \"rows\", \"4\", \"placeholder\", \"Detailed job description\", 1, \"form-input\", 3, \"ngClass\"], [\"for\", \"requirements\", 1, \"form-label\"], [\"id\", \"requirements\", \"formControlName\", \"requirements\", \"rows\", \"4\", \"placeholder\", \"Job requirements and qualifications\", 1, \"form-input\", 3, \"ngClass\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"], [\"tabindex\", \"0\", \"matTooltipPosition\", \"below\", \"matTooltipClass\", \"bg-gray-700 text-white p-2 rounded-md shadow-lg text-xs max-w-sm\", 1, \"text-sm\", \"cursor-pointer\", 3, \"matTooltip\"], [1, \"text-gray-700\", \"dark:text-gray-300\", \"hover:underline\"], [1, \"mt-1\", \"text-sm\", \"text-red-500\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", 1, \"animate-spin\", \"-ml-1\", \"mr-2\", \"h-4\", \"w-4\", \"text-white\", \"inline\"], [\"cx\", \"12\", \"cy\", \"12\", \"r\", \"10\", \"stroke\", \"currentColor\", \"stroke-width\", \"4\", 1, \"opacity-25\"], [\"fill\", \"currentColor\", \"d\", \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\", 1, \"opacity-75\"], [1, \"mt-2\", \"text-sm\"], [3, \"ngClass\"], [\"for\", \"employmentType\", 1, \"form-label\"], [\"id\", \"employmentType\", \"formControlName\", \"employmentType\", 1, \"form-select\"], [\"value\", \"\"], [\"value\", \"Full-time\"], [\"value\", \"Part-time\"], [\"value\", \"Contract\"], [\"value\", \"Temporary\"], [\"value\", \"Internship\"], [\"for\", \"requiredExperience\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"requiredExperience\", \"formControlName\", \"requiredExperience\", \"placeholder\", \"e.g. 3\", \"min\", \"0\", 1, \"form-input\"], [\"for\", \"requiredEducation\", 1, \"form-label\"], [\"id\", \"requiredEducation\", \"formControlName\", \"requiredEducation\", 1, \"form-select\"], [\"value\", \"High School\"], [\"value\", \"Associate's Degree\"], [\"value\", \"Bachelor's Degree\"], [\"value\", \"Master's Degree\"], [\"value\", \"Doctorate\"], [\"for\", \"telecommuting\", 1, \"form-label\"], [\"id\", \"telecommuting\", \"formControlName\", \"telecommuting\", 1, \"form-select\"], [3, \"ngValue\"], [\"for\", \"hasCompanyLogo\", 1, \"form-label\"], [\"id\", \"hasCompanyLogo\", \"formControlName\", \"hasCompanyLogo\", 1, \"form-select\"], [\"for\", \"hasQuestions\", 1, \"form-label\"], [\"id\", \"hasQuestions\", \"formControlName\", \"hasQuestions\", 1, \"form-select\"], [\"for\", \"department\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"department\", \"formControlName\", \"department\", \"placeholder\", \"e.g. Engineering\", 1, \"form-input\"], [\"for\", \"function\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"function\", \"formControlName\", \"function\", \"placeholder\", \"e.g. Development\", 1, \"form-input\"], [\"for\", \"benefits\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"benefits\", \"formControlName\", \"benefits\", \"placeholder\", \"e.g. Health insurance, Paid time off, 401K\", 1, \"form-input\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"flex items-center\", 4, \"ngIf\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", 1, \"animate-spin\", \"-ml-1\", \"mr-2\", \"h-4\", \"w-4\", \"text-white\"], [1, \"text-gray-600\", \"dark:text-gray-300\", \"mb-6\"], [1, \"mb-6\"], [\"for\", \"url\", 1, \"form-label\"], [\"type\", \"url\", \"id\", \"url\", \"formControlName\", \"url\", \"placeholder\", \"https://example.com/job-posting\", 1, \"form-input\", 3, \"ngClass\"], [1, \"flex\", \"justify-end\"], [1, \"fixed\", \"inset-0\", \"bg-gray-900\", \"bg-opacity-75\", \"dark:bg-opacity-90\", \"flex\", \"items-center\", \"justify-center\", \"z-50\", \"p-4\"], [1, \"bg-white\", \"dark:bg-gray-800\", \"rounded-lg\", \"shadow-lg\", \"p-6\", \"w-full\", \"max-w-md\", \"relative\", \"animate-fade-in-up\"], [\"aria-label\", \"Close\", 1, \"absolute\", \"top-3\", \"right-3\", \"text-gray-500\", \"hover:text-gray-700\", \"dark:text-gray-400\", \"dark:hover:text-gray-200\", \"focus:outline-none\", 3, \"click\"], [\"fill\", \"none\", \"viewBox\", \"0 0 24 24\", \"stroke\", \"currentColor\", 1, \"h-6\", \"w-6\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M6 18L18 6M6 6l12 12\"], [1, \"flex\", \"items-center\", \"mb-4\"], [1, \"p-3\", \"rounded-full\", \"mr-4\", 3, \"ngClass\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"class\", \"h-6 w-6 text-green-600 dark:text-green-300\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", \"stroke\", \"currentColor\", 4, \"ngIf\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"class\", \"h-6 w-6 text-red-600 dark:text-red-300\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", \"stroke\", \"currentColor\", 4, \"ngIf\"], [1, \"text-xl\", \"font-semibold\", \"text-gray-800\", \"dark:text-white\"], [1, \"p-4\", \"mb-4\", \"rounded-lg\", 3, \"ngClass\"], [1, \"text-gray-800\", \"dark:text-gray-200\"], [\"class\", \"mt-6\", 4, \"ngIf\"], [1, \"mt-6\", \"text-right\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", \"stroke\", \"currentColor\", 1, \"h-6\", \"w-6\", \"text-green-600\", \"dark:text-green-300\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M5 13l4 4L19 7\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", \"stroke\", \"currentColor\", 1, \"h-6\", \"w-6\", \"text-red-600\", \"dark:text-red-300\"], [1, \"mt-6\"], [1, \"text-lg\", \"font-medium\", \"mb-3\", \"text-gray-800\", \"dark:text-white\"], [1, \"space-y-2\"], [\"class\", \"flex\", 4, \"ngFor\", \"ngForOf\"], [1, \"flex\"], [1, \"mr-2\", \"text-gray-500\", \"dark:text-gray-400\"], [1, \"text-gray-700\", \"dark:text-gray-300\"]],\n      template: function JobFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"p\", 3);\n          i0.ɵɵtext(4);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"div\", 4)(6, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function JobFormComponent_Template_button_click_6_listener() {\n            ctx.selectedOption = \"form\";\n            ctx.jobResult = null;\n            ctx.showModal = false;\n            return ctx.currentFormPage = 0;\n          });\n          i0.ɵɵtext(7, \" Verify Your Offer \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function JobFormComponent_Template_button_click_8_listener() {\n            ctx.selectedOption = \"scraper\";\n            ctx.jobResult = null;\n            return ctx.showModal = false;\n          });\n          i0.ɵɵtext(9, \" Use Job Scraper \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(10, JobFormComponent_div_10_Template, 10, 10, \"div\", 6);\n          i0.ɵɵtemplate(11, JobFormComponent_div_11_Template, 17, 8, \"div\", 6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(12, JobFormComponent_div_12_Template, 18, 13, \"div\", 7);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate(ctx.currentTagline);\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassProp(\"border-primary\", ctx.selectedOption === \"form\")(\"text-primary\", ctx.selectedOption === \"form\")(\"border-transparent\", ctx.selectedOption !== \"form\")(\"text-gray-600\", ctx.selectedOption !== \"form\")(\"dark:text-gray-300\", ctx.selectedOption !== \"form\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassProp(\"border-primary\", ctx.selectedOption === \"scraper\")(\"text-primary\", ctx.selectedOption === \"scraper\")(\"border-transparent\", ctx.selectedOption !== \"scraper\")(\"text-gray-600\", ctx.selectedOption !== \"scraper\")(\"dark:text-gray-300\", ctx.selectedOption !== \"scraper\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedOption === \"form\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedOption === \"scraper\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.showModal && ctx.jobResult);\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MinValidator, i1.FormGroupDirective, i1.FormControlName, i5.MatTooltip],\n      styles: [\"@keyframes _ngcontent-%COMP%_fadeInOut {\\r\\n    0% { opacity: 0; transform: translateY(-10px); }\\r\\n    10% { opacity: 1; transform: translateY(0); }\\r\\n    90% { opacity: 1; transform: translateY(0); }\\r\\n    100% { opacity: 0; transform: translateY(10px); }\\r\\n  }\\r\\n  \\r\\n  .animate-fade-in-out[_ngcontent-%COMP%] {\\r\\n    animation: _ngcontent-%COMP%_fadeInOut 5s ease-in-out infinite; \\r\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpvYi1mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsa0RBQWtEOztBQUVsRDtJQUNJLEtBQUssVUFBVSxFQUFFLDRCQUE0QixFQUFFO0lBQy9DLE1BQU0sVUFBVSxFQUFFLHdCQUF3QixFQUFFO0lBQzVDLE1BQU0sVUFBVSxFQUFFLHdCQUF3QixFQUFFO0lBQzVDLE9BQU8sVUFBVSxFQUFFLDJCQUEyQixFQUFFO0VBQ2xEOztFQUVBO0lBQ0UsNENBQTRDLEVBQUUsd0NBQXdDO0VBQ3hGIiwiZmlsZSI6ImpvYi1mb3JtLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBzcmMvYXBwL3BhZ2VzL2pvYi1mb3JtL2pvYi1mb3JtLmNvbXBvbmVudC5jc3MgKi9cclxuXHJcbkBrZXlmcmFtZXMgZmFkZUluT3V0IHtcclxuICAgIDAlIHsgb3BhY2l0eTogMDsgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMHB4KTsgfVxyXG4gICAgMTAlIHsgb3BhY2l0eTogMTsgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApOyB9XHJcbiAgICA5MCUgeyBvcGFjaXR5OiAxOyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7IH1cclxuICAgIDEwMCUgeyBvcGFjaXR5OiAwOyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMTBweCk7IH1cclxuICB9XHJcbiAgXHJcbiAgLmFuaW1hdGUtZmFkZS1pbi1vdXQge1xyXG4gICAgYW5pbWF0aW9uOiBmYWRlSW5PdXQgNXMgZWFzZS1pbi1vdXQgaW5maW5pdGU7IC8qIE1hdGNoZXMgdGhlIDUtc2Vjb25kIGludGVydmFsIGluIFRTICovXHJcbiAgfVxyXG4iXX0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvam9iLWZvcm0vam9iLWZvcm0uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxrREFBa0Q7O0FBRWxEO0lBQ0ksS0FBSyxVQUFVLEVBQUUsNEJBQTRCLEVBQUU7SUFDL0MsTUFBTSxVQUFVLEVBQUUsd0JBQXdCLEVBQUU7SUFDNUMsTUFBTSxVQUFVLEVBQUUsd0JBQXdCLEVBQUU7SUFDNUMsT0FBTyxVQUFVLEVBQUUsMkJBQTJCLEVBQUU7RUFDbEQ7O0VBRUE7SUFDRSw0Q0FBNEMsRUFBRSx3Q0FBd0M7RUFDeEY7O0FBRUYsb2pDQUFvakMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBzcmMvYXBwL3BhZ2VzL2pvYi1mb3JtL2pvYi1mb3JtLmNvbXBvbmVudC5jc3MgKi9cclxuXHJcbkBrZXlmcmFtZXMgZmFkZUluT3V0IHtcclxuICAgIDAlIHsgb3BhY2l0eTogMDsgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMHB4KTsgfVxyXG4gICAgMTAlIHsgb3BhY2l0eTogMTsgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApOyB9XHJcbiAgICA5MCUgeyBvcGFjaXR5OiAxOyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7IH1cclxuICAgIDEwMCUgeyBvcGFjaXR5OiAwOyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMTBweCk7IH1cclxuICB9XHJcbiAgXHJcbiAgLmFuaW1hdGUtZmFkZS1pbi1vdXQge1xyXG4gICAgYW5pbWF0aW9uOiBmYWRlSW5PdXQgNXMgZWFzZS1pbi1vdXQgaW5maW5pdGU7IC8qIE1hdGNoZXMgdGhlIDUtc2Vjb25kIGludGVydmFsIGluIFRTICovXHJcbiAgfVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["Validators","debounceTime","distinctUntilChanged","delay","of","i0","JobFormComponent","constructor","fb","jobService","urlAnalysisService","jobForm","group","title","required","location","department","salaryRange","companyName","companyEmail","email","description","requirements","benefits","telecommuting","hasCompanyLogo","hasQuestions","employmentType","requiredExperience","requiredEducation","industry","function","companyProfile","jobUrl","pattern","scraperForm","url","ngOnInit","currentTagline","taglines","currentTaglineIndex","startTaglineRotation","setupFormValueChanges","calculateRiskLevel","get","valueChanges","pipe","subscribe","urlAnalysisStatus","urlAnalysisMessage","ngOnDestroy","taglineInterval","clearInterval","setInterval","length","prev","curr","JSON","stringify","score","riskLevelDetails","formValues","getRawValue","includes","emailDomain","substring","lastIndexOf","toLowerCase","forbiddenEmailDomains","addRiskDetail","suspiciousKeywordsFound","category","fraudKeywords","Object","prototype","hasOwnProperty","call","keywords","keyword","push","join","salaryRangeValue","trim","cleanSalaryString","replace","parsedSalary","parseFloat","isNaN","riskLevel","detail","analyzeJobUrl","jobUrlControl","value","invalid","markAsTouched","analyzeUrl","result","status","message","error","console","nextFormPage","controlsToValidatePage0","isCurrentPageValid","currentFormPage","forEach","controlName","control","touched","jobResult","isFake","details","isFieldInvalid","emailErrors","errors","showModal","previousFormPage","onSubmit","log","isSubmitting","markAllAsTouched","jobData","verifyJob","next","err","onScraperSubmit","isScraperSubmitting","urlToScrape","closeModal","field","dirty","isScraperFieldInvalid","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\frontend-fraud-detection\\src\\app\\pages\\job-form\\job-form.component.ts","D:\\frontend-fraud-detection\\src\\app\\pages\\job-form\\job-form.component.html"],"sourcesContent":["// src/app/pages/job-form/job-form.component.ts\r\n\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { JobService } from '../../services/job.service'; // Assurez-vous que ce service existe\r\nimport { UrlAnalysisService } from '../../services/url-analysis.service'; // <-- Importation du service d'analyse d'URL\r\nimport { Job, JobVerificationResult } from '../../models/job.model'; // Assurez-vous que ce modèle existe\r\nimport { debounceTime, distinctUntilChanged, delay } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\n\r\ninterface JobResult {\r\n  isFake: boolean;\r\n  message: string;\r\n  details?: string[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-job-form',\r\n  templateUrl: './job-form.component.html',\r\n  styleUrls: ['./job-form.component.css'] // Make sure this points to your .css file\r\n})\r\nexport class JobFormComponent implements OnInit, OnDestroy {\r\n  selectedOption: 'form' | 'scraper' = 'form'; // Keeps track of the active tab\r\n  jobForm: FormGroup;\r\n  scraperForm: FormGroup;\r\n  isSubmitting = false;\r\n  isScraperSubmitting = false;\r\n  jobResult: JobResult | null = null;\r\n\r\n  currentFormPage = 0;\r\n  showModal: boolean = false;\r\n\r\n  taglines: string[] = [\r\n    \"Empowering smarter hiring, one prediction at a time.\",\r\n    \"Unlocking potential, one talent insight at a time.\",\r\n    \"Beyond resumes: predicting your perfect match.\",\r\n    \"Your competitive edge in the talent landscape.\"\r\n  ];\r\n  currentTaglineIndex: number = 0;\r\n  currentTagline: string = '';\r\n  taglineInterval: any;\r\n\r\n  // NEW: Risk Level Indicator properties\r\n  riskLevel: 'Low Risk' | 'Medium Risk' | 'High Risk' | 'Very High Risk' = 'Low Risk';\r\n  riskLevelDetails: string[] = [];\r\n\r\n  // NEW: URL Analysis specific properties\r\n  urlAnalysisStatus: 'idle' | 'analyzing' | 'safe' | 'suspicious' | 'error' = 'idle';\r\n  urlAnalysisMessage: string = '';\r\n\r\n  // Define the keywords for fraud detection (keywords themselves remain French for detection logic)\r\n  private fraudKeywords = {\r\n    \"money\": [\r\n      \"argent\", \"cash\", \"gains\", \"revenus\", \"profit\",\r\n      \"salaire élevé\", \"paie\", \"rémunération\", \"forte rémunération\",\r\n      \"gagner\", \"profit\", \"bénéfice\", \"richesse\"\r\n    ],\r\n    \"urgent\": [\r\n      \"urgent\", \"immédiat\", \"dès que possible\", \"asap\",\r\n      \"opportunité limitée\", \"poste à pourvoir rapidement\",\r\n      \"début immédiat\", \"embauche rapide\"\r\n    ],\r\n    \"payment\": [\r\n      \"paiement\", \"versement\", \"transfert\", \"virement\",\r\n      \"western union\", \"moneygram\", \"paypal\", \"crypto\",\r\n      \"bitcoin\", \"ethereum\", \"cryptomonnaie\"\r\n    ],\r\n    \"scam\": [\r\n      \"travail à domicile\", \"revenu passif\", \"sans expérience\",\r\n      \"emploi facile\", \"argent rapide\", \"enrichissement\",\r\n      \"opportunité unique\", \"secret\", \"méthode exclusive\"\r\n    ],\r\n    \"identity\": [\r\n      \"pièce d'identité\", \"copie carte identité\", \"passeport\",\r\n      \"numéro sécurité sociale\", \"coordonnées bancaires\",\r\n      \"RIB\", \"IBAN\", \"numéro de carte\", \"CVV\"\r\n    ]\r\n  };\r\n\r\n  // List of email domains considered fraudulent\r\n  private forbiddenEmailDomains = [\r\n    \"freemail.com\",\r\n    \"mail.ru\",\r\n    \"yandex.com\",\r\n    \"protonmail.com\",\r\n    \"tutanota.com\",\r\n    \"gmx.com\",\r\n    \"hotmail.com\",\r\n    \"outlook.com\",\r\n    \"yahoo.com\",\r\n    \"aol.com\",\r\n    \"scamjob.com\",\r\n    \"fraude-emploi.com\",\r\n    \"quickmoney.com\",\r\n    \"fastcash.com\",\r\n    \"anonymous-email.com\",\r\n    \"gmail.com\" // Added gmail.com explicitly if not already covered\r\n  ];\r\n\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private jobService: JobService, // Injectez votre JobService si vous en avez un\r\n    private urlAnalysisService: UrlAnalysisService // <-- Injection du service d'analyse d'URL\r\n  ) {\r\n    this.jobForm = this.fb.group({\r\n      title: ['', Validators.required],\r\n      location: ['', Validators.required],\r\n      department: [''],\r\n      salaryRange: [''],\r\n      companyName: ['', Validators.required],\r\n      companyEmail: ['', [Validators.required, Validators.email]],\r\n      description: ['', Validators.required],\r\n      requirements: ['', Validators.required],\r\n      benefits: [''],\r\n      telecommuting: [null],\r\n      hasCompanyLogo: [null],\r\n      hasQuestions: [null],\r\n      employmentType: [''],\r\n      requiredExperience: [null],\r\n      requiredEducation: [''],\r\n      industry: ['', Validators.required],\r\n      function: [''],\r\n      companyProfile: [''],\r\n      jobUrl: ['', [Validators.pattern('^(https?|ftp)://[^\\\\s/$.?#].[^\\\\s]*$')]] // Ajout de la validation d'URL\r\n    });\r\n\r\n    this.scraperForm = this.fb.group({\r\n      url: ['', [Validators.required, Validators.pattern('https?://.+')]]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.currentTagline = this.taglines[this.currentTaglineIndex];\r\n    this.startTaglineRotation();\r\n    this.setupFormValueChanges(); // Call the setup method\r\n    this.calculateRiskLevel(); // Initial calculation\r\n\r\n    // Listen for changes on jobUrl specifically to reset analysis status\r\n    this.jobForm.get('jobUrl')?.valueChanges.pipe(\r\n      debounceTime(500),\r\n      distinctUntilChanged()\r\n    ).subscribe(() => {\r\n      // Only reset if it was previously analyzed and changed\r\n      if (this.urlAnalysisStatus !== 'idle') {\r\n        this.urlAnalysisStatus = 'idle';\r\n        this.urlAnalysisMessage = '';\r\n        this.calculateRiskLevel(); // Recalculate risk if URL analysis state reset\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.taglineInterval) {\r\n      clearInterval(this.taglineInterval);\r\n    }\r\n  }\r\n\r\n  startTaglineRotation() {\r\n    this.taglineInterval = setInterval(() => {\r\n      this.currentTaglineIndex = (this.currentTaglineIndex + 1) % this.taglines.length;\r\n      this.currentTagline = this.taglines[this.currentTaglineIndex];\r\n    }, 5000);\r\n  }\r\n\r\n  // NEW: Setup form value changes subscription for real-time risk calculation\r\n  setupFormValueChanges(): void {\r\n    this.jobForm.valueChanges\r\n      .pipe(\r\n        debounceTime(500), // Wait for 500ms of no new input\r\n        distinctUntilChanged((prev, curr) => JSON.stringify(prev) === JSON.stringify(curr)) // Only emit if value truly changed\r\n      )\r\n      .subscribe(() => {\r\n        // We calculate risk level only on the first page fields for real-time feedback\r\n        // The full submission will perform a final check.\r\n        this.calculateRiskLevel();\r\n      });\r\n  }\r\n\r\n  // NEW: Method to calculate the real-time risk level\r\n  calculateRiskLevel(): void {\r\n    let score = 0; // Higher score means lower risk\r\n    this.riskLevelDetails = []; // Clear previous details\r\n\r\n    const formValues = this.jobForm.getRawValue(); // Use getRawValue to get values even if disabled\r\n\r\n    // 1. Company Email Domain Check\r\n    const companyEmail = formValues.companyEmail as string;\r\n    if (companyEmail && companyEmail.includes('@')) {\r\n      const emailDomain = companyEmail.substring(companyEmail.lastIndexOf('@') + 1).toLowerCase();\r\n      if (this.forbiddenEmailDomains.includes(emailDomain)) {\r\n        score -= 50; // High penalty\r\n        this.addRiskDetail(`Suspicious: Company email domain (@${emailDomain}) is commonly associated with scams.`);\r\n      }\r\n    }\r\n\r\n    // 2. Keyword Detection in Description and Requirements\r\n    const description = (formValues.description || '').toLowerCase();\r\n    const requirements = (formValues.requirements || '').toLowerCase();\r\n    const suspiciousKeywordsFound: string[] = [];\r\n\r\n    for (const category in this.fraudKeywords) {\r\n      if (Object.prototype.hasOwnProperty.call(this.fraudKeywords, category)) {\r\n        const keywords = this.fraudKeywords[category];\r\n        for (const keyword of keywords) {\r\n          if (description.includes(keyword.toLowerCase()) || requirements.includes(keyword.toLowerCase())) {\r\n            if (!suspiciousKeywordsFound.includes(keyword)) {\r\n              suspiciousKeywordsFound.push(keyword);\r\n              score -= 10; // Penalty per found keyword\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (suspiciousKeywordsFound.length > 0) {\r\n      this.addRiskDetail(`Suspicious: Keywords detected in job description/requirements: ${suspiciousKeywordsFound.join(', ')}.`);\r\n    }\r\n\r\n    // 3. Salary Range Check\r\n    const salaryRangeValue = formValues.salaryRange;\r\n    if (salaryRangeValue !== null && salaryRangeValue.trim() !== '') {\r\n      const cleanSalaryString = salaryRangeValue.replace(/[^0-9.,]/g, ''); // Allow comma for thousands separator\r\n      const parsedSalary = parseFloat(cleanSalaryString.replace(',', '.')); // Replace comma with dot for float parsing\r\n\r\n      // Check if it's a number and if it's unrealistically low or negative\r\n      if (!isNaN(parsedSalary) && parsedSalary < 100) { // Example: less than 100 could be a red flag\r\n          score -= 30; // High penalty\r\n          this.addRiskDetail('Suspicious: Salary range appears unrealistically low or invalid.');\r\n      }\r\n    }\r\n\r\n\r\n    // 4. Presence of crucial fields (positive reinforcement)\r\n    if (formValues.title) score += 2;\r\n    if (formValues.companyName) score += 2;\r\n    if (formValues.location) score += 2;\r\n    if (formValues.industry) score += 2;\r\n    if (formValues.description) score += 2;\r\n    if (formValues.requirements) score += 2;\r\n\r\n    // 5. Check for missing crucial \"trust\" fields that could indicate professionalism\r\n    if (!formValues.companyProfile) {\r\n      score -= 5;\r\n      this.addRiskDetail('Warning: Company profile is empty, which can be a red flag.');\r\n    }\r\n    if (!formValues.jobUrl) {\r\n      score -= 5;\r\n      this.addRiskDetail('Warning: Job URL is empty, which can be a red flag.');\r\n    }\r\n\r\n    // 6. Integrate URL Analysis Service result (if already analyzed)\r\n    if (this.urlAnalysisStatus === 'suspicious') {\r\n      score -= 40; // Significant penalty for suspicious URL\r\n      this.addRiskDetail(`URL Analysis: ${this.urlAnalysisMessage || 'URL is marked as suspicious.'}`);\r\n    } else if (this.urlAnalysisStatus === 'error') {\r\n      score -= 20; // Penalty for analysis error, as it could mean an issue\r\n      this.addRiskDetail(`URL Analysis: Error during URL analysis. It might be problematic.`);\r\n    }\r\n    // If 'safe', it adds nothing to risk details, just ensures no previous URL risk is present.\r\n\r\n\r\n    // Determine risk level based on score\r\n    // These thresholds might need adjustment based on your testing and desired sensitivity.\r\n    if (score < -80) { // Very high number of red flags including potential URL issues\r\n      this.riskLevel = 'Very High Risk';\r\n    } else if (score < -30) { // Multiple significant red flags\r\n      this.riskLevel = 'High Risk';\r\n    } else if (score < 0) { // Some potential red flags\r\n      this.riskLevel = 'Medium Risk';\r\n    } else { // Few to no red flags\r\n      this.riskLevel = 'Low Risk';\r\n    }\r\n\r\n    // Ensure initial state is low risk if no details\r\n    if (this.riskLevelDetails.length === 0) {\r\n      this.riskLevel = 'Low Risk';\r\n    }\r\n  }\r\n\r\n  // Helper to add unique risk details\r\n  private addRiskDetail(detail: string): void {\r\n    if (!this.riskLevelDetails.includes(detail)) {\r\n      this.riskLevelDetails.push(detail);\r\n    }\r\n  }\r\n\r\n\r\n  // NEW: Method to analyze the URL\r\n  analyzeJobUrl(): void {\r\n    const jobUrlControl = this.jobForm.get('jobUrl');\r\n    const url = jobUrlControl?.value;\r\n\r\n    // Basic client-side validation before calling the service\r\n    if (!url || jobUrlControl?.invalid) {\r\n      this.urlAnalysisStatus = 'error';\r\n      this.urlAnalysisMessage = 'Veuillez entrer une URL valide avant d\\'analyser.';\r\n      jobUrlControl?.markAsTouched(); // Marque le champ comme touché pour afficher l'erreur de validation Angular\r\n      this.calculateRiskLevel(); // Recalculate risk if URL is invalid\r\n      return;\r\n    }\r\n\r\n    this.urlAnalysisStatus = 'analyzing';\r\n    this.urlAnalysisMessage = 'Analyse de l\\'URL en cours...';\r\n    this.calculateRiskLevel(); // Update risk level to show \"analyzing\" state if it affects it\r\n\r\n    this.urlAnalysisService.analyzeUrl(url).subscribe(\r\n      result => {\r\n        this.urlAnalysisStatus = result.status;\r\n        this.urlAnalysisMessage = result.message || '';\r\n        this.calculateRiskLevel(); // Recalculate risk level after analysis result\r\n      },\r\n      error => {\r\n        // This catchError is actually handled within the service now,\r\n        // so this 'error' callback might not be hit if the service returns 'of({ status: 'suspicious' })'\r\n        // But good to keep for unexpected errors outside the service's catch.\r\n        this.urlAnalysisStatus = 'error';\r\n        this.urlAnalysisMessage = 'Erreur technique lors de l\\'analyse de l\\'URL. Veuillez réessayer.';\r\n        console.error('Erreur de souscription d\\'analyse d\\'URL:', error);\r\n        this.calculateRiskLevel(); // Recalculate risk level after analysis error\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  nextFormPage(): void {\r\n    const controlsToValidatePage0 = [\r\n      'title',\r\n      'location',\r\n      'industry',\r\n      'companyName',\r\n      'companyEmail',\r\n      'description',\r\n      'requirements'\r\n    ];\r\n    let isCurrentPageValid = true;\r\n\r\n    if (this.currentFormPage === 0) {\r\n      controlsToValidatePage0.forEach(controlName => {\r\n        const control = this.jobForm.get(controlName);\r\n        if (control) {\r\n          control.markAsTouched();\r\n          if (control.invalid) {\r\n            isCurrentPageValid = false;\r\n          }\r\n        }\r\n      });\r\n      // Also check jobUrl if it has been touched and is invalid (but not required for next page)\r\n      const jobUrlControl = this.jobForm.get('jobUrl');\r\n      if (jobUrlControl && jobUrlControl.touched && jobUrlControl.invalid) {\r\n        isCurrentPageValid = false; // Prevents going to next page if URL is explicitly invalid\r\n      }\r\n    }\r\n\r\n    if (!isCurrentPageValid) {\r\n      this.jobResult = {\r\n        isFake: true, // Use isFake: true to indicate an issue requiring attention\r\n        message: 'Please correctly fill out all required fields on the current page before proceeding.',\r\n        details: []\r\n      };\r\n      // Add specific field errors to details if needed\r\n      if (this.isFieldInvalid('companyEmail')) {\r\n          const emailErrors = this.jobForm.get('companyEmail')?.errors;\r\n          if (emailErrors?.['required']) {\r\n            this.jobResult.details?.push('Company email is required.');\r\n          } else if (emailErrors?.['email']) {\r\n            this.jobResult.details?.push('Company email format is invalid.');\r\n          }\r\n      }\r\n      if (this.isFieldInvalid('jobUrl')) {\r\n        this.jobResult.details?.push('Job URL format is invalid.');\r\n      }\r\n      this.showModal = true;\r\n      return;\r\n    }\r\n\r\n    this.currentFormPage++;\r\n    this.jobResult = null; // Clear modal if moving to next page\r\n    this.showModal = false;\r\n  }\r\n\r\n  previousFormPage(): void {\r\n    this.currentFormPage--;\r\n    this.jobResult = null; // Clear modal if moving to previous page\r\n    this.showModal = false;\r\n  }\r\n\r\n  onSubmit(): void {\r\n    console.log('--- onSubmit() triggered ---');\r\n    this.jobResult = null;\r\n    this.showModal = false;\r\n    this.isSubmitting = true; // Start submitting state\r\n\r\n    // Recalculate risk level one last time before full submission validation\r\n    this.calculateRiskLevel();\r\n\r\n    // Prioritize showing fraud warnings based on risk level\r\n    if (this.riskLevel === 'Very High Risk' || this.riskLevel === 'High Risk') {\r\n        this.jobResult = {\r\n            isFake: true,\r\n            message: \"This job post contains significant red flags indicating potential fraud. Please review the details below.\",\r\n            details: this.riskLevelDetails\r\n        };\r\n        this.showModal = true;\r\n        this.isSubmitting = false; // Stop submitting state\r\n        return;\r\n    }\r\n\r\n    // Continue with standard form validation if not high/very high risk\r\n    if (this.jobForm.invalid) {\r\n      console.log('Form is invalid. Marking all controls as touched.');\r\n      this.jobForm.markAllAsTouched(); // Mark all fields as touched to show errors\r\n      this.isSubmitting = false; // Stop submitting state\r\n      this.jobResult = {\r\n          isFake: true, // Indicate an issue that prevents submission\r\n          message: 'Please fill out all required fields and correct validation errors before submitting.',\r\n          details: [] // You could populate this with specific form errors if desired\r\n      };\r\n      this.showModal = true;\r\n      return;\r\n    }\r\n\r\n    console.log('Form is valid and risk level is acceptable. Submitting job data...');\r\n    // If the form is valid AND risk level is acceptable, proceed to send data\r\n    const jobData: Job = this.jobForm.value; // Your Job model interface\r\n\r\n    // Example of calling your JobService (replace with your actual service logic)\r\n    this.jobService.verifyJob(jobData).subscribe({\r\n        next: (result: JobVerificationResult) => {\r\n            console.log('Job verification result:', result);\r\n            this.jobResult = {\r\n                isFake: result.isFake,\r\n                message: result.message,\r\n                details: result.details\r\n            };\r\n            this.showModal = true;\r\n            this.isSubmitting = false; // Stop submitting state\r\n        },\r\n        error: (err) => {\r\n            console.error('Error verifying job:', err);\r\n            this.jobResult = {\r\n                isFake: true, // Treat service error as potentially fraudulent or unverified\r\n                message: 'An error occurred while verifying the job. Please try again later.',\r\n                details: ['Network error or backend issue.']\r\n            };\r\n            this.showModal = true;\r\n            this.isSubmitting = false; // Stop submitting state\r\n        }\r\n    });\r\n  }\r\n\r\n  onScraperSubmit(): void {\r\n    this.isScraperSubmitting = true;\r\n    this.jobResult = null;\r\n    this.showModal = false;\r\n\r\n    if (this.scraperForm.invalid) {\r\n      this.scraperForm.markAllAsTouched();\r\n      this.isScraperSubmitting = false;\r\n      this.jobResult = {\r\n        isFake: true,\r\n        message: 'Please enter a valid URL for the scraper.',\r\n        details: []\r\n      };\r\n      this.showModal = true;\r\n      return;\r\n    }\r\n\r\n    const urlToScrape = this.scraperForm.get('url')?.value;\r\n    console.log('Scraping URL:', urlToScrape);\r\n\r\n    // Here you would call a service that handles scraping\r\n    // For now, let's simulate a result using `of` and `delay`\r\n    of({\r\n      isFake: urlToScrape.includes('scam') || urlToScrape.includes('phishing'),\r\n      message: urlToScrape.includes('scam') || urlToScrape.includes('phishing') ? 'Scraped URL indicates a fraudulent job.' : 'Scraped URL seems legitimate.',\r\n      details: urlToScrape.includes('scam') || urlToScrape.includes('phishing') ? ['Scraped content contained suspicious patterns.'] : ['No obvious fraud detected in scraped content.']\r\n    })\r\n      .pipe(delay(2500)) // Simulates a network delay\r\n      .subscribe(result => {\r\n        this.isScraperSubmitting = false;\r\n        this.jobResult = result;\r\n        this.showModal = true;\r\n      });\r\n  }\r\n\r\n\r\n  closeModal(): void {\r\n    this.showModal = false;\r\n    this.jobResult = null;\r\n  }\r\n\r\n  isFieldInvalid(field: string): boolean {\r\n    const control = this.jobForm.get(field);\r\n    return control ? control.invalid && (control.touched || control.dirty) : false;\r\n  }\r\n\r\n  isScraperFieldInvalid(field: string): boolean {\r\n    const control = this.scraperForm.get(field);\r\n    return control ? control.invalid && (control.touched || control.dirty) : false;\r\n  }\r\n}","<div class=\"container mx-auto px-4 py-8\">\r\n  <div class=\"max-w-4xl mx-auto\">\r\n    <div class=\"mb-8 text-center\">\r\n      <p class=\"text-3xl font-bold text-gray-900 dark:text-white mb-2 animate-fade-in-out\">{{ currentTagline }}</p>\r\n    </div>\r\n\r\n    <div class=\"flex border-b border-gray-200 dark:border-gray-700 mb-8\">\r\n      \r\n      <button\r\n        (click)=\"selectedOption = 'form'; jobResult = null; showModal = false; currentFormPage = 0;\"\r\n        [class.border-primary]=\"selectedOption === 'form'\"\r\n        [class.text-primary]=\"selectedOption === 'form'\"\r\n        [class.border-transparent]=\"selectedOption !== 'form'\"\r\n        [class.text-gray-600]=\"selectedOption !== 'form'\"\r\n        [class.dark:text-gray-300]=\"selectedOption !== 'form'\"\r\n        class=\"py-3 px-6 text-lg font-medium border-b-2 transition-colors duration-200 focus:outline-none hover:text-primary-dark\"\r\n      >\r\n      Verify Your Offer\r\n      </button>\r\n      <button\r\n        (click)=\"selectedOption = 'scraper'; jobResult = null; showModal = false;\"\r\n        [class.border-primary]=\"selectedOption === 'scraper'\"\r\n        [class.text-primary]=\"selectedOption === 'scraper'\"\r\n        [class.border-transparent]=\"selectedOption !== 'scraper'\"\r\n        [class.text-gray-600]=\"selectedOption !== 'scraper'\"\r\n        [class.dark:text-gray-300]=\"selectedOption !== 'scraper'\"\r\n        class=\"py-3 px-6 text-lg font-medium border-b-2 transition-colors duration-200 focus:outline-none hover:text-primary-dark\"\r\n      >\r\n        Use Job Scraper\r\n      </button>\r\n    </div>\r\n\r\n    <div *ngIf=\"selectedOption === 'form'\" class=\"card animate-fade-in\">\r\n      <h2 class=\"text-xl font-semibold mb-6 text-gray-800 dark:text-white\">Job Details Form</h2>\r\n\r\n      <form [formGroup]=\"jobForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div *ngIf=\"currentFormPage === 0\" class=\"grid grid-cols-1 md:grid-cols-2 gap-6 animate-fade-in\">\r\n\r\n          <div class=\"col-span-2 p-4 rounded-lg flex items-center justify-between transition-colors duration-300\"\r\n            [ngClass]=\"{\r\n              'bg-green-100 text-green-800 dark:bg-green-900/40 dark:text-green-200': riskLevel === 'Low Risk',\r\n              'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/40 dark:text-yellow-200': riskLevel === 'Medium Risk',\r\n              'bg-orange-100 text-orange-800 dark:bg-orange-900/40 dark:text-orange-200': riskLevel === 'High Risk',\r\n              'bg-red-100 text-red-800 dark:bg-red-900/40 dark:text-red-200': riskLevel === 'Very High Risk'\r\n            }\">\r\n            <div class=\"flex items-center\">\r\n              <svg class=\"h-6 w-6 mr-3\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"\r\n                [ngClass]=\"{\r\n                  'text-green-600 dark:text-green-300': riskLevel === 'Low Risk',\r\n                  'text-yellow-600 dark:text-yellow-300': riskLevel === 'Medium Risk',\r\n                  'text-orange-600 dark:text-orange-300': riskLevel === 'High Risk',\r\n                  'text-red-600 dark:text-red-300': riskLevel === 'Very High Risk'\r\n                }\">\r\n                <path *ngIf=\"riskLevel === 'Low Risk'\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                <path *ngIf=\"riskLevel === 'Medium Risk'\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\r\n                <path *ngIf=\"riskLevel === 'High Risk' || riskLevel === 'Very High Risk'\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n              </svg>\r\n              <span class=\"font-bold text-lg\">Risk Level: {{ riskLevel }}</span>\r\n            </div>\r\n            <div *ngIf=\"riskLevelDetails.length > 0\" class=\"text-sm cursor-pointer\" tabindex=\"0\"\r\n                matTooltip=\"{{ riskLevelDetails.join('\\n') }}\"\r\n                matTooltipPosition=\"below\"\r\n                matTooltipClass=\"bg-gray-700 text-white p-2 rounded-md shadow-lg text-xs max-w-sm\">\r\n                <span class=\"text-gray-700 dark:text-gray-300 hover:underline\">Details</span>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label for=\"title\" class=\"form-label\">Title <span class=\"text-red-500\">*</span></label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"title\"\r\n              formControlName=\"title\"\r\n              class=\"form-input\"\r\n              placeholder=\"e.g. Software Engineer\"\r\n              [ngClass]=\"{'border-red-500': isFieldInvalid('title')}\"\r\n            >\r\n            <div *ngIf=\"isFieldInvalid('title')\" class=\"mt-1 text-sm text-red-500\">\r\n              Title is required.\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"companyName\" class=\"form-label\">Company Name <span class=\"text-red-500\">*</span></label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"companyName\"\r\n              formControlName=\"companyName\"\r\n              class=\"form-input\"\r\n              placeholder=\"e.g. Acme Corp.\"\r\n              [ngClass]=\"{'border-red-500': isFieldInvalid('companyName')}\"\r\n            >\r\n            <div *ngIf=\"isFieldInvalid('companyName')\" class=\"mt-1 text-sm text-red-500\">\r\n              Company name is required.\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"companyEmail\" class=\"form-label\">Company Email <span class=\"text-red-500\">*</span></label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"companyEmail\"\r\n              formControlName=\"companyEmail\"\r\n              class=\"form-input\"\r\n              placeholder=\"e.g. contact@acmecorp.com\"\r\n              [ngClass]=\"{'border-red-500': isFieldInvalid('companyEmail')}\"\r\n            >\r\n            <div *ngIf=\"isFieldInvalid('companyEmail')\" class=\"mt-1 text-sm text-red-500\">\r\n              <span *ngIf=\"jobForm.get('companyEmail')?.errors?.['required']\">Company email is required.</span>\r\n              <span *ngIf=\"jobForm.get('companyEmail')?.errors?.['email'] && !jobForm.get('companyEmail')?.errors?.['required']\">Invalid email format.</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"jobUrl\" class=\"form-label\">Job URL</label>\r\n            <div class=\"flex items-center space-x-2\">\r\n              <input\r\n                type=\"url\"\r\n                id=\"jobUrl\"\r\n                formControlName=\"jobUrl\"\r\n                class=\"form-input flex-1\"\r\n                placeholder=\"e.g. https://jobs.acmecorp.com/software-engineer\"\r\n                [ngClass]=\"{'border-red-500': isFieldInvalid('jobUrl')}\"\r\n              >\r\n              <button\r\n                type=\"button\"\r\n                (click)=\"analyzeJobUrl()\"\r\n                [disabled]=\"urlAnalysisStatus === 'analyzing' || jobForm.get('jobUrl')?.invalid || jobForm.get('jobUrl')?.value === ''\"\r\n                class=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\r\n                        dark:bg-blue-700 dark:hover:bg-blue-800 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-200\"\r\n              >\r\n                <span *ngIf=\"urlAnalysisStatus !== 'analyzing'\">Analyser l'URL</span>\r\n                <span *ngIf=\"urlAnalysisStatus === 'analyzing'\">\r\n                  <svg class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                    <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n                    <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                  </svg>\r\n                  Analyse en cours...\r\n                </span>\r\n              </button>\r\n            </div>\r\n\r\n            <div *ngIf=\"urlAnalysisStatus !== 'idle'\" class=\"mt-2 text-sm\">\r\n              <p [ngClass]=\"{\r\n                  'text-green-600 dark:text-green-400': urlAnalysisStatus === 'safe',\r\n                  'text-red-600 dark:text-red-400': urlAnalysisStatus === 'suspicious' || urlAnalysisStatus === 'error',\r\n                  'text-blue-600 dark:text-blue-400': urlAnalysisStatus === 'analyzing'\r\n                }\">\r\n                {{ urlAnalysisMessage }}\r\n              </p>\r\n            </div>\r\n\r\n            <div *ngIf=\"isFieldInvalid('jobUrl')\" class=\"mt-1 text-sm text-red-500\">\r\n              Please enter a valid URL.\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label for=\"location\" class=\"form-label\">Location <span class=\"text-red-500\">*</span></label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"location\"\r\n              formControlName=\"location\"\r\n              class=\"form-input\"\r\n              placeholder=\"e.g. Country Name\"\r\n              [ngClass]=\"{'border-red-500': isFieldInvalid('location')}\"\r\n            >\r\n            <div *ngIf=\"isFieldInvalid('location')\" class=\"mt-1 text-sm text-red-500\">\r\n              Location is required.\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"industry\" class=\"form-label\">Industry <span class=\"text-red-500\">*</span></label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"industry\"\r\n              formControlName=\"industry\"\r\n              class=\"form-input\"\r\n              placeholder=\"e.g. Technology\"\r\n              [ngClass]=\"{'border-red-500': isFieldInvalid('industry')}\"\r\n            >\r\n            <div *ngIf=\"isFieldInvalid('industry')\" class=\"mt-1 text-sm text-red-500\">\r\n              Industry is required.\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"salaryRange\" class=\"form-label\">Salary Range</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"salaryRange\"\r\n              formControlName=\"salaryRange\"\r\n              class=\"form-input\"\r\n              placeholder=\"e.g. $80,000 - $100,000\"\r\n            >\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"companyProfile\" class=\"form-label\">Company Profile</label>\r\n            <textarea\r\n              id=\"companyProfile\"\r\n              formControlName=\"companyProfile\"\r\n              rows=\"2\"\r\n              class=\"form-input\"\r\n              placeholder=\"Brief description of the company or its mission.\"\r\n            ></textarea>\r\n          </div>\r\n\r\n          <div class=\"col-span-2\">\r\n            <label for=\"description\" class=\"form-label\">Job Description <span class=\"text-red-500\">*</span></label>\r\n            <textarea\r\n              id=\"description\"\r\n              formControlName=\"description\"\r\n              rows=\"4\"\r\n              class=\"form-input\"\r\n              placeholder=\"Detailed job description\"\r\n              [ngClass]=\"{'border-red-500': isFieldInvalid('description')}\"\r\n            ></textarea>\r\n            <div *ngIf=\"isFieldInvalid('description')\" class=\"mt-1 text-sm text-red-500\">\r\n              Job description is required.\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-span-2\">\r\n            <label for=\"requirements\" class=\"form-label\">Requirements <span class=\"text-red-500\">*</span></label>\r\n            <textarea\r\n              id=\"requirements\"\r\n              formControlName=\"requirements\"\r\n              rows=\"4\"\r\n              class=\"form-input\"\r\n              placeholder=\"Job requirements and qualifications\"\r\n              [ngClass]=\"{'border-red-500': isFieldInvalid('requirements')}\"\r\n            ></textarea>\r\n            <div *ngIf=\"isFieldInvalid('requirements')\" class=\"mt-1 text-sm text-red-500\">\r\n              Requirements are required.\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"currentFormPage === 1\" class=\"grid grid-cols-1 md:grid-cols-2 gap-6 animate-fade-in\">\r\n          <div>\r\n            <label for=\"employmentType\" class=\"form-label\">Employment Type</label>\r\n            <select id=\"employmentType\" formControlName=\"employmentType\" class=\"form-select\">\r\n              <option value=\"\">Select an option</option>\r\n              <option value=\"Full-time\">Full-time</option>\r\n              <option value=\"Part-time\">Part-time</option>\r\n              <option value=\"Contract\">Contract</option>\r\n              <option value=\"Temporary\">Temporary</option>\r\n              <option value=\"Internship\">Internship</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"requiredExperience\" class=\"form-label\">Required Experience (Years)</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"requiredExperience\"\r\n              formControlName=\"requiredExperience\"\r\n              class=\"form-input\"\r\n              placeholder=\"e.g. 3\"\r\n              min=\"0\"\r\n            >\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"requiredEducation\" class=\"form-label\">Required Education</label>\r\n            <select id=\"requiredEducation\" formControlName=\"requiredEducation\" class=\"form-select\">\r\n              <option value=\"\">Select an option</option>\r\n              <option value=\"High School\">High School</option>\r\n              <option value=\"Associate's Degree\">Associate's Degree</option>\r\n              <option value=\"Bachelor's Degree\">Bachelor's Degree</option>\r\n              <option value=\"Master's Degree\">Master's Degree</option>\r\n              <option value=\"Doctorate\">Doctorate</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"telecommuting\" class=\"form-label\">Telecommuting</label>\r\n            <select id=\"telecommuting\" formControlName=\"telecommuting\" class=\"form-select\">\r\n              <option [ngValue]=\"null\">Select an option</option>\r\n              <option [ngValue]=\"true\">Yes</option>\r\n              <option [ngValue]=\"false\">No</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"hasCompanyLogo\" class=\"form-label\">Has Company Logo</label>\r\n            <select id=\"hasCompanyLogo\" formControlName=\"hasCompanyLogo\" class=\"form-select\">\r\n              <option [ngValue]=\"null\">Select an option</option>\r\n              <option [ngValue]=\"true\">Yes</option>\r\n              <option [ngValue]=\"false\">No</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"hasQuestions\" class=\"form-label\">Has Questions</label>\r\n            <select id=\"hasQuestions\" formControlName=\"hasQuestions\" class=\"form-select\">\r\n              <option [ngValue]=\"null\">Select an option</option>\r\n              <option [ngValue]=\"true\">Yes</option>\r\n              <option [ngValue]=\"false\">No</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"department\" class=\"form-label\">Department</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"department\"\r\n              formControlName=\"department\"\r\n              class=\"form-input\"\r\n              placeholder=\"e.g. Engineering\"\r\n            >\r\n          </div>\r\n          <div>\r\n            <label for=\"function\" class=\"form-label\">Function</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"function\"\r\n              formControlName=\"function\"\r\n              class=\"form-input\"\r\n              placeholder=\"e.g. Development\"\r\n            >\r\n          </div>\r\n\r\n          <div class=\"col-span-2\">\r\n            <label for=\"benefits\" class=\"form-label\">Benefits</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"benefits\"\r\n              formControlName=\"benefits\"\r\n              class=\"form-input\"\r\n              placeholder=\"e.g. Health insurance, Paid time off, 401K\"\r\n            >\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"mt-8 flex\" [ngClass]=\"{'justify-between': currentFormPage > 0, 'justify-end': currentFormPage === 0}\">\r\n          <button\r\n            type=\"button\"\r\n            *ngIf=\"currentFormPage > 0\"\r\n            (click)=\"previousFormPage()\"\r\n            class=\"btn btn-secondary\"\r\n          >\r\n            Previous\r\n          </button>\r\n\r\n          <button\r\n            type=\"button\"\r\n            *ngIf=\"currentFormPage < 1\"\r\n            (click)=\"nextFormPage()\"\r\n            class=\"btn btn-primary\"\r\n          >\r\n            Next\r\n          </button>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            *ngIf=\"currentFormPage === 1\"\r\n            class=\"btn btn-primary\"\r\n            [disabled]=\"jobForm.invalid || isSubmitting\"\r\n            >\r\n            <span *ngIf=\"!isSubmitting\">Check Job</span>\r\n            <span *ngIf=\"isSubmitting\" class=\"flex items-center\">\r\n              <svg class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n                <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n              </svg>\r\n              Processing...\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <div *ngIf=\"selectedOption === 'scraper'\" class=\"card animate-fade-in\">\r\n      <h2 class=\"text-xl font-semibold mb-6 text-gray-800 dark:text-white\">Job Scraper</h2>\r\n      <p class=\"text-gray-600 dark:text-gray-300 mb-6\">Enter the URL of a job posting to scrape and analyze its details.</p>\r\n\r\n      <form [formGroup]=\"scraperForm\" (ngSubmit)=\"onScraperSubmit()\">\r\n        <div class=\"mb-6\">\r\n          <label for=\"url\" class=\"form-label\">Job Posting URL <span class=\"text-red-500\">*</span></label>\r\n          <input\r\n            type=\"url\"\r\n            id=\"url\"\r\n            formControlName=\"url\"\r\n            class=\"form-input\"\r\n            placeholder=\"https://example.com/job-posting\"\r\n            [ngClass]=\"{'border-red-500': isScraperFieldInvalid('url')}\"\r\n          >\r\n          <div *ngIf=\"isScraperFieldInvalid('url')\" class=\"mt-1 text-sm text-red-500\">\r\n            Please enter a valid URL.\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"flex justify-end\">\r\n          <button\r\n            type=\"submit\"\r\n            class=\"btn btn-primary\"\r\n            [disabled]=\"scraperForm.invalid || isScraperSubmitting\"\r\n          >\r\n            <span *ngIf=\"!isScraperSubmitting\">Scrape and Check</span>\r\n            <span *ngIf=\"isScraperSubmitting\" class=\"flex items-center\">\r\n              <svg class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n                <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n              </svg>\r\n              Processing...\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"showModal && jobResult\" class=\"fixed inset-0 bg-gray-900 bg-opacity-75 dark:bg-opacity-90 flex items-center justify-center z-50 p-4\">\r\n  <div class=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6 w-full max-w-md relative animate-fade-in-up\">\r\n    <button\r\n      (click)=\"closeModal()\"\r\n      class=\"absolute top-3 right-3 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 focus:outline-none\"\r\n      aria-label=\"Close\"\r\n    >\r\n      <svg class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n      </svg>\r\n    </button>\r\n\r\n    <div class=\"flex items-center mb-4\">\r\n      <div\r\n        [ngClass]=\"{\r\n          'bg-green-100 dark:bg-green-900': !jobResult.isFake,\r\n          'bg-red-100 dark:bg-red-900': jobResult.isFake\r\n        }\"\r\n        class=\"p-3 rounded-full mr-4\"\r\n      >\r\n        <svg *ngIf=\"!jobResult.isFake\" xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6 text-green-600 dark:text-green-300\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\r\n        </svg>\r\n        <svg *ngIf=\"jobResult.isFake\" xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6 text-red-600 dark:text-red-300\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n        </svg>\r\n      </div>\r\n      <h2 class=\"text-xl font-semibold text-gray-800 dark:text-white\">\r\n        {{ jobResult.isFake ? 'Fraudulent Job Detected' : 'Job Appears Legitimate' }}\r\n      </h2>\r\n    </div>\r\n\r\n    <div\r\n      class=\"p-4 mb-4 rounded-lg\"\r\n      [ngClass]=\"{\r\n        'bg-green-50 dark:bg-green-900/20': !jobResult.isFake,\r\n        'bg-red-50 dark:bg-red-900/20': jobResult.isFake\r\n      }\"\r\n    >\r\n      <p class=\"text-gray-800 dark:text-gray-200\">\r\n        {{ jobResult.message }}\r\n      </p>\r\n    </div>\r\n\r\n    <div *ngIf=\"jobResult.details && jobResult.details.length > 0\" class=\"mt-6\">\r\n      <h3 class=\"text-lg font-medium mb-3 text-gray-800 dark:text-white\">Analysis Details</h3>\r\n      <div class=\"space-y-2\">\r\n        <div *ngFor=\"let detail of jobResult.details\" class=\"flex\">\r\n          <div class=\"mr-2 text-gray-500 dark:text-gray-400\">•</div>\r\n          <div class=\"text-gray-700 dark:text-gray-300\">{{ detail }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"mt-6 text-right\">\r\n      <button (click)=\"closeModal()\" class=\"btn btn-secondary\">\r\n        Close\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}